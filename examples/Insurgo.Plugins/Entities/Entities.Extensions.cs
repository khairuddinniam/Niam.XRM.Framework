using Niam.XRM.Framework.Interfaces.Data;
using Microsoft.Xrm.Sdk;

namespace Insurgo.Plugins.Entities
{
    public static class EntityBaseExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<SystemUser> columnSet)
            where T : EntityBase => wrapper.GetRelated(e => e.CreatedBy, columnSet);

        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<SystemUser> columnSet)
            where T : EntityBase => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);

        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<SystemUser> columnSet)
            where T : EntityBase => wrapper.GetRelated(e => e.ModifiedBy, columnSet);

        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<SystemUser> columnSet)
            where T : EntityBase => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
    }

    public static class UserOrTeamEntityExt
    {
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<BusinessUnit> columnSet)
            where T : UserOrTeamEntity => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);

        /// <summary>
        /// Related attribute: owningteam. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwningTeam<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<Team> columnSet)
            where T : UserOrTeamEntity => wrapper.GetRelated(e => e.OwningTeam, columnSet);

        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwningUser<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<SystemUser> columnSet)
            where T : UserOrTeamEntity => wrapper.GetRelated(e => e.OwningUser, columnSet);

        /// <summary>
        /// Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<Team> columnSet)
            where T : UserOrTeamEntity => wrapper.GetRelated(e => e.OwnerId, columnSet);

        /// <summary>
        /// Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner<T>(this IEntityWrapperRelation<T> wrapper, IColumnSet<SystemUser> columnSet)
            where T : UserOrTeamEntity => wrapper.GetRelated(e => e.OwnerId, columnSet);
    }

    public static class AccountExt
    {
        /// <summary>
        /// Related attribute: masterid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetMasterID(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.MasterId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_billingaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBillingAccount(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BillingAccount, columnSet);
        /// <summary>
        /// Related attribute: parentaccountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetParentAccount(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ParentAccountId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_preferredresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetPreferredResourceDeprecated(this IEntityWrapperRelation<Account> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PreferredResource, columnSet);
        /// <summary>
        /// Related attribute: primarycontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetPrimaryContact(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.PrimaryContactId, columnSet);
        /// <summary>
        /// Related attribute: preferredequipmentid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetPreferredFacilityEquipment(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.PreferredEquipmentId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<Account> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<Account> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: originatingleadid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetOriginatingLead(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.OriginatingLeadId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salestaxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetSalesTaxCode(this IEntityWrapperRelation<Account> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesTaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workhourtemplate. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetWorkHourTemplate(this IEntityWrapperRelation<Account> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workhourtemplate, columnSet);
        /// <summary>
        /// Related attribute: defaultpricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetProductPriceList(this IEntityWrapperRelation<Account> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.DefaultPriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: preferredserviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetPreferredService(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.PreferredServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Account> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Account> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: preferredsystemuserid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetPreferredUser(this IEntityWrapperRelation<Account> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.PreferredSystemUserId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceterritory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetServiceTerritory(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceTerritory, columnSet);
        /// <summary>
        /// Related attribute: territoryid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetTerritory(this IEntityWrapperRelation<Account> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.TerritoryId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Account> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ACIViewMapperExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ACIViewMapper> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ActionCardExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegarding(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: cardtypeid. Lookup to entity: cardtype.
        /// </summary>
        public static IEntityWrapper<CardType> GetCardType(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<CardType> columnSet)
            => wrapper.GetRelated(e => e.CardTypeId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ActionCard> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ActionCardUserSettingsExt
    {
        /// <summary>
        /// Related attribute: cardtypeid. Lookup to entity: cardtype.
        /// </summary>
        public static IEntityWrapper<CardType> GetcardType(this IEntityWrapperRelation<ActionCardUserSettings> wrapper, IColumnSet<CardType> columnSet)
            => wrapper.GetRelated(e => e.CardTypeId, columnSet);

    }
    public static class ActionCardUserStateExt
    {
        /// <summary>
        /// Related attribute: actioncardid. Lookup to entity: actioncard.
        /// </summary>
        public static IEntityWrapper<ActionCard> GetActionCardId(this IEntityWrapperRelation<ActionCardUserState> wrapper, IColumnSet<ActionCard> columnSet)
            => wrapper.GetRelated(e => e.ActionCardId, columnSet);
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: actioncard.
        /// </summary>
        public static IEntityWrapper<ActionCard> GetOwningBusinessUnit(this IEntityWrapperRelation<ActionCardUserState> wrapper, IColumnSet<ActionCard> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ActionCardUserState> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ActionCardUserState> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ActionCardUserState> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ActivityMimeAttachmentExt
    {
        /// <summary>
        /// Related attribute: activityid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetRegarding(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.ActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetItem(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetItem(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Related attribute: attachmentid. Lookup to entity: attachment.
        /// </summary>
        public static IEntityWrapper<Attachment> GetAttachment(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<Attachment> columnSet)
            => wrapper.GetRelated(e => e.AttachmentId, columnSet);
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwnerUser(this IEntityWrapperRelation<ActivityMimeAttachment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);

    }
    public static class ActivityPartyExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partyid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetParty(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.PartyId, columnSet);
        /// <summary>
        /// Related attribute: activityid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetActivity(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.ActivityId, columnSet);
        /// <summary>
        /// Related attribute: resourcespecid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetResourceSpecification(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.ResourceSpecId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ActivityParty> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class ActivityPointerExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ActivityPointer> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class AdvancedSimilarityRuleExt
    {
        /// <summary>
        /// Related attribute: azureserviceconnectionid. Lookup to entity: azureserviceconnection.
        /// </summary>
        public static IEntityWrapper<AzureServiceConnection> GetConnection(this IEntityWrapperRelation<AdvancedSimilarityRule> wrapper, IColumnSet<AzureServiceConnection> columnSet)
            => wrapper.GetRelated(e => e.AzureServiceConnectionId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<AdvancedSimilarityRule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AnnotationExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: channelaccessprofileruleitem.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRuleItem> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ChannelAccessProfileRuleItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: convertrule.
        /// </summary>
        public static IEntityWrapper<ConvertRule> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ConvertRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: duplicaterule.
        /// </summary>
        public static IEntityWrapper<DuplicateRule> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<DuplicateRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutioncomponentdatasource.
        /// </summary>
        public static IEntityWrapper<msdyn_solutioncomponentdatasource> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_solutioncomponentdatasource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhistorydatasource.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhistorydatasource> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_solutionhistorydatasource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: routingrule.
        /// </summary>
        public static IEntityWrapper<RoutingRule> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<RoutingRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: routingruleitem.
        /// </summary>
        public static IEntityWrapper<RoutingRuleItem> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<RoutingRuleItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sharepointdocument.
        /// </summary>
        public static IEntityWrapper<SharePointDocument> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<SharePointDocument> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetRegarding(this IEntityWrapperRelation<Annotation> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);

    }
    public static class AnnualFiscalCalendarExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedOnBehalfBy(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedOnBehalfBy(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: salespersonid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesPersonId(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesPersonId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<AnnualFiscalCalendar> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class apisettingsExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<apisettings> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AppConfigExt
    {
        /// <summary>
        /// Related attribute: appmoduleid. Lookup to entity: appmodule.
        /// </summary>
        public static IEntityWrapper<AppModule> GetAppModuleID(this IEntityWrapperRelation<AppConfig> wrapper, IColumnSet<AppModule> columnSet)
            => wrapper.GetRelated(e => e.AppModuleId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<AppConfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AppConfigInstanceExt
    {
        /// <summary>
        /// Related attribute: appconfigid. Lookup to entity: appconfig.
        /// </summary>
        public static IEntityWrapper<AppConfig> GetAppConfigID(this IEntityWrapperRelation<AppConfigInstance> wrapper, IColumnSet<AppConfig> columnSet)
            => wrapper.GetRelated(e => e.AppConfigId, columnSet);
        /// <summary>
        /// Related attribute: appconfigmasterid. Lookup to entity: appconfigmaster.
        /// </summary>
        public static IEntityWrapper<AppConfigMaster> GetAppConfigMasterID(this IEntityWrapperRelation<AppConfigInstance> wrapper, IColumnSet<AppConfigMaster> columnSet)
            => wrapper.GetRelated(e => e.AppConfigMasterId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<AppConfigInstance> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AppConfigMasterExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<AppConfigMaster> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ApplicationFileExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ApplicationFile> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AppModuleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<AppModule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: publisherid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetPublisher(this IEntityWrapperRelation<AppModule> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.PublisherId, columnSet);

    }
    public static class AppModuleComponentExt
    {
        /// <summary>
        /// Related attribute: appmoduleidunique. Lookup to entity: appmodule.
        /// </summary>
        public static IEntityWrapper<AppModule> GetAppModule(this IEntityWrapperRelation<AppModuleComponent> wrapper, IColumnSet<AppModule> columnSet)
            => wrapper.GetRelated(e => e.AppModuleIdUnique, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<AppModuleComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<AppModuleComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<AppModuleComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<AppModuleComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class AppModuleRolesExt
    {
        /// <summary>
        /// Related attribute: appmoduleid. Lookup to entity: appmodule.
        /// </summary>
        public static IEntityWrapper<AppModule> GetAppModule(this IEntityWrapperRelation<AppModuleRoles> wrapper, IColumnSet<AppModule> columnSet)
            => wrapper.GetRelated(e => e.AppModuleId, columnSet);
        /// <summary>
        /// Related attribute: roleid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetRole(this IEntityWrapperRelation<AppModuleRoles> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.RoleId, columnSet);

    }
    public static class AppointmentExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Appointment> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class AsyncOperationExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: accountleads.
        /// </summary>
        public static IEntityWrapper<AccountLeads> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<AccountLeads> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: activitymimeattachment.
        /// </summary>
        public static IEntityWrapper<ActivityMimeAttachment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ActivityMimeAttachment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: annotation.
        /// </summary>
        public static IEntityWrapper<Annotation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Annotation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: annualfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<AnnualFiscalCalendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<AnnualFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributemap.
        /// </summary>
        public static IEntityWrapper<AttributeMap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<AttributeMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingexchangesyncidmapping.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingExchangeSyncIdMapping> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceBookingExchangeSyncIdMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperationlog.
        /// </summary>
        public static IEntityWrapper<BulkOperationLog> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BulkOperationLog> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunitnewsarticle.
        /// </summary>
        public static IEntityWrapper<BusinessUnitNewsArticle> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<BusinessUnitNewsArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivityitem.
        /// </summary>
        public static IEntityWrapper<CampaignActivityItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CampaignActivityItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignitem.
        /// </summary>
        public static IEntityWrapper<CampaignItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CampaignItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: childincidentcount.
        /// </summary>
        public static IEntityWrapper<ChildIncidentCount> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ChildIncidentCount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitoraddress.
        /// </summary>
        public static IEntityWrapper<CompetitorAddress> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CompetitorAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitorproduct.
        /// </summary>
        public static IEntityWrapper<CompetitorProduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CompetitorProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitorsalesliterature.
        /// </summary>
        public static IEntityWrapper<CompetitorSalesLiterature> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CompetitorSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connection.
        /// </summary>
        public static IEntityWrapper<Connection> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Connection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactinvoices.
        /// </summary>
        public static IEntityWrapper<ContactInvoices> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ContactInvoices> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactleads.
        /// </summary>
        public static IEntityWrapper<ContactLeads> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ContactLeads> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactorders.
        /// </summary>
        public static IEntityWrapper<ContactOrders> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ContactOrders> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactquotes.
        /// </summary>
        public static IEntityWrapper<ContactQuotes> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ContactQuotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: convertrule.
        /// </summary>
        public static IEntityWrapper<ConvertRule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ConvertRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customerrelationship.
        /// </summary>
        public static IEntityWrapper<CustomerRelationship> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<CustomerRelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: displaystring.
        /// </summary>
        public static IEntityWrapper<DisplayString> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<DisplayString> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyassociation.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyAssociation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<DynamicPropertyAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyinstance.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyInstance> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<DynamicPropertyInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementcontacts.
        /// </summary>
        public static IEntityWrapper<EntitlementContacts> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementContacts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementProducts> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementProducts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplateproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateProducts> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntitlementTemplateProducts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityanalyticsconfig.
        /// </summary>
        public static IEntityWrapper<EntityAnalyticsConfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntityAnalyticsConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitymap.
        /// </summary>
        public static IEntityWrapper<EntityMap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EntityMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalpartyitem.
        /// </summary>
        public static IEntityWrapper<ExternalPartyItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ExternalPartyItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fixedmonthlyfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<FixedMonthlyFiscalCalendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<FixedMonthlyFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: import.
        /// </summary>
        public static IEntityWrapper<Import> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Import> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importdata.
        /// </summary>
        public static IEntityWrapper<ImportData> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ImportData> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importfile.
        /// </summary>
        public static IEntityWrapper<ImportFile> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ImportFile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importlog.
        /// </summary>
        public static IEntityWrapper<ImportLog> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ImportLog> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentknowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<IncidentKnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<IncidentKnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: isvconfig.
        /// </summary>
        public static IEntityWrapper<IsvConfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<IsvConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticlecomment.
        /// </summary>
        public static IEntityWrapper<KbArticleComment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<KbArticleComment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticletemplate.
        /// </summary>
        public static IEntityWrapper<KbArticleTemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<KbArticleTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadaddress.
        /// </summary>
        public static IEntityWrapper<LeadAddress> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<LeadAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadcompetitors.
        /// </summary>
        public static IEntityWrapper<LeadCompetitors> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<LeadCompetitors> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadproduct.
        /// </summary>
        public static IEntityWrapper<LeadProduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<LeadProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: listmember.
        /// </summary>
        public static IEntityWrapper<ListMember> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ListMember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailmergetemplate.
        /// </summary>
        public static IEntityWrapper<MailMergeTemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<MailMergeTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: monthlyfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<MonthlyFiscalCalendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<MonthlyFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitycompetitors.
        /// </summary>
        public static IEntityWrapper<OpportunityCompetitors> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<OpportunityCompetitors> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: post.
        /// </summary>
        public static IEntityWrapper<Post> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Post> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: postfollow.
        /// </summary>
        public static IEntityWrapper<PostFollow> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<PostFollow> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: privilege.
        /// </summary>
        public static IEntityWrapper<Privilege> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Privilege> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsalesliterature.
        /// </summary>
        public static IEntityWrapper<ProductSalesLiterature> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ProductSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quarterlyfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<QuarterlyFiscalCalendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<QuarterlyFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queueitem.
        /// </summary>
        public static IEntityWrapper<QueueItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<QueueItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: relationshiprolemap.
        /// </summary>
        public static IEntityWrapper<RelationshipRoleMap> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RelationshipRoleMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resource.
        /// </summary>
        public static IEntityWrapper<Resource> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Resource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroupexpansion.
        /// </summary>
        public static IEntityWrapper<ResourceGroupExpansion> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ResourceGroupExpansion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: rollupfield.
        /// </summary>
        public static IEntityWrapper<RollupField> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RollupField> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: routingrule.
        /// </summary>
        public static IEntityWrapper<RoutingRule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RoutingRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: routingruleitem.
        /// </summary>
        public static IEntityWrapper<RoutingRuleItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<RoutingRuleItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesprocessinstance.
        /// </summary>
        public static IEntityWrapper<SalesProcessInstance> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SalesProcessInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: savedquery.
        /// </summary>
        public static IEntityWrapper<SavedQuery> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SavedQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: semiannualfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<SemiAnnualFiscalCalendar> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SemiAnnualFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: servicecontractcontacts.
        /// </summary>
        public static IEntityWrapper<ServiceContractContacts> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<ServiceContractContacts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: similarityrule.
        /// </summary>
        public static IEntityWrapper<SimilarityRule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SimilarityRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemform.
        /// </summary>
        public static IEntityWrapper<SystemForm> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SystemForm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: theme.
        /// </summary>
        public static IEntityWrapper<Theme> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Theme> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topic.
        /// </summary>
        public static IEntityWrapper<Topic> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Topic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topichistory.
        /// </summary>
        public static IEntityWrapper<TopicHistory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<TopicHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: userform.
        /// </summary>
        public static IEntityWrapper<UserForm> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<UserForm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: usermapping.
        /// </summary>
        public static IEntityWrapper<UserMapping> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<UserMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: userquery.
        /// </summary>
        public static IEntityWrapper<UserQuery> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<UserQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetRegarding(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: owningextensionid. Lookup to entity: sdkmessageprocessingstep.
        /// </summary>
        public static IEntityWrapper<SdkMessageProcessingStep> GetOwningExtension(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<SdkMessageProcessingStep> columnSet)
            => wrapper.GetRelated(e => e.OwningExtensionId, columnSet);
        /// <summary>
        /// Related attribute: workflowactivationid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflowActivationId(this IEntityWrapperRelation<AsyncOperation> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowActivationId, columnSet);

    }
    public static class AttributeImageConfigExt
    {

    }
    public static class AttributeMapExt
    {
        /// <summary>
        /// Related attribute: parentattributemapid. Lookup to entity: attributemap.
        /// </summary>
        public static IEntityWrapper<AttributeMap> GetParentAttributeMapId(this IEntityWrapperRelation<AttributeMap> wrapper, IColumnSet<AttributeMap> columnSet)
            => wrapper.GetRelated(e => e.ParentAttributeMapId, columnSet);
        /// <summary>
        /// Related attribute: entitymapid. Lookup to entity: entitymap.
        /// </summary>
        public static IEntityWrapper<EntityMap> GetEntityMapId(this IEntityWrapperRelation<AttributeMap> wrapper, IColumnSet<EntityMap> columnSet)
            => wrapper.GetRelated(e => e.EntityMapId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<AttributeMap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AuditExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: userid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetChangedBy(this IEntityWrapperRelation<Audit> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.UserId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: userid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetChangedBy(this IEntityWrapperRelation<Audit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.UserId, columnSet);
        /// <summary>
        /// Related attribute: callinguserid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCallingUser(this IEntityWrapperRelation<Audit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CallingUserId, columnSet);

    }
    public static class AuthorizationServerExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<AuthorizationServer> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class AzureServiceConnectionExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<AzureServiceConnection> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class BookableResourceExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Related attribute: calendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetCalendar(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.CalendarId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_facilityequipmentid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetFacilityEquipment(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_facilityequipmentid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_organizationalunit. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetOrganizationalUnit(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_organizationalunit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: userid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetUser(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.UserId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResource> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookableResourceBookingExt
    {
        /// <summary>
        /// Related attribute: msdyn_appointmentbookingid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetAppointmentBooking(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AppointmentBookingId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_crew. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetCrew(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Crew, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcegroup. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResourceGroup(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceGroup, columnSet);
        /// <summary>
        /// Related attribute: resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.Resource, columnSet);
        /// <summary>
        /// Related attribute: header. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetHeader(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.Header, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategoryid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceCategory(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcecategoryid, columnSet);
        /// <summary>
        /// Related attribute: bookingstatus. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetBookingStatus(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.BookingStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingdate. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetAgreementBookingDate(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingDate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookingsetupmetadataid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetBookingSetupMetadata(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookingSetupMetadataId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectteamid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetProjectTeamMember(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectteamid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requirementgroupid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRequirementGroup(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_requirementgroupid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_timegroupdetailselected. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetTimeGroupDetailSelected(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeGroupDetailSelected, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceappointment. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetServiceActivity(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_serviceappointment, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResourceBooking> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookableResourceBookingExchangeSyncIdMappingExt
    {

    }
    public static class BookableResourceBookingHeaderExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresourceid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresourceid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategoryid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceCategory(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcecategoryid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookingstatusid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetBookingStatus(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookingstatusid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectteamid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetProjectTeamMember(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectteamid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResourceBookingHeader> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookableResourceCategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<BookableResourceCategory> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResourceCategory> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookableResourceCategoryAssnExt
    {
        /// <summary>
        /// Related attribute: resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<BookableResourceCategoryAssn> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.Resource, columnSet);
        /// <summary>
        /// Related attribute: resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceCategory(this IEntityWrapperRelation<BookableResourceCategoryAssn> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResourceCategoryAssn> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookableResourceCharacteristicExt
    {
        /// <summary>
        /// Related attribute: resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<BookableResourceCharacteristic> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.Resource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_supportingrecord. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetSupportingRecord(this IEntityWrapperRelation<BookableResourceCharacteristic> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_supportingrecord, columnSet);
        /// <summary>
        /// Related attribute: characteristic. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetCharacteristic(this IEntityWrapperRelation<BookableResourceCharacteristic> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.Characteristic, columnSet);
        /// <summary>
        /// Related attribute: ratingvalue. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRatingValue(this IEntityWrapperRelation<BookableResourceCharacteristic> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.RatingValue, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResourceCharacteristic> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookableResourceGroupExt
    {
        /// <summary>
        /// Related attribute: childresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetChildResource(this IEntityWrapperRelation<BookableResourceGroup> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.ChildResource, columnSet);
        /// <summary>
        /// Related attribute: parentresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetParentResource(this IEntityWrapperRelation<BookableResourceGroup> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.ParentResource, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookableResourceGroup> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BookingStatusExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BookingStatus> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BulkDeleteFailureExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: accountleads.
        /// </summary>
        public static IEntityWrapper<AccountLeads> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<AccountLeads> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: activitymimeattachment.
        /// </summary>
        public static IEntityWrapper<ActivityMimeAttachment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ActivityMimeAttachment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: annotation.
        /// </summary>
        public static IEntityWrapper<Annotation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Annotation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: annualfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<AnnualFiscalCalendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<AnnualFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributemap.
        /// </summary>
        public static IEntityWrapper<AttributeMap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<AttributeMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingexchangesyncidmapping.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingExchangeSyncIdMapping> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceBookingExchangeSyncIdMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperationlog.
        /// </summary>
        public static IEntityWrapper<BulkOperationLog> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BulkOperationLog> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunitnewsarticle.
        /// </summary>
        public static IEntityWrapper<BusinessUnitNewsArticle> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BusinessUnitNewsArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivityitem.
        /// </summary>
        public static IEntityWrapper<CampaignActivityItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CampaignActivityItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignitem.
        /// </summary>
        public static IEntityWrapper<CampaignItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CampaignItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: childincidentcount.
        /// </summary>
        public static IEntityWrapper<ChildIncidentCount> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ChildIncidentCount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitoraddress.
        /// </summary>
        public static IEntityWrapper<CompetitorAddress> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CompetitorAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitorproduct.
        /// </summary>
        public static IEntityWrapper<CompetitorProduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CompetitorProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitorsalesliterature.
        /// </summary>
        public static IEntityWrapper<CompetitorSalesLiterature> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CompetitorSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactinvoices.
        /// </summary>
        public static IEntityWrapper<ContactInvoices> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ContactInvoices> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactleads.
        /// </summary>
        public static IEntityWrapper<ContactLeads> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ContactLeads> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactorders.
        /// </summary>
        public static IEntityWrapper<ContactOrders> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ContactOrders> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactquotes.
        /// </summary>
        public static IEntityWrapper<ContactQuotes> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ContactQuotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customerrelationship.
        /// </summary>
        public static IEntityWrapper<CustomerRelationship> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<CustomerRelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: displaystring.
        /// </summary>
        public static IEntityWrapper<DisplayString> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<DisplayString> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyassociation.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyAssociation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<DynamicPropertyAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyinstance.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyInstance> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<DynamicPropertyInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementcontacts.
        /// </summary>
        public static IEntityWrapper<EntitlementContacts> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementContacts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementProducts> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementProducts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplateproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateProducts> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntitlementTemplateProducts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityanalyticsconfig.
        /// </summary>
        public static IEntityWrapper<EntityAnalyticsConfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntityAnalyticsConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitymap.
        /// </summary>
        public static IEntityWrapper<EntityMap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EntityMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalpartyitem.
        /// </summary>
        public static IEntityWrapper<ExternalPartyItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ExternalPartyItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fixedmonthlyfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<FixedMonthlyFiscalCalendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<FixedMonthlyFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: import.
        /// </summary>
        public static IEntityWrapper<Import> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Import> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importdata.
        /// </summary>
        public static IEntityWrapper<ImportData> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ImportData> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importfile.
        /// </summary>
        public static IEntityWrapper<ImportFile> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ImportFile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importlog.
        /// </summary>
        public static IEntityWrapper<ImportLog> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ImportLog> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentknowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<IncidentKnowledgeBaseRecord> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<IncidentKnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: isvconfig.
        /// </summary>
        public static IEntityWrapper<IsvConfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<IsvConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticlecomment.
        /// </summary>
        public static IEntityWrapper<KbArticleComment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<KbArticleComment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticletemplate.
        /// </summary>
        public static IEntityWrapper<KbArticleTemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<KbArticleTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadaddress.
        /// </summary>
        public static IEntityWrapper<LeadAddress> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<LeadAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadcompetitors.
        /// </summary>
        public static IEntityWrapper<LeadCompetitors> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<LeadCompetitors> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadproduct.
        /// </summary>
        public static IEntityWrapper<LeadProduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<LeadProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: listmember.
        /// </summary>
        public static IEntityWrapper<ListMember> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ListMember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: monthlyfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<MonthlyFiscalCalendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<MonthlyFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitycompetitors.
        /// </summary>
        public static IEntityWrapper<OpportunityCompetitors> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<OpportunityCompetitors> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: post.
        /// </summary>
        public static IEntityWrapper<Post> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Post> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: privilege.
        /// </summary>
        public static IEntityWrapper<Privilege> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Privilege> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsalesliterature.
        /// </summary>
        public static IEntityWrapper<ProductSalesLiterature> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ProductSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quarterlyfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<QuarterlyFiscalCalendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<QuarterlyFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queueitem.
        /// </summary>
        public static IEntityWrapper<QueueItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<QueueItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: relationshiprolemap.
        /// </summary>
        public static IEntityWrapper<RelationshipRoleMap> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RelationshipRoleMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resource.
        /// </summary>
        public static IEntityWrapper<Resource> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Resource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroupexpansion.
        /// </summary>
        public static IEntityWrapper<ResourceGroupExpansion> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ResourceGroupExpansion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: routingrule.
        /// </summary>
        public static IEntityWrapper<RoutingRule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RoutingRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: routingruleitem.
        /// </summary>
        public static IEntityWrapper<RoutingRuleItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<RoutingRuleItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesprocessinstance.
        /// </summary>
        public static IEntityWrapper<SalesProcessInstance> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SalesProcessInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: savedquery.
        /// </summary>
        public static IEntityWrapper<SavedQuery> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SavedQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: semiannualfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<SemiAnnualFiscalCalendar> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SemiAnnualFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: servicecontractcontacts.
        /// </summary>
        public static IEntityWrapper<ServiceContractContacts> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<ServiceContractContacts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemform.
        /// </summary>
        public static IEntityWrapper<SystemForm> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SystemForm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: theme.
        /// </summary>
        public static IEntityWrapper<Theme> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Theme> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topic.
        /// </summary>
        public static IEntityWrapper<Topic> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Topic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topichistory.
        /// </summary>
        public static IEntityWrapper<TopicHistory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<TopicHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: userform.
        /// </summary>
        public static IEntityWrapper<UserForm> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<UserForm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: usermapping.
        /// </summary>
        public static IEntityWrapper<UserMapping> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<UserMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: userquery.
        /// </summary>
        public static IEntityWrapper<UserQuery> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<UserQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetName(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: asyncoperationid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetSystemJob(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.AsyncOperationId, columnSet);
        /// <summary>
        /// Related attribute: bulkdeleteoperationid. Lookup to entity: bulkdeleteoperation.
        /// </summary>
        public static IEntityWrapper<BulkDeleteOperation> GetBulkDeleteOperationId(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<BulkDeleteOperation> columnSet)
            => wrapper.GetRelated(e => e.BulkDeleteOperationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<BulkDeleteFailure> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class BulkDeleteOperationExt
    {
        /// <summary>
        /// Related attribute: asyncoperationid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetSystemJob(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.AsyncOperationId, columnSet);
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedOnBehalfBy(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedOnBehalfBy(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwningUser(this IEntityWrapperRelation<BulkDeleteOperation> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);

    }
    public static class BulkOperationExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetImportFileName(this IEntityWrapperRelation<BulkOperation> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetImportFileName(this IEntityWrapperRelation<BulkOperation> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<BulkOperation> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<BulkOperation> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<BulkOperation> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BulkOperation> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BulkOperationLogExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: createdobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCreatedObject(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CreatedObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: createdobjectid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetCreatedObject(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.CreatedObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: createdobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCreatedObject(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CreatedObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: createdobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetCreatedObject(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.CreatedObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: createdobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetCreatedObject(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.CreatedObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomers(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomers(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetCustomers(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: bulkoperationid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetBulkOperationNumber(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.BulkOperationId, columnSet);
        /// <summary>
        /// Related attribute: campaignactivityid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetCampaignActivityNumber(this IEntityWrapperRelation<BulkOperationLog> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.CampaignActivityId, columnSet);

    }
    public static class BusinessDataLocalizedLabelExt
    {

    }
    public static class BusinessProcessFlowInstanceExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<BusinessProcessFlowInstance> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<BusinessProcessFlowInstance> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<BusinessProcessFlowInstance> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<BusinessProcessFlowInstance> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<BusinessProcessFlowInstance> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class BusinessUnitExt
    {
        /// <summary>
        /// Related attribute: parentbusinessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetParentBusiness(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.ParentBusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: calendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetCalendar(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.CalendarId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouseDeprecated(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<BusinessUnit> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class BusinessUnitNewsArticleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<BusinessUnitNewsArticle> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class CalendarExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: holidayschedulecalendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetHolidayScheduleCalendarId(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.HolidayScheduleCalendarId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<Calendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class CalendarRuleExt
    {
        /// <summary>
        /// Related attribute: calendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetCalendar(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.CalendarId, columnSet);
        /// <summary>
        /// Related attribute: innercalendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetInnerCalendar(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.InnerCalendarId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<CalendarRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class CampaignExt
    {
        /// <summary>
        /// Related attribute: pricelistid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<Campaign> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceListId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Campaign> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CampaignActivityExt
    {
        /// <summary>
        /// Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetParentCampaign(this IEntityWrapperRelation<CampaignActivity> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<CampaignActivity> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<CampaignActivity> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<CampaignActivity> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<CampaignActivity> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<CampaignActivity> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CampaignActivityItemExt
    {
        /// <summary>
        /// Related attribute: campaignactivityid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetCampaignActivityId(this IEntityWrapperRelation<CampaignActivityItem> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.CampaignActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<CampaignActivityItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<CampaignActivityItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class CampaignItemExt
    {
        /// <summary>
        /// Related attribute: campaignid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetCampaignId(this IEntityWrapperRelation<CampaignItem> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.CampaignId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<CampaignItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<CampaignItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class CampaignResponseExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: originatingactivityid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetOriginatingActivity(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.OriginatingActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: originatingactivityid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetOriginatingActivity(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.OriginatingActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: originatingactivityid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetOriginatingActivity(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.OriginatingActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: originatingactivityid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetOriginatingActivity(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.OriginatingActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: originatingactivityid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetOriginatingActivity(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.OriginatingActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetParentCampaign(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetParentCampaign(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<CampaignResponse> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CardTypeExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<CardType> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<CardType> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<CardType> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<CardType> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<CardType> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CategoryExt
    {
        /// <summary>
        /// Related attribute: parentcategoryid. Lookup to entity: category.
        /// </summary>
        public static IEntityWrapper<Category> GetParentCategory(this IEntityWrapperRelation<Category> wrapper, IColumnSet<Category> columnSet)
            => wrapper.GetRelated(e => e.ParentCategoryId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Category> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ChannelAccessProfileExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ChannelAccessProfile> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ChannelAccessProfileRuleExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ChannelAccessProfileRule> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflow(this IEntityWrapperRelation<ChannelAccessProfileRule> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class ChannelAccessProfileRuleItemExt
    {
        /// <summary>
        /// Related attribute: associatedchannelaccessprofile. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetAssignProfile(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.AssociatedChannelAccessProfile, columnSet);
        /// <summary>
        /// Related attribute: channelaccessprofileruleid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetChannelAccessProfileRule(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.ChannelAccessProfileRuleId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ChannelAccessProfileRuleItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ChannelPropertyExt
    {
        /// <summary>
        /// Related attribute: regardingobjectid. Lookup to entity: channelpropertygroup.
        /// </summary>
        public static IEntityWrapper<ChannelPropertyGroup> GetRegarding(this IEntityWrapperRelation<ChannelProperty> wrapper, IColumnSet<ChannelPropertyGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ChannelProperty> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ChannelPropertyGroupExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ChannelPropertyGroup> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class CharacteristicExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Characteristic> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ColumnMappingExt
    {
        /// <summary>
        /// Related attribute: importmapid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetDataMapID(this IEntityWrapperRelation<ColumnMapping> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.ImportMapId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ColumnMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ColumnMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ColumnMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ColumnMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class CommitmentExt
    {
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetServiceId(this IEntityWrapperRelation<Commitment> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);

    }
    public static class CompetitorExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Competitor> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Competitor> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CompetitorAddressExt
    {
        /// <summary>
        /// Related attribute: parentid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetParent(this IEntityWrapperRelation<CompetitorAddress> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.ParentId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<CompetitorAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<CompetitorAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<CompetitorAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<CompetitorAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class ComplexControlExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ComplexControl> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ConnectionExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record1id. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetConnectedFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.Record1Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: record2id. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetConnectedTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.Record2Id, columnSet);
        /// <summary>
        /// Related attribute: relatedconnectionid. Lookup to entity: connection.
        /// </summary>
        public static IEntityWrapper<Connection> GetReciprocalConnection(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<Connection> columnSet)
            => wrapper.GetRelated(e => e.RelatedConnectionId, columnSet);
        /// <summary>
        /// Related attribute: record1roleid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetRoleFrom(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.Record1RoleId, columnSet);
        /// <summary>
        /// Related attribute: record2roleid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetRoleTo(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.Record2RoleId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Connection> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ConnectionRoleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ConnectionRole> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ConnectionRoleObjectTypeCodeExt
    {
        /// <summary>
        /// Related attribute: connectionroleid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetConnectionRole(this IEntityWrapperRelation<ConnectionRoleObjectTypeCode> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.ConnectionRoleId, columnSet);

    }
    public static class ConstraintBasedGroupExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<ConstraintBasedGroup> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ConstraintBasedGroup> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ConstraintBasedGroup> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ConstraintBasedGroup> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ConstraintBasedGroup> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ConstraintBasedGroup> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class ContactExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: parentcustomerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCompanyName(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ParentCustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: parentcustomerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCompanyName(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ParentCustomerId, columnSet);
        /// <summary>
        /// Related attribute: masterid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetMasterID(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.MasterId, columnSet);
        /// <summary>
        /// Related attribute: parentcontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetParentContact(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ParentContactId, columnSet);
        /// <summary>
        /// Related attribute: preferredequipmentid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetPreferredFacilityEquipment(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.PreferredEquipmentId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: originatingleadid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetOriginatingLead(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.OriginatingLeadId, columnSet);
        /// <summary>
        /// Related attribute: defaultpricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.DefaultPriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: preferredserviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetPreferredService(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.PreferredServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: preferredsystemuserid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetPreferredUser(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.PreferredSystemUserId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Contact> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ContractExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Related attribute: billingaccountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBillingAccount(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.BillingAccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: billingcustomerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBillToCustomer(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.BillingCustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: billingcustomerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetBillToCustomer(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.BillingCustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: billingcontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetBillingContact(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.BillingContactId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: originatingcontract. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetOriginatingContract(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.OriginatingContract, columnSet);
        /// <summary>
        /// Related attribute: contracttemplateid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetContractTemplate(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.ContractTemplateId, columnSet);
        /// <summary>
        /// Related attribute: billtoaddress. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetBillToAddress(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.BillToAddress, columnSet);
        /// <summary>
        /// Related attribute: serviceaddress. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetContractAddress(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.ServiceAddress, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Contract> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ContractDetailExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: contractid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetContract(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.ContractId, columnSet);
        /// <summary>
        /// Related attribute: serviceaddress. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetLocation(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.ServiceAddress, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);
        /// <summary>
        /// Related attribute: uomscheduleid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<ContractDetail> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.UoMScheduleId, columnSet);

    }
    public static class ContractTemplateExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ContractTemplate> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ConvertRuleExt
    {
        /// <summary>
        /// Related attribute: channelpropertygroupid. Lookup to entity: channelpropertygroup.
        /// </summary>
        public static IEntityWrapper<ChannelPropertyGroup> GetChannelPropertyGroup(this IEntityWrapperRelation<ConvertRule> wrapper, IColumnSet<ChannelPropertyGroup> columnSet)
            => wrapper.GetRelated(e => e.ChannelPropertyGroupId, columnSet);
        /// <summary>
        /// Related attribute: queueid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetQueue(this IEntityWrapperRelation<ConvertRule> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.QueueId, columnSet);
        /// <summary>
        /// Related attribute: responsetemplateid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetResponseEmailTemplate(this IEntityWrapperRelation<ConvertRule> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.ResponseTemplateId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ConvertRule> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflow(this IEntityWrapperRelation<ConvertRule> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class ConvertRuleItemExt
    {
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: convertruleid. Lookup to entity: convertrule.
        /// </summary>
        public static IEntityWrapper<ConvertRule> GetShowTheConversionRuleAssociatedToThisRuleItem(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<ConvertRule> columnSet)
            => wrapper.GetRelated(e => e.ConvertRuleId, columnSet);
        /// <summary>
        /// Related attribute: queueid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetQueue(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.QueueId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwningUser(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: conditionid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetCondition(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ConditionId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflowID(this IEntityWrapperRelation<ConvertRuleItem> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class cr953_packageExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<cr953_package> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class cr953_packagesummaryExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: cr953_customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<cr953_packagesummary> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.cr953_customerid, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: cr953_customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<cr953_packagesummary> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.cr953_customerid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<cr953_packagesummary> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class cr953_subscriptionExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: cr953_customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<cr953_subscription> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.cr953_customerid, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: cr953_customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<cr953_subscription> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.cr953_customerid, columnSet);
        /// <summary>
        /// Related attribute: cr953_packageid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetPackage(this IEntityWrapperRelation<cr953_subscription> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.cr953_packageid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<cr953_subscription> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CustomControlExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<CustomControl> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class CustomControlDefaultConfigExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<CustomControlDefaultConfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class CustomControlResourceExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<CustomControlResource> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class CustomerAddressExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: parentid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetParent(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ParentId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: parentid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetParent(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ParentId, columnSet);
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwnerUser(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<CustomerAddress> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class CustomerOpportunityRoleExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<CustomerOpportunityRole> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<CustomerOpportunityRole> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<CustomerOpportunityRole> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: opportunityroleid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetCustomerRole(this IEntityWrapperRelation<CustomerOpportunityRole> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.OpportunityRoleId, columnSet);

    }
    public static class CustomerRelationshipExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetParty1(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetParty1(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partnerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetParty2(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.PartnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: partnerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetParty2(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.PartnerId, columnSet);
        /// <summary>
        /// Related attribute: converserelationshipid. Lookup to entity: customerrelationship.
        /// </summary>
        public static IEntityWrapper<CustomerRelationship> GetConverseRelationship(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<CustomerRelationship> columnSet)
            => wrapper.GetRelated(e => e.ConverseRelationshipId, columnSet);
        /// <summary>
        /// Related attribute: customerroleid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetRole1(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.CustomerRoleId, columnSet);
        /// <summary>
        /// Related attribute: partnerroleid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetRole2(this IEntityWrapperRelation<CustomerRelationship> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.PartnerRoleId, columnSet);

    }
    public static class DataPerformanceExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<DataPerformance> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class DelveActionHubExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<DelveActionHub> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<DelveActionHub> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class DependencyExt
    {
        /// <summary>
        /// Related attribute: dependentcomponentnodeid. Lookup to entity: dependencynode.
        /// </summary>
        public static IEntityWrapper<DependencyNode> GetDependentComponent(this IEntityWrapperRelation<Dependency> wrapper, IColumnSet<DependencyNode> columnSet)
            => wrapper.GetRelated(e => e.DependentComponentNodeId, columnSet);
        /// <summary>
        /// Related attribute: requiredcomponentnodeid. Lookup to entity: dependencynode.
        /// </summary>
        public static IEntityWrapper<DependencyNode> GetRequiredComponent(this IEntityWrapperRelation<Dependency> wrapper, IColumnSet<DependencyNode> columnSet)
            => wrapper.GetRelated(e => e.RequiredComponentNodeId, columnSet);

    }
    public static class DependencyNodeExt
    {
        /// <summary>
        /// Related attribute: basesolutionid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetBaseSolution(this IEntityWrapperRelation<DependencyNode> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.BaseSolutionId, columnSet);
        /// <summary>
        /// Related attribute: topsolutionid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetTopSolution(this IEntityWrapperRelation<DependencyNode> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.TopSolutionId, columnSet);

    }
    public static class DiscountExt
    {
        /// <summary>
        /// Related attribute: discounttypeid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetDiscountType(this IEntityWrapperRelation<Discount> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.DiscountTypeId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<Discount> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<Discount> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<Discount> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<Discount> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Discount> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class DiscountTypeExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<DiscountType> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<DiscountType> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class DisplayStringExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<DisplayString> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class DocumentIndexExt
    {
        /// <summary>
        /// Related attribute: documentid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetDocument(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.DocumentId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: subjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetSubject(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.SubjectId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<DocumentIndex> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class DocumentTemplateExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<DocumentTemplate> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class DuplicateRecordExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: feedback.
        /// </summary>
        public static IEntityWrapper<Feedback> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Feedback> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: baserecordid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetBaseRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.BaseRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: feedback.
        /// </summary>
        public static IEntityWrapper<Feedback> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Feedback> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: duplicaterecordid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetDuplicateRecordID(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRecordId, columnSet);
        /// <summary>
        /// Related attribute: asyncoperationid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetSystemJob(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.AsyncOperationId, columnSet);
        /// <summary>
        /// Related attribute: duplicateruleid. Lookup to entity: duplicaterule.
        /// </summary>
        public static IEntityWrapper<DuplicateRule> GetDuplicateRuleId(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<DuplicateRule> columnSet)
            => wrapper.GetRelated(e => e.DuplicateRuleId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<DuplicateRecord> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class DuplicateRuleConditionExt
    {
        /// <summary>
        /// Related attribute: regardingobjectid. Lookup to entity: duplicaterule.
        /// </summary>
        public static IEntityWrapper<DuplicateRule> GetRegarding(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<DuplicateRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<DuplicateRuleCondition> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class DynamicPropertyExt
    {
        /// <summary>
        /// Related attribute: basedynamicpropertyid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetBaseProperty(this IEntityWrapperRelation<DynamicProperty> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.BaseDynamicPropertyId, columnSet);
        /// <summary>
        /// Related attribute: defaultvalueoptionset. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetDefaultOptionSetValue(this IEntityWrapperRelation<DynamicProperty> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.DefaultValueOptionSet, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<DynamicProperty> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<DynamicProperty> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);

    }
    public static class DynamicPropertyAssociationExt
    {
        /// <summary>
        /// Related attribute: dynamicpropertyid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetPropertyID(this IEntityWrapperRelation<DynamicPropertyAssociation> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.DynamicPropertyId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<DynamicPropertyAssociation> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<DynamicPropertyAssociation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectid, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetRegarding(this IEntityWrapperRelation<DynamicPropertyAssociation> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<DynamicPropertyAssociation> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class DynamicPropertyInstanceExt
    {
        /// <summary>
        /// Related attribute: dynamicpropertyid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetPropertyID(this IEntityWrapperRelation<DynamicPropertyInstance> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.DynamicPropertyId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetRegarding(this IEntityWrapperRelation<DynamicPropertyInstance> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetRegarding(this IEntityWrapperRelation<DynamicPropertyInstance> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetRegarding(this IEntityWrapperRelation<DynamicPropertyInstance> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetRegarding(this IEntityWrapperRelation<DynamicPropertyInstance> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<DynamicPropertyInstance> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class DynamicPropertyOptionSetItemExt
    {
        /// <summary>
        /// Related attribute: dynamicpropertyid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetPropertyID(this IEntityWrapperRelation<DynamicPropertyOptionSetItem> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.DynamicPropertyId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<DynamicPropertyOptionSetItem> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<DynamicPropertyOptionSetItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class EmailExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: emailsender. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetSender(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.EmailSender, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: emailsender. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetSender(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.EmailSender, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: emailsender. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetSender(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.EmailSender, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: emailsender. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetSender(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.EmailSender, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: emailsender. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetSender(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.EmailSender, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: emailsender. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSender(this IEntityWrapperRelation<Email> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.EmailSender, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendersaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetSendersAccount(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.SendersAccount, columnSet);
        /// <summary>
        /// Related attribute: parentactivityid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetParentActivityId(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.ParentActivityId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Email> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Email> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: templateid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetIDForTemplateUsed(this IEntityWrapperRelation<Email> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.TemplateId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Email> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class EmailHashExt
    {
        /// <summary>
        /// Related attribute: activityid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetActivityId(this IEntityWrapperRelation<EmailHash> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.ActivityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<EmailHash> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<EmailHash> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class EmailSearchExt
    {

    }
    public static class EmailServerProfileExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<EmailServerProfile> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: incomingpartnerapplication. Lookup to entity: partnerapplication.
        /// </summary>
        public static IEntityWrapper<PartnerApplication> GetIncomingPartnerApplication(this IEntityWrapperRelation<EmailServerProfile> wrapper, IColumnSet<PartnerApplication> columnSet)
            => wrapper.GetRelated(e => e.IncomingPartnerApplication, columnSet);
        /// <summary>
        /// Related attribute: outgoingpartnerapplication. Lookup to entity: partnerapplication.
        /// </summary>
        public static IEntityWrapper<PartnerApplication> GetOutgoingPartnerApplication(this IEntityWrapperRelation<EmailServerProfile> wrapper, IColumnSet<PartnerApplication> columnSet)
            => wrapper.GetRelated(e => e.OutgoingPartnerApplication, columnSet);

    }
    public static class EntitlementExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: entitlementtemplateid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetEntitlementTemplate(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.EntitlementTemplateId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelisttoapply. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceListToApply(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceListToApply, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Entitlement> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class EntitlementChannelExt
    {
        /// <summary>
        /// Related attribute: entitlementid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetEntitlement(this IEntityWrapperRelation<EntitlementChannel> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.EntitlementId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<EntitlementChannel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<EntitlementChannel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class EntitlementTemplateExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<EntitlementTemplate> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<EntitlementTemplate> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<EntitlementTemplate> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class EntitlementTemplateChannelExt
    {
        /// <summary>
        /// Related attribute: entitlementtemplateid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetEntitlementTemplateId(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.EntitlementTemplateId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<EntitlementTemplateChannel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class EntityAnalyticsConfigExt
    {
        /// <summary>
        /// Related attribute: parententityid. Lookup to entity: entity.
        /// </summary>
        public static IEntityWrapper<Entity> GetParentEntityId(this IEntityWrapperRelation<EntityAnalyticsConfig> wrapper, IColumnSet<Entity> columnSet)
            => wrapper.GetRelated(e => e.ParentEntityId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<EntityAnalyticsConfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class EntityDataSourceExt
    {
        /// <summary>
        /// Related attribute: entitydataproviderid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetEntityProvider(this IEntityWrapperRelation<EntityDataSource> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.EntityDataProviderId, columnSet);

    }
    public static class EntityImageConfigExt
    {

    }
    public static class EntityMapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<EntityMap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class EnvironmentVariableValueExt
    {
        /// <summary>
        /// Related attribute: environmentvariabledefinitionid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetEnvironmentVariableDefinition(this IEntityWrapperRelation<EnvironmentVariableValue> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.EnvironmentVariableDefinitionId, columnSet);

    }
    public static class EquipmentExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: calendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetCalendar(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.CalendarId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_organizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetOrganizationalUnit(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: siteid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetSite(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.SiteId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Equipment> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ExpanderEventExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ExpanderEvent> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ExpiredProcessExt
    {
        /// <summary>
        /// Related attribute: knowledgearticleid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetKnowledgeArticle(this IEntityWrapperRelation<ExpiredProcess> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.KnowledgeArticleId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ExpiredProcess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<ExpiredProcess> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ExpiredProcess> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<ExpiredProcess> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class ExternalPartyExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ExternalParty> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ExternalPartyItemExt
    {
        /// <summary>
        /// Related attribute: channelaccessprofileid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetChannelAccessProfile(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.ChannelAccessProfileId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegarding(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: externalpartyid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetExternalParty(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ExternalPartyId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ExternalPartyItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class FaxExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Fax> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class FeedbackExt
    {
        /// <summary>
        /// Related attribute: createdbycontact. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCreatedByContact(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CreatedByContact, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfbycontact. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCreatedOnBelhalfByContact(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfByContact, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: feedback.
        /// </summary>
        public static IEntityWrapper<Feedback> GetRegarding(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<Feedback> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRegarding(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRegarding(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: closedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetClosedBy(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ClosedBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Feedback> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class FieldPermissionExt
    {
        /// <summary>
        /// Related attribute: fieldsecurityprofileid. Lookup to entity: fieldsecurityprofile.
        /// </summary>
        public static IEntityWrapper<FieldSecurityProfile> GetProfile(this IEntityWrapperRelation<FieldPermission> wrapper, IColumnSet<FieldSecurityProfile> columnSet)
            => wrapper.GetRelated(e => e.FieldSecurityProfileId, columnSet);

    }
    public static class FieldSecurityProfileExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<FieldSecurityProfile> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class FileAttachmentExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetRegarding(this IEntityWrapperRelation<FileAttachment> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: imagedescriptor.
        /// </summary>
        public static IEntityWrapper<ImageDescriptor> GetRegarding(this IEntityWrapperRelation<FileAttachment> wrapper, IColumnSet<ImageDescriptor> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetRegarding(this IEntityWrapperRelation<FileAttachment> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetRegarding(this IEntityWrapperRelation<FileAttachment> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetRegarding(this IEntityWrapperRelation<FileAttachment> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowlog.
        /// </summary>
        public static IEntityWrapper<WorkflowLog> GetRegarding(this IEntityWrapperRelation<FileAttachment> wrapper, IColumnSet<WorkflowLog> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);

    }
    public static class FixedMonthlyFiscalCalendarExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedOnBehalfBy(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedOnBehalfBy(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: salespersonid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesPersonId(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesPersonId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<FixedMonthlyFiscalCalendar> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class flowsessionExt
    {
        /// <summary>
        /// Related attribute: regardingobjectid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetRegarding(this IEntityWrapperRelation<flowsession> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);

    }
    public static class GoalExt
    {
        /// <summary>
        /// Related attribute: goalwitherrorid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetGoalWithError(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.GoalWithErrorId, columnSet);
        /// <summary>
        /// Related attribute: parentgoalid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetParentGoal(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.ParentGoalId, columnSet);
        /// <summary>
        /// Related attribute: rollupqueryactualdecimalid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryActualDecimal(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryActualDecimalId, columnSet);
        /// <summary>
        /// Related attribute: rollupqueryactualintegerid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryActualInteger(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollupQueryActualIntegerId, columnSet);
        /// <summary>
        /// Related attribute: rollupqueryactualmoneyid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryActualMoney(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryActualMoneyId, columnSet);
        /// <summary>
        /// Related attribute: rollupquerycustomdecimalid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryCustomRollupFieldDecimal(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryCustomDecimalId, columnSet);
        /// <summary>
        /// Related attribute: rollupquerycustomintegerid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryCustomRollupFieldInteger(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryCustomIntegerId, columnSet);
        /// <summary>
        /// Related attribute: rollupquerycustommoneyid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryCustomRollupFieldMoney(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryCustomMoneyId, columnSet);
        /// <summary>
        /// Related attribute: rollupqueryinprogressdecimalid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryInProgressdecimal(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryInprogressDecimalId, columnSet);
        /// <summary>
        /// Related attribute: rollupqueryinprogressintegerid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryInProgressinteger(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryInprogressIntegerId, columnSet);
        /// <summary>
        /// Related attribute: rollupqueryinprogressmoneyid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQueryInProgressmoney(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RollUpQueryInprogressMoneyId, columnSet);
        /// <summary>
        /// Related attribute: metricid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetGoalMetric(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.MetricId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: goalownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetGoalOwner(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.GoalOwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: goalownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetGoalOwner(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.GoalOwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Goal> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class HierarchyRuleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<HierarchyRule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class holidaywrapperExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<holidaywrapper> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<holidaywrapper> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<holidaywrapper> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<holidaywrapper> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class ImportDataExt
    {
        /// <summary>
        /// Related attribute: importfileid. Lookup to entity: importfile.
        /// </summary>
        public static IEntityWrapper<ImportFile> GetImportFileId(this IEntityWrapperRelation<ImportData> wrapper, IColumnSet<ImportFile> columnSet)
            => wrapper.GetRelated(e => e.ImportFileId, columnSet);

    }
    public static class ImportEntityMappingExt
    {
        /// <summary>
        /// Related attribute: importmapid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetDataMapID(this IEntityWrapperRelation<ImportEntityMapping> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.ImportMapId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ImportEntityMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ImportEntityMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ImportEntityMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ImportEntityMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class ImportFileExt
    {
        /// <summary>
        /// Related attribute: importid. Lookup to entity: import.
        /// </summary>
        public static IEntityWrapper<Import> GetImportJobID(this IEntityWrapperRelation<ImportFile> wrapper, IColumnSet<Import> columnSet)
            => wrapper.GetRelated(e => e.ImportId, columnSet);
        /// <summary>
        /// Related attribute: importmapid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetDataMap(this IEntityWrapperRelation<ImportFile> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.ImportMapId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: recordsownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRecordsOwner(this IEntityWrapperRelation<ImportFile> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RecordsOwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: recordsownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetRecordsOwner(this IEntityWrapperRelation<ImportFile> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RecordsOwnerId, columnSet);

    }
    public static class ImportJobExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ImportJob> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ImportLogExt
    {
        /// <summary>
        /// Related attribute: importdataid. Lookup to entity: importdata.
        /// </summary>
        public static IEntityWrapper<ImportData> GetSourceRow(this IEntityWrapperRelation<ImportLog> wrapper, IColumnSet<ImportData> columnSet)
            => wrapper.GetRelated(e => e.ImportDataId, columnSet);
        /// <summary>
        /// Related attribute: importfileid. Lookup to entity: importfile.
        /// </summary>
        public static IEntityWrapper<ImportFile> GetImportFileId(this IEntityWrapperRelation<ImportLog> wrapper, IColumnSet<ImportFile> columnSet)
            => wrapper.GetRelated(e => e.ImportFileId, columnSet);

    }
    public static class IncidentExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: primarycontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContactContact(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.PrimaryContactId, columnSet);
        /// <summary>
        /// Related attribute: responsiblecontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetResponsibleContact(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ResponsibleContactId, columnSet);
        /// <summary>
        /// Related attribute: contractid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetContract(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.ContractId, columnSet);
        /// <summary>
        /// Related attribute: contractdetailid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetContractLine(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.ContractDetailId, columnSet);
        /// <summary>
        /// Related attribute: entitlementid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetEntitlement(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.EntitlementId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: existingcase. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetExistingCase(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.ExistingCase, columnSet);
        /// <summary>
        /// Related attribute: masterid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetMasterCase(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.MasterId, columnSet);
        /// <summary>
        /// Related attribute: parentcaseid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetParentCase(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.ParentCaseId, columnSet);
        /// <summary>
        /// Related attribute: kbarticleid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetKnowledgeBaseArticle(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.KbArticleId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_iotalert. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetIoTAlert(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.msdyn_iotalert, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: firstresponsebykpiid. Lookup to entity: slakpiinstance.
        /// </summary>
        public static IEntityWrapper<SLAKPIInstance> GetFirstResponseByKPI(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<SLAKPIInstance> columnSet)
            => wrapper.GetRelated(e => e.FirstResponseByKPIId, columnSet);
        /// <summary>
        /// Related attribute: resolvebykpiid. Lookup to entity: slakpiinstance.
        /// </summary>
        public static IEntityWrapper<SLAKPIInstance> GetResolveByKPI(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<SLAKPIInstance> columnSet)
            => wrapper.GetRelated(e => e.ResolveByKPIId, columnSet);
        /// <summary>
        /// Related attribute: socialprofileid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetSocialProfile(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.SocialProfileId, columnSet);
        /// <summary>
        /// Related attribute: subjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetSubject(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.SubjectId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Incident> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class IncidentResolutionExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: incidentid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetCase(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.IncidentId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<IncidentResolution> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class InteractionForEmailExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<InteractionForEmail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class InternalAddressExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<InternalAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<InternalAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<InternalAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<InternalAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class InvoiceExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: pricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: salesorderid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetContract(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.SalesOrderId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Invoice> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class InvoiceDetailExt
    {
        /// <summary>
        /// Related attribute: invoiceid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoiceID(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.InvoiceId, columnSet);
        /// <summary>
        /// Related attribute: parentbundleidref. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetParentBundleProduct(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.ParentBundleIdRef, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementinvoiceproduct. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetAgreementInvoiceProduct(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementInvoiceProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_orderinvoicingproduct. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetOrderInvoicingProduct(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrderInvoicingProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderproductid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetWorkOrderProduct(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderProductId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderserviceid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetWorkOrderService(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderServiceId, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetExistingProduct(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: salesorderdetailid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetOrderProductId(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.SalesOrderDetailId, columnSet);
        /// <summary>
        /// Related attribute: salesrepid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesperson(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesRepId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_currency. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Currency, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrencyCurrency(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<InvoiceDetail> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);

    }
    public static class KbArticleExt
    {
        /// <summary>
        /// Related attribute: kbarticletemplateid. Lookup to entity: kbarticletemplate.
        /// </summary>
        public static IEntityWrapper<KbArticleTemplate> GetBaseTemplate(this IEntityWrapperRelation<KbArticle> wrapper, IColumnSet<KbArticleTemplate> columnSet)
            => wrapper.GetRelated(e => e.KbArticleTemplateId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<KbArticle> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: subjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetSubject(this IEntityWrapperRelation<KbArticle> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.SubjectId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<KbArticle> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class KbArticleCommentExt
    {
        /// <summary>
        /// Related attribute: kbarticleid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetKBArticle(this IEntityWrapperRelation<KbArticleComment> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.KbArticleId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<KbArticleComment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<KbArticleComment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<KbArticleComment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<KbArticleComment> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class KbArticleTemplateExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<KbArticleTemplate> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class KnowledgeArticleExt
    {
        /// <summary>
        /// Related attribute: parentarticlecontentid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetParentArticleContentId(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.ParentArticleContentId, columnSet);
        /// <summary>
        /// Related attribute: previousarticlecontentid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetPreviousArticleContentID(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.PreviousArticleContentId, columnSet);
        /// <summary>
        /// Related attribute: rootarticleid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRootArticleId(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RootArticleId, columnSet);
        /// <summary>
        /// Related attribute: languagelocaleid. Lookup to entity: languagelocale.
        /// </summary>
        public static IEntityWrapper<LanguageLocale> GetLanguage(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<LanguageLocale> columnSet)
            => wrapper.GetRelated(e => e.LanguageLocaleId, columnSet);
        /// <summary>
        /// Related attribute: subjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetSubject(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.SubjectId, columnSet);
        /// <summary>
        /// Related attribute: primaryauthorid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetPrimaryAuthorId(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.primaryauthorid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<KnowledgeArticle> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class KnowledgeArticleIncidentExt
    {
        /// <summary>
        /// Related attribute: incidentid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetIncident(this IEntityWrapperRelation<KnowledgeArticleIncident> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.IncidentId, columnSet);
        /// <summary>
        /// Related attribute: knowledgearticleid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetKnowledgeArticle(this IEntityWrapperRelation<KnowledgeArticleIncident> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.KnowledgeArticleId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<KnowledgeArticleIncident> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class KnowledgeArticleViewsExt
    {
        /// <summary>
        /// Related attribute: knowledgearticleid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetKnowledgeArticle(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.KnowledgeArticleId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<KnowledgeArticleViews> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class KnowledgeBaseRecordExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<KnowledgeBaseRecord> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<KnowledgeBaseRecord> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class KnowledgeSearchModelExt
    {
        /// <summary>
        /// Related attribute: azureserviceconnectionid. Lookup to entity: azureserviceconnection.
        /// </summary>
        public static IEntityWrapper<AzureServiceConnection> GetConnection(this IEntityWrapperRelation<KnowledgeSearchModel> wrapper, IColumnSet<AzureServiceConnection> columnSet)
            => wrapper.GetRelated(e => e.AzureServiceConnectionId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<KnowledgeSearchModel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class LanguageLocaleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<LanguageLocale> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class LeadExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: parentaccountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetParentAccountForLead(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ParentAccountId, columnSet);
        /// <summary>
        /// Related attribute: campaignid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetSourceCampaign(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.CampaignId, columnSet);
        /// <summary>
        /// Related attribute: relatedobjectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetRelatedCampaignResponse(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.RelatedObjectId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: parentcontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetParentContactForLead(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ParentContactId, columnSet);
        /// <summary>
        /// Related attribute: originatingcaseid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetOriginatingCase(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.OriginatingCaseId, columnSet);
        /// <summary>
        /// Related attribute: masterid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetMasterID(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.MasterId, columnSet);
        /// <summary>
        /// Related attribute: qualifyingopportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetQualifyingOpportunity(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.QualifyingOpportunityId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Lead> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class LeadAddressExt
    {
        /// <summary>
        /// Related attribute: parentid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetParent(this IEntityWrapperRelation<LeadAddress> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.ParentId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<LeadAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<LeadAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<LeadAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<LeadAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<LeadAddress> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class LeadToOpportunitySalesProcessExt
    {
        /// <summary>
        /// Related attribute: leadid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetLead(this IEntityWrapperRelation<LeadToOpportunitySalesProcess> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.LeadId, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunityId(this IEntityWrapperRelation<LeadToOpportunitySalesProcess> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<LeadToOpportunitySalesProcess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<LeadToOpportunitySalesProcess> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<LeadToOpportunitySalesProcess> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<LeadToOpportunitySalesProcess> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class LetterExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Letter> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class LicenseExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<License> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ListExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<List> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ListMemberExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: entityid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetEntity(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.EntityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: entityid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetEntity(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.EntityId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: entityid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetEntity(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.EntityId, columnSet);
        /// <summary>
        /// Related attribute: listid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetMarketingList(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.ListId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ListMember> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class LookUpMappingExt
    {
        /// <summary>
        /// Related attribute: columnmappingid. Lookup to entity: columnmapping.
        /// </summary>
        public static IEntityWrapper<ColumnMapping> GetColumnMappingId(this IEntityWrapperRelation<LookUpMapping> wrapper, IColumnSet<ColumnMapping> columnSet)
            => wrapper.GetRelated(e => e.ColumnMappingId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<LookUpMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<LookUpMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<LookUpMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<LookUpMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transformationparametermappingid. Lookup to entity: transformationparametermapping.
        /// </summary>
        public static IEntityWrapper<TransformationParameterMapping> GetTransformationParameterMappingId(this IEntityWrapperRelation<LookUpMapping> wrapper, IColumnSet<TransformationParameterMapping> columnSet)
            => wrapper.GetRelated(e => e.TransformationParameterMappingId, columnSet);

    }
    public static class MailboxExt
    {
        /// <summary>
        /// Related attribute: emailserverprofile. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetServerProfile(this IEntityWrapperRelation<Mailbox> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.EmailServerProfile, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Mailbox> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRegarding(this IEntityWrapperRelation<Mailbox> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegarding(this IEntityWrapperRelation<Mailbox> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);

    }
    public static class MailboxStatisticsExt
    {
        /// <summary>
        /// Related attribute: mailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRegardingMailbox(this IEntityWrapperRelation<MailboxStatistics> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.MailboxId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<MailboxStatistics> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class MailboxTrackingCategoryExt
    {
        /// <summary>
        /// Related attribute: mailboxid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetMailboxId(this IEntityWrapperRelation<MailboxTrackingCategory> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.MailboxId, columnSet);

    }
    public static class MailboxTrackingFolderExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: accountleads.
        /// </summary>
        public static IEntityWrapper<AccountLeads> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<AccountLeads> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingexchangesyncidmapping.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingExchangeSyncIdMapping> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceBookingExchangeSyncIdMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperationlog.
        /// </summary>
        public static IEntityWrapper<BulkOperationLog> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<BulkOperationLog> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivityitem.
        /// </summary>
        public static IEntityWrapper<CampaignActivityItem> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CampaignActivityItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignitem.
        /// </summary>
        public static IEntityWrapper<CampaignItem> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CampaignItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: childincidentcount.
        /// </summary>
        public static IEntityWrapper<ChildIncidentCount> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ChildIncidentCount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitoraddress.
        /// </summary>
        public static IEntityWrapper<CompetitorAddress> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CompetitorAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitorproduct.
        /// </summary>
        public static IEntityWrapper<CompetitorProduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CompetitorProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitorsalesliterature.
        /// </summary>
        public static IEntityWrapper<CompetitorSalesLiterature> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CompetitorSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactinvoices.
        /// </summary>
        public static IEntityWrapper<ContactInvoices> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ContactInvoices> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactleads.
        /// </summary>
        public static IEntityWrapper<ContactLeads> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ContactLeads> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactorders.
        /// </summary>
        public static IEntityWrapper<ContactOrders> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ContactOrders> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contactquotes.
        /// </summary>
        public static IEntityWrapper<ContactQuotes> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ContactQuotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyassociation.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyAssociation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<DynamicPropertyAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyinstance.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyInstance> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<DynamicPropertyInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementcontacts.
        /// </summary>
        public static IEntityWrapper<EntitlementContacts> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementContacts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementProducts> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementProducts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplateproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateProducts> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntitlementTemplateProducts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityanalyticsconfig.
        /// </summary>
        public static IEntityWrapper<EntityAnalyticsConfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntityAnalyticsConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentknowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<IncidentKnowledgeBaseRecord> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<IncidentKnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadaddress.
        /// </summary>
        public static IEntityWrapper<LeadAddress> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<LeadAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadcompetitors.
        /// </summary>
        public static IEntityWrapper<LeadCompetitors> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<LeadCompetitors> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadproduct.
        /// </summary>
        public static IEntityWrapper<LeadProduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<LeadProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: listmember.
        /// </summary>
        public static IEntityWrapper<ListMember> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ListMember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitycompetitors.
        /// </summary>
        public static IEntityWrapper<OpportunityCompetitors> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<OpportunityCompetitors> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsalesliterature.
        /// </summary>
        public static IEntityWrapper<ProductSalesLiterature> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ProductSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resource.
        /// </summary>
        public static IEntityWrapper<Resource> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Resource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroupexpansion.
        /// </summary>
        public static IEntityWrapper<ResourceGroupExpansion> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ResourceGroupExpansion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesprocessinstance.
        /// </summary>
        public static IEntityWrapper<SalesProcessInstance> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<SalesProcessInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: servicecontractcontacts.
        /// </summary>
        public static IEntityWrapper<ServiceContractContacts> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<ServiceContractContacts> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topic.
        /// </summary>
        public static IEntityWrapper<Topic> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Topic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topichistory.
        /// </summary>
        public static IEntityWrapper<TopicHistory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<TopicHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetRegardingObjectId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: mailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetMailboxId(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.MailboxId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<MailboxTrackingFolder> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class MailMergeTemplateExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<MailMergeTemplate> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class MetricExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Metric> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class MobileOfflineProfileExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<MobileOfflineProfile> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class MobileOfflineProfileItemExt
    {
        /// <summary>
        /// Related attribute: regardingobjectid. Lookup to entity: mobileofflineprofile.
        /// </summary>
        public static IEntityWrapper<MobileOfflineProfile> GetRegarding(this IEntityWrapperRelation<MobileOfflineProfileItem> wrapper, IColumnSet<MobileOfflineProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<MobileOfflineProfileItem> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: profileitemrule. Lookup to entity: savedquery.
        /// </summary>
        public static IEntityWrapper<SavedQuery> GetViewToSyncDataToDevice(this IEntityWrapperRelation<MobileOfflineProfileItem> wrapper, IColumnSet<SavedQuery> columnSet)
            => wrapper.GetRelated(e => e.ProfileItemRule, columnSet);

    }
    public static class MobileOfflineProfileItemAssociationExt
    {
        /// <summary>
        /// Related attribute: mobileofflineprofileitemid. Lookup to entity: mobileofflineprofileitem.
        /// </summary>
        public static IEntityWrapper<MobileOfflineProfileItem> GetRegarding(this IEntityWrapperRelation<MobileOfflineProfileItemAssociation> wrapper, IColumnSet<MobileOfflineProfileItem> columnSet)
            => wrapper.GetRelated(e => e.MobileOfflineProfileItemId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<MobileOfflineProfileItemAssociation> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class MonthlyFiscalCalendarExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: salespersonid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesPersonId(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesPersonId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<MonthlyFiscalCalendar> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_3dmodelExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_3dmodel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_accountpricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<msdyn_accountpricelist> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_accountpricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);

    }
    public static class msdyn_actioncardrolesettingExt
    {
        /// <summary>
        /// Related attribute: msdyn_cardtypeid. Lookup to entity: cardtype.
        /// </summary>
        public static IEntityWrapper<CardType> Getcardtypeid(this IEntityWrapperRelation<msdyn_actioncardrolesetting> wrapper, IColumnSet<CardType> columnSet)
            => wrapper.GetRelated(e => e.msdyn_cardtypeid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_roleid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetRoleId(this IEntityWrapperRelation<msdyn_actioncardrolesetting> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Roleid, columnSet);

    }
    public static class msdyn_actualExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomerID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceRoleID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomerContactID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_contractorganizationalunitid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProjectID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTaskID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetTaxCode(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategoryID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workordertype. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetWorkOrderType(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceListID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProductID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContractID(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContract, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContractLineId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceterritory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetServiceTerritory(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceTerritory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnitOfMeasure(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_actual> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_agreementExt
    {
        /// <summary>
        /// Related attribute: msdyn_billingaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBillingAccount(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BillingAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_originatingagreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetOriginatingAgreement(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OriginatingAgreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_substatus. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetSubstatus(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SubStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salestaxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetSalesTaxCode(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesTaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceterritory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetServiceTerritory(this IEntityWrapperRelation<msdyn_agreement> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceTerritory, columnSet);

    }
    public static class msdyn_agreementbookingdateExt
    {
        /// <summary>
        /// Related attribute: msdyn_resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_agreementbookingdate> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Resource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementbookingdate> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookingsetup. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetBookingSetup(this IEntityWrapperRelation<msdyn_agreementbookingdate> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_agreementbookingdate> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);

    }
    public static class msdyn_agreementbookingincidentExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementbookingincident> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingsetup. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetAgreementBookingSetup(this IEntityWrapperRelation<msdyn_agreementbookingincident> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_agreementbookingincident> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_agreementbookingincident> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);

    }
    public static class msdyn_agreementbookingproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingincident. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetAgreementBookingIncident(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingsetup. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetAgreementBookingSetup(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_agreementbookingproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_agreementbookingserviceExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingincident. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetAgreementBookingIncident(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingsetup. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetAgreementBookingSetup(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_service. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetService(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Service, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_agreementbookingservice> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_agreementbookingservicetaskExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementbookingservicetask> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingincident. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetAgreementBookingIncident(this IEntityWrapperRelation<msdyn_agreementbookingservicetask> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingsetup. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetAgreementBookingSetup(this IEntityWrapperRelation<msdyn_agreementbookingservicetask> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_agreementbookingservicetask> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_tasktype. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetTaskType(this IEntityWrapperRelation<msdyn_agreementbookingservicetask> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaskType, columnSet);

    }
    public static class msdyn_agreementbookingsetupExt
    {
        /// <summary>
        /// Related attribute: msdyn_preferredresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetPreferredResource(this IEntityWrapperRelation<msdyn_agreementbookingsetup> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PreferredResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementbookingsetup> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_priority. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetPriority(this IEntityWrapperRelation<msdyn_agreementbookingsetup> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Priority, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workordertype. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetWorkOrderType(this IEntityWrapperRelation<msdyn_agreementbookingsetup> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderType, columnSet);

    }
    public static class msdyn_agreementinvoicedateExt
    {
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_agreementinvoicedate> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementinvoicedate> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoicesetup. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetInvoiceSetup(this IEntityWrapperRelation<msdyn_agreementinvoicedate> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_InvoiceSetup, columnSet);

    }
    public static class msdyn_agreementinvoiceproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementinvoiceproduct> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementinvoicesetup. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetAgreementInvoiceSetup(this IEntityWrapperRelation<msdyn_agreementinvoiceproduct> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementInvoiceSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_agreementinvoiceproduct> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_agreementinvoiceproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_agreementinvoiceproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_agreementinvoiceproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_agreementinvoicesetupExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_agreementinvoicesetup> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);

    }
    public static class msdyn_AIConfigurationExt
    {
        /// <summary>
        /// Related attribute: msdyn_trainedmodelaiconfigurationpareid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetTrainedModelAIConfigurationParent(this IEntityWrapperRelation<msdyn_AIConfiguration> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TrainedModelAIConfigurationPareId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_aimodelid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetAIModel(this IEntityWrapperRelation<msdyn_AIConfiguration> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AIModelId, columnSet);

    }
    public static class msdyn_AIFpTrainingDocumentExt
    {
        /// <summary>
        /// Related attribute: msdyn_aiconfigurationid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetAIConfigurationId(this IEntityWrapperRelation<msdyn_AIFpTrainingDocument> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AIConfigurationId, columnSet);

    }
    public static class msdyn_AIModelExt
    {
        /// <summary>
        /// Related attribute: msdyn_templateid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetTemplate(this IEntityWrapperRelation<msdyn_AIModel> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TemplateId, columnSet);

    }
    public static class msdyn_AIOdTrainingBoundingBoxExt
    {
        /// <summary>
        /// Related attribute: msdyn_aiodlabelid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetLabel(this IEntityWrapperRelation<msdyn_AIOdTrainingBoundingBox> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AIOdLabelId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_aiodtrainingimageid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetTrainingImage(this IEntityWrapperRelation<msdyn_AIOdTrainingBoundingBox> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AIOdTrainingImageId, columnSet);

    }
    public static class msdyn_AIOdTrainingImageExt
    {
        /// <summary>
        /// Related attribute: msdyn_aiconfigurationid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetAIConfiguration(this IEntityWrapperRelation<msdyn_AIOdTrainingImage> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AIConfigurationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_aiodimageid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetImage(this IEntityWrapperRelation<msdyn_AIOdTrainingImage> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AIOdImageId, columnSet);

    }
    public static class msdyn_analysiscomponentExt
    {
        /// <summary>
        /// Related attribute: msdyn_analysisjobid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetAnalysisJob(this IEntityWrapperRelation<msdyn_analysiscomponent> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AnalysisJobId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_solutionhealthrulesetid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetSolutionHealthRuleSet(this IEntityWrapperRelation<msdyn_analysiscomponent> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SolutionHealthRuleSetId, columnSet);

    }
    public static class msdyn_analysisresultExt
    {
        /// <summary>
        /// Related attribute: msdyn_analysiscomponentid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetAnalysisComponent(this IEntityWrapperRelation<msdyn_analysisresult> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AnalysisComponentId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_analysisjobid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetAnalysisJob(this IEntityWrapperRelation<msdyn_analysisresult> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AnalysisJobId, columnSet);

    }
    public static class msdyn_analysisresultdetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_analysisresult. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetAnalysisResult(this IEntityWrapperRelation<msdyn_analysisresultdetail> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AnalysisResult, columnSet);

    }
    public static class msdyn_approvalExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_characteristic. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetCharacteristic(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Characteristic, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_approval> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_batchjobExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_batchjob> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_bookableresourceassociationExt
    {
        /// <summary>
        /// Related attribute: msdyn_resource1. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource1(this IEntityWrapperRelation<msdyn_bookableresourceassociation> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Resource1, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resource2. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource2(this IEntityWrapperRelation<msdyn_bookableresourceassociation> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Resource2, columnSet);

    }
    public static class msdyn_bookingalertExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_bookingalert> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_bookingalertstatusExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookingalert. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetBookingAlert(this IEntityWrapperRelation<msdyn_bookingalertstatus> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookingAlert, columnSet);

    }
    public static class msdyn_bookingjournalExt
    {
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_bookingjournal> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_paytype. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetPayType(this IEntityWrapperRelation<msdyn_bookingjournal> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PayType, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_bookingjournal> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_bookingsetupmetadataExt
    {
        /// <summary>
        /// Related attribute: msdyn_defaultbookingcanceledstatus. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetDefaultBookingCanceledStatus(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultBookingCanceledStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultbookingcommittedstatus. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetDefaultBookingCommittedStatus(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultBookingCommittedStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_cloneentityquery. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetCloneEntityQuery(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CloneEntityQuery, columnSet);
        /// <summary>
        /// Related attribute: msdyn_retrieveconstraintsquery. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRetrieveConstraintsQuery(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RetrieveConstraintsQuery, columnSet);
        /// <summary>
        /// Related attribute: msdyn_retrieveresourcesquery. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRetrieveResourcesQuery(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RetrieveResourcesQuery, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultrequirementactivestatus. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetDefaultRequirementActiveStatus(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultRequirementActiveStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultrequirementcanceledstatus. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetDefaultRequirementCanceledStatus(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultRequirementCanceledStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultrequirementcompletedstatus. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetDefaultRequirementCompletedStatus(this IEntityWrapperRelation<msdyn_bookingsetupmetadata> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultRequirementCompletedStatus, columnSet);

    }
    public static class msdyn_bookingtimestampExt
    {
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_bookingtimestamp> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);

    }
    public static class msdyn_bpf_2c5fe86acc8b414b8322ae571000c799Ext
    {
        /// <summary>
        /// Related attribute: bpf_msdyn_purchaseorderid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetmsdynPurchaseorder(this IEntityWrapperRelation<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_purchaseorderid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_purchaseorderbillid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetmsdynPurchaseorderbill(this IEntityWrapperRelation<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_purchaseorderbillid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_purchaseorderreceiptid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetmsdynPurchaseorderreceipt(this IEntityWrapperRelation<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_purchaseorderreceiptid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_bpf_477c16f59170487b8b4dc895c5dcd09bExt
    {
        /// <summary>
        /// Related attribute: bpf_incidentid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetIncident(this IEntityWrapperRelation<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.bpf_incidentid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_iotalertid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetmsdynIotalert(this IEntityWrapperRelation<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_iotalertid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_workorderid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetmsdynWorkorder(this IEntityWrapperRelation<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_workorderid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_bpf_665e73aa18c247d886bfc50499c73b82Ext
    {
        /// <summary>
        /// Related attribute: bpf_msdyn_projectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetmsdynProject(this IEntityWrapperRelation<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_projectid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_bpf_989e9b1857e24af18787d5143b67523bExt
    {
        /// <summary>
        /// Related attribute: bpf_incidentid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetIncident(this IEntityWrapperRelation<msdyn_bpf_989e9b1857e24af18787d5143b67523b> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.bpf_incidentid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_workorderid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetmsdynWorkorder(this IEntityWrapperRelation<msdyn_bpf_989e9b1857e24af18787d5143b67523b> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_workorderid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_989e9b1857e24af18787d5143b67523b> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_989e9b1857e24af18787d5143b67523b> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_989e9b1857e24af18787d5143b67523b> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3Ext
    {
        /// <summary>
        /// Related attribute: bpf_msdyn_agreementid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetmsdynAgreement(this IEntityWrapperRelation<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_agreementid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_agreementbookingsetupid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetmsdynAgreementbookingsetup(this IEntityWrapperRelation<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_agreementbookingsetupid, columnSet);
        /// <summary>
        /// Related attribute: bpf_msdyn_agreementinvoicesetupid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetmsdynAgreementinvoicesetup(this IEntityWrapperRelation<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_agreementinvoicesetupid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39Ext
    {
        /// <summary>
        /// Related attribute: bpf_msdyn_workorderid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetmsdynWorkorder(this IEntityWrapperRelation<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.bpf_msdyn_workorderid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470dExt
    {
        /// <summary>
        /// Related attribute: bpf_invoiceid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.bpf_invoiceid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class msdyn_characteristicreqforteammemberExt
    {
        /// <summary>
        /// Related attribute: msdyn_characteristic. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetCharacteristic(this IEntityWrapperRelation<msdyn_characteristicreqforteammember> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Characteristic, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirementid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_characteristicreqforteammember> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcerequirementid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_ratingvalue. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRatingValue(this IEntityWrapperRelation<msdyn_characteristicreqforteammember> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ratingvalue, columnSet);

    }
    public static class msdyn_clientextensionExt
    {
        /// <summary>
        /// Related attribute: msdyn_scheduleboardsettingid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetScheduleBoardSettingId(this IEntityWrapperRelation<msdyn_clientextension> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.msdyn_scheduleboardsettingid, columnSet);

    }
    public static class msdyn_CollabGraphResourceExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<msdyn_CollabGraphResource> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<msdyn_CollabGraphResource> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<msdyn_CollabGraphResource> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<msdyn_CollabGraphResource> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class msdyn_contactpricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_contact. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<msdyn_contactpricelist> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Contact, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_contactpricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);

    }
    public static class msdyn_contractlineinvoicescheduleExt
    {
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_contractlineinvoiceschedule> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractlinescheduleofvalue. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetProjectContractLineMilestone(this IEntityWrapperRelation<msdyn_contractlineinvoiceschedule> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineScheduleOfValue, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_contractlineinvoiceschedule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_contractlineinvoiceschedule> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineId, columnSet);

    }
    public static class msdyn_contractlinescheduleofvalueExt
    {
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_contractlinescheduleofvalue> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projecttask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_contractlinescheduleofvalue> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projecttask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContract(this IEntityWrapperRelation<msdyn_contractlinescheduleofvalue> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_contract, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_contractlinescheduleofvalue> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_contractlinescheduleofvalue> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_customerassetExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_masterasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetMasterAsset(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_MasterAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parentasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetParentAsset(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerassetcategory. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetCategory(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAssetCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_lastcommandsent. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetLastCommandSent(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.msdyn_LastCommandSent, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderproduct. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetWorkOrderProduct(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_customerasset> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);

    }
    public static class msdyn_databaseversionExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_databaseversion> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_delegationExt
    {
        /// <summary>
        /// Related attribute: msdyn_delegationfrom. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_delegation> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_delegationfrom, columnSet);
        /// <summary>
        /// Related attribute: msdyn_delegationto. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetDelegate(this IEntityWrapperRelation<msdyn_delegation> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_delegationto, columnSet);

    }
    public static class msdyn_dimensionfieldnameExt
    {
        /// <summary>
        /// Related attribute: msdyn_dimensionid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetPricingDimension(this IEntityWrapperRelation<msdyn_dimensionfieldname> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DimensionId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_dimensionfieldname> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_entitlementapplicationExt
    {
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<msdyn_entitlementapplication> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_serviceaccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_entitlement. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetEntitlement(this IEntityWrapperRelation<msdyn_entitlementapplication> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_entitlement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_entitlementapplication> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_customerasset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_assetcategory. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetAssetCategory(this IEntityWrapperRelation<msdyn_entitlementapplication> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_assetcategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_entitlementapplication> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_incidenttype, columnSet);

    }
    public static class msdyn_estimateExt
    {
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_estimate> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);

    }
    public static class msdyn_estimatelineExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomerContact(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_estimate. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetEstimate(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Estimate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetCategory(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_estimateline> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_expenseExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_expensecategory. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetExpenseCategory(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ExpenseCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_manager. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetManager(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_manager, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitgroup. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitGroup(this IEntityWrapperRelation<msdyn_expense> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitGroup, columnSet);

    }
    public static class msdyn_expensecategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_expensecategoryuid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_expensecategory> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ExpenseCategoryuId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_expensecategory> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_expensereceiptExt
    {
        /// <summary>
        /// Related attribute: msdyn_expenseid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetExpenseId(this IEntityWrapperRelation<msdyn_expensereceipt> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ExpenseId, columnSet);

    }
    public static class msdyn_factExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomerContact(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_estimate. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetEstimate(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Estimate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_estimatelineid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetEstimateLine(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.msdyn_estimatelineid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContract(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContract, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContractLineId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_fact> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_fieldcomputationExt
    {
        /// <summary>
        /// Related attribute: msdyn_propertyid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetFactor(this IEntityWrapperRelation<msdyn_fieldcomputation> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PropertyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_fieldcomputation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ProductId, columnSet);

    }
    public static class msdyn_fieldservicepricelistitemExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_fieldservicepricelistitem> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_fieldservicepricelistitem> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_productservice. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProductService(this IEntityWrapperRelation<msdyn_fieldservicepricelistitem> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ProductService, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_fieldservicepricelistitem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_fieldservicesettingExt
    {
        /// <summary>
        /// Related attribute: msdyn_defaultcanceledbookingstatus. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetDefaultCanceledBookingStatusDeprecated(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultCanceledBookingStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultscheduledbookingstatus. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetDefaultScheduledBookingStatusDeprecated(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultScheduledBookingStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_breakpaytype. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetBreakPayType(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BreakPayType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_businessclosurepaytype. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetBusinessClosurePayType(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BusinessClosurePayType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_overtimepaytype. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetOvertimePayType(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OvertimePayType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_travelpaytype. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetTravelPayType(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TravelPayType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workpaytype. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetWorkPayType(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkPayType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultwarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetDefaultWarehouse(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultWarehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_travelchargeitemid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetTravelChargeItem(this IEntityWrapperRelation<msdyn_fieldservicesetting> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TravelChargeItemId, columnSet);

    }
    public static class msdyn_fieldservicesystemjobExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_fieldservicesystemjob> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<msdyn_fieldservicesystemjob> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OwnerId, columnSet);

    }
    public static class msdyn_findworkeventExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_findworkevent> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookableResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_work. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetWork(this IEntityWrapperRelation<msdyn_findworkevent> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Work, columnSet);

    }
    public static class msdyn_flowcardtypeExt
    {
        /// <summary>
        /// Related attribute: msdyn_cardtypeid. Lookup to entity: cardtype.
        /// </summary>
        public static IEntityWrapper<CardType> Getcardtypeid(this IEntityWrapperRelation<msdyn_flowcardtype> wrapper, IColumnSet<CardType> columnSet)
            => wrapper.GetRelated(e => e.msdyn_cardtypeid, columnSet);

    }
    public static class msdyn_forecastdefinitionExt
    {
        /// <summary>
        /// Related attribute: msdyn_rollupquery. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRollupQuery(this IEntityWrapperRelation<msdyn_forecastdefinition> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.msdyn_rollupquery, columnSet);
        /// <summary>
        /// Related attribute: msdyn_metricid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetForecastMetric(this IEntityWrapperRelation<msdyn_forecastdefinition> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.msdyn_metricid, columnSet);

    }
    public static class msdyn_forecastinstanceExt
    {
        /// <summary>
        /// Related attribute: msdyn_matchinggoalid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetMatchingGoal(this IEntityWrapperRelation<msdyn_forecastinstance> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.msdyn_matchinggoalid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_forecastdefinitionid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetForecastDefinition(this IEntityWrapperRelation<msdyn_forecastinstance> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.msdyn_forecastdefinitionid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_forecastparentid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetForecastParent(this IEntityWrapperRelation<msdyn_forecastinstance> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.msdyn_forecastparentid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_forecastrecurrenceid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetForecastRecurrence(this IEntityWrapperRelation<msdyn_forecastinstance> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.msdyn_forecastrecurrenceid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_forecastinstance> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_forecastrecurrenceExt
    {
        /// <summary>
        /// Related attribute: msdyn_forecastdefinitionid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetForecastDefinition(this IEntityWrapperRelation<msdyn_forecastrecurrence> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.msdyn_forecastdefinitionid, columnSet);

    }
    public static class msdyn_geofenceExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccountLookup(this IEntityWrapperRelation<msdyn_geofence> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResourceLookup(this IEntityWrapperRelation<msdyn_geofence> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresourcebookingid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> Getbookableresourcebookingid(this IEntityWrapperRelation<msdyn_geofence> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresourcebookingid, columnSet);

    }
    public static class msdyn_geofenceeventExt
    {
        /// <summary>
        /// Related attribute: msdyn_geofence. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetFence(this IEntityWrapperRelation<msdyn_geofenceevent> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Geofence, columnSet);

    }
    public static class msdyn_geofencingsettingsExt
    {
        /// <summary>
        /// Related attribute: msdyn_unitofmeasure. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnitOfMeasure(this IEntityWrapperRelation<msdyn_geofencingsettings> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitOfMeasure, columnSet);

    }
    public static class msdyn_helppageExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_helppage> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_incidenttypeExt
    {
        /// <summary>
        /// Related attribute: msdyn_defaultworkordertype. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetDefaultWorkOrderType(this IEntityWrapperRelation<msdyn_incidenttype> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultWorkOrderType, columnSet);

    }
    public static class msdyn_incidenttype_requirementgroupExt
    {
        /// <summary>
        /// Related attribute: msdyn_incidenttypeid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_incidenttype_requirementgroup> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidenttypeId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requirementgroupid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRequirementGroupTemplate(this IEntityWrapperRelation<msdyn_incidenttype_requirementgroup> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RequirementGroupId, columnSet);

    }
    public static class msdyn_incidenttypecharacteristicExt
    {
        /// <summary>
        /// Related attribute: msdyn_characteristic. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetCharacteristic(this IEntityWrapperRelation<msdyn_incidenttypecharacteristic> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Characteristic, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_incidenttypecharacteristic> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_ratingvalue. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRatingValue(this IEntityWrapperRelation<msdyn_incidenttypecharacteristic> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RatingValue, columnSet);

    }
    public static class msdyn_incidenttypeproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_incidenttypeproduct> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_incidenttypeproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_incidenttypeproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_incidenttypeserviceExt
    {
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_incidenttypeservice> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_service. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetService(this IEntityWrapperRelation<msdyn_incidenttypeservice> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Service, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_incidenttypeservice> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_incidenttypeservicetaskExt
    {
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_incidenttypeservicetask> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_tasktype. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetTaskType(this IEntityWrapperRelation<msdyn_incidenttypeservicetask> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaskType, columnSet);

    }
    public static class msdyn_integrationjobdetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_integrationjobheader. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetIntegrationJobHeader(this IEntityWrapperRelation<msdyn_integrationjobdetail> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IntegrationJobHeader, columnSet);

    }
    public static class msdyn_inventoryadjustmentExt
    {
        /// <summary>
        /// Related attribute: msdyn_adjustedbyresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetAdjustedByResource(this IEntityWrapperRelation<msdyn_inventoryadjustment> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AdjustedByResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requestedbyresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRequestedByResource(this IEntityWrapperRelation<msdyn_inventoryadjustment> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RequestedByResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<msdyn_inventoryadjustment> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);

    }
    public static class msdyn_inventoryadjustmentproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_inventoryadjustment. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetInventoryAdjustment(this IEntityWrapperRelation<msdyn_inventoryadjustmentproduct> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_InventoryAdjustment, columnSet);
        /// <summary>
        /// Related attribute: msdyn_inventorytransfer. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetInventoryTransfer(this IEntityWrapperRelation<msdyn_inventoryadjustmentproduct> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.msdyn_InventoryTransfer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_inventoryadjustmentproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_inventoryadjustmentproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_inventoryjournalExt
    {
        /// <summary>
        /// Related attribute: msdyn_inventoryadjustmentproduct. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetInventoryAdjustmentProduct(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_InventoryAdjustmentProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_originatingjournal. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetOriginatingJournal(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OriginatingJournal, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorderproduct. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetPurchaseOrderProduct(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrderProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorderreceiptproduct. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetPurchaseOrderReceiptProduct(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrderReceiptProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rmareceiptproduct. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRMAReceiptProduct(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMAReceiptProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_allocatedtoworkorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetAllocatedToWorkOrder(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AllocatedToWorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderproduct. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetWorkOrderProduct(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_inventoryjournal> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_inventorytransferExt
    {
        /// <summary>
        /// Related attribute: msdyn_transferredbyresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetTransferredByResource(this IEntityWrapperRelation<msdyn_inventorytransfer> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransferredByResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_destinationwarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetDestinationWarehouse(this IEntityWrapperRelation<msdyn_inventorytransfer> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DestinationWarehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_sourcewarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetSourceWarehouse(this IEntityWrapperRelation<msdyn_inventorytransfer> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SourceWarehouse, columnSet);

    }
    public static class msdyn_invoicefrequencyExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_invoicefrequency> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_invoicefrequencydetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_invoicefrequency. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetInvoiceFrequency(this IEntityWrapperRelation<msdyn_invoicefrequencydetail> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.msdyn_invoicefrequency, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_invoicefrequencydetail> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_invoicelinetransactionExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomerContact(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoicelineid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetInvoiceLine(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_InvoiceLineId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_originalinvoicelinedetail. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetOriginalInvoiceLineDetail(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OriginalInvoiceLineDetail, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_contractorganizationalunitid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContract(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContract, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContractLineId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_invoicelinetransaction> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_iotalertExt
    {
        /// <summary>
        /// Related attribute: msdyn_case. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetCase(this IEntityWrapperRelation<msdyn_iotalert> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_case, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_iotalert> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parentalert. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetParentAlert(this IEntityWrapperRelation<msdyn_iotalert> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentAlert, columnSet);
        /// <summary>
        /// Related attribute: msdyn_device. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetDevice(this IEntityWrapperRelation<msdyn_iotalert> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Device, columnSet);
        /// <summary>
        /// Related attribute: msdyn_lastcommandsent. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetLastCommandSent(this IEntityWrapperRelation<msdyn_iotalert> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.msdyn_LastCommandSent, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_iotalert> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Workorder, columnSet);

    }
    public static class msdyn_iotdeviceExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<msdyn_iotdevice> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_category. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetCategory(this IEntityWrapperRelation<msdyn_iotdevice> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Category, columnSet);
        /// <summary>
        /// Related attribute: msdyn_lastcommandsent. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetDeprecatedLastCommandSent(this IEntityWrapperRelation<msdyn_iotdevice> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.msdyn_LastCommandSent, columnSet);
        /// <summary>
        /// Related attribute: msdyn_iotproviderinstance. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetIoTProviderInstance(this IEntityWrapperRelation<msdyn_iotdevice> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IoTProviderInstance, columnSet);

    }
    public static class msdyn_iotdevicecommandExt
    {
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_iotdevicecommand> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parentalert. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetParentAlert(this IEntityWrapperRelation<msdyn_iotdevicecommand> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentAlert, columnSet);
        /// <summary>
        /// Related attribute: msdyn_device. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetDevice(this IEntityWrapperRelation<msdyn_iotdevicecommand> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Device, columnSet);
        /// <summary>
        /// Related attribute: msdyn_command. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetCommand(this IEntityWrapperRelation<msdyn_iotdevicecommand> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Command, columnSet);

    }
    public static class msdyn_iotdevicedatahistoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_device. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetDevice(this IEntityWrapperRelation<msdyn_iotdevicedatahistory> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Device, columnSet);

    }
    public static class msdyn_iotdevicepropertyExt
    {
        /// <summary>
        /// Related attribute: msdyn_devicecategory. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetDeviceCategory(this IEntityWrapperRelation<msdyn_iotdeviceproperty> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DeviceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_property. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetProperty(this IEntityWrapperRelation<msdyn_iotdeviceproperty> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Property, columnSet);

    }
    public static class msdyn_iotdeviceregistrationhistoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_device. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetDevice(this IEntityWrapperRelation<msdyn_iotdeviceregistrationhistory> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Device, columnSet);

    }
    public static class msdyn_iotpropertydefinitionExt
    {
        /// <summary>
        /// Related attribute: msdyn_parentproperty. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetParentProperty(this IEntityWrapperRelation<msdyn_iotpropertydefinition> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentProperty, columnSet);

    }
    public static class msdyn_iotproviderinstanceExt
    {
        /// <summary>
        /// Related attribute: msdyn_iotprovider. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetIoTProvider(this IEntityWrapperRelation<msdyn_iotproviderinstance> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IoTProvider, columnSet);

    }
    public static class msdyn_iotsettingsExt
    {
        /// <summary>
        /// Related attribute: msdyn_defaultiotproviderinstance. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetDefaultIoTProviderInstance(this IEntityWrapperRelation<msdyn_iotsettings> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultIoTProviderInstance, columnSet);

    }
    public static class msdyn_journalExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_journal> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookableResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceRole(this IEntityWrapperRelation<msdyn_journal> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_expensecategory. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetExpenseCategory(this IEntityWrapperRelation<msdyn_journal> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ExpenseCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultproject. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetDefaultProject(this IEntityWrapperRelation<msdyn_journal> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultProject, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_journal> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projecttask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_journal> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ProjectTask, columnSet);

    }
    public static class msdyn_journallineExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomerContact(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_journal. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetJournal(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Journal, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_contractorganizationalunitid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContract(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContract, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContractLineId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_journalline> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_knowledgearticleimageExt
    {

    }
    public static class msdyn_knowledgearticletemplateExt
    {

    }
    public static class msdyn_mlresultcacheExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_mlresultcache> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_msteamssettingsv2Ext
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<msdyn_msteamssettingsv2> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<msdyn_msteamssettingsv2> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<msdyn_msteamssettingsv2> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<msdyn_msteamssettingsv2> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class msdyn_opportunitylineresourcecategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_opportunitylineresourcecategory> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_opportunitylinetransactionclassification. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetOpportunityLineTransactionClassification(this IEntityWrapperRelation<msdyn_opportunitylineresourcecategory> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OpportunityLineTransactionClassification, columnSet);

    }
    public static class msdyn_opportunitylinetransactionExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomerContact(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_opportunitylinetransaction> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_opportunitylinetransactioncategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_opportunitylinetransactionclassification. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetOpportunityLineTransactionClassification(this IEntityWrapperRelation<msdyn_opportunitylinetransactioncategory> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OpportunityLineTransactionClassification, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_opportunitylinetransactioncategory> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);

    }
    public static class msdyn_opportunitypricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_opportunity. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<msdyn_opportunitypricelist> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Opportunity, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_opportunitypricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);

    }
    public static class msdyn_orderinvoicingdateExt
    {
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_orderinvoicingdate> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_order. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetOrder(this IEntityWrapperRelation<msdyn_orderinvoicingdate> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Order, columnSet);

    }
    public static class msdyn_orderinvoicingproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_orderinvoicingsetup. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetOrderInvoicingSetup(this IEntityWrapperRelation<msdyn_orderinvoicingproduct> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrderInvoicingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_orderinvoicingproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_orderinvoicingproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_orderinvoicingproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_orderinvoicingsetupExt
    {
        /// <summary>
        /// Related attribute: msdyn_order. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetOrder(this IEntityWrapperRelation<msdyn_orderinvoicingsetup> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Order, columnSet);

    }
    public static class msdyn_orderinvoicingsetupdateExt
    {
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_orderinvoicingsetupdate> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_orderinvoicingdate. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetOrderInvoicingDate(this IEntityWrapperRelation<msdyn_orderinvoicingsetupdate> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrderInvoicingDate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoicesetup. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetInvoiceSetup(this IEntityWrapperRelation<msdyn_orderinvoicingsetupdate> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_InvoiceSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_order. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetOrder(this IEntityWrapperRelation<msdyn_orderinvoicingsetupdate> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Order, columnSet);

    }
    public static class msdyn_orderlineresourcecategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_orderlineresourcecategory> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractlinetransactionclassification. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetContractLineTransactionClassification(this IEntityWrapperRelation<msdyn_orderlineresourcecategory> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineTransactionClassification, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_orderlineresourcecategory> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineId, columnSet);

    }
    public static class msdyn_orderlinetransactionExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContactCustomer(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_origin. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetOrigin(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Origin, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContract(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContract, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salescontractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesContractLineId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_orderlinetransaction> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_orderlinetransactioncategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_contractlinetransactionclassification. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetContractLineTransactionClassification(this IEntityWrapperRelation<msdyn_orderlinetransactioncategory> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineTransactionClassification, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_orderlinetransactioncategory> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_orderlinetransactioncategory> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineId, columnSet);

    }
    public static class msdyn_orderlinetransactionclassificationExt
    {
        /// <summary>
        /// Related attribute: msdyn_contractlineid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetProjectContractLine(this IEntityWrapperRelation<msdyn_orderlinetransactionclassification> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractLineId, columnSet);

    }
    public static class msdyn_orderpricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_orderpricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contract. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetProjectContract(this IEntityWrapperRelation<msdyn_orderpricelist> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Contract, columnSet);

    }
    public static class msdyn_organizationalunitExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_organizationalunit> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_currency. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_organizationalunit> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.msdyn_currency, columnSet);

    }
    public static class msdyn_paymentExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<msdyn_payment> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_paymentmethod. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetPaymentMethod(this IEntityWrapperRelation<msdyn_payment> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PaymentMethod, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_payment> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_payment> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_paymentdetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_invoice. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetInvoice(this IEntityWrapperRelation<msdyn_paymentdetail> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Invoice, columnSet);
        /// <summary>
        /// Related attribute: msdyn_payment. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetPayment(this IEntityWrapperRelation<msdyn_paymentdetail> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Payment, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_paymentdetail> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Workorder, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_paymentdetail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_playbookactivityExt
    {
        /// <summary>
        /// Related attribute: msdyn_playbooktemplateid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetPlaybookTemplate(this IEntityWrapperRelation<msdyn_playbookactivity> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_playbooktemplateid, columnSet);

    }
    public static class msdyn_playbookactivityattributeExt
    {
        /// <summary>
        /// Related attribute: msdyn_playbookactivityid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetPlaybookActivityID(this IEntityWrapperRelation<msdyn_playbookactivityattribute> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.msdyn_playbookactivityid, columnSet);

    }
    public static class msdyn_playbookinstanceExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regarding. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Related attribute: msdyn_categoryid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetCategory(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_categoryid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_playbooktemplateid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetPlaybookTemplate(this IEntityWrapperRelation<msdyn_playbookinstance> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_playbooktemplateid, columnSet);

    }
    public static class msdyn_playbooktemplateExt
    {
        /// <summary>
        /// Related attribute: msdyn_categoryid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetCategory(this IEntityWrapperRelation<msdyn_playbooktemplate> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_categoryid, columnSet);

    }
    public static class msdyn_postalcodeExt
    {
        /// <summary>
        /// Related attribute: msdyn_serviceterritory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetServiceTerritory(this IEntityWrapperRelation<msdyn_postalcode> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceTerritory, columnSet);

    }
    public static class msdyn_PostConfigExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_PostConfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_PostRuleConfigExt
    {
        /// <summary>
        /// Related attribute: msdyn_postconfigid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetPostEntityId(this IEntityWrapperRelation<msdyn_PostRuleConfig> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PostConfigId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_PostRuleConfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_processnotesExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_processnotes> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_productinventoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<msdyn_productinventory> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_productinventory> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_productinventory> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_productinventory> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_projectExt
    {
        /// <summary>
        /// Related attribute: msdyn_customer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_customer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projecttemplate. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProjectTemplate(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ProjectTemplate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workhourtemplate. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetWorkHourTemplate(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workhourtemplate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salesorderid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetContract(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_salesorderid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectmanager. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetProjectManager(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectmanager, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectteamid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetProjectTeam(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectteamid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_project> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_projectapprovalExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_submittedby. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetSubmittedBy(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SubmittedBy, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceRole(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_expenseentry. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetExpenseEntry(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ExpenseEntry, columnSet);
        /// <summary>
        /// Related attribute: msdyn_expensecategory. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetExpenseCategory(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ExpenseCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_referencejournalline. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetreferenceJournalLine(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.msdyn_referencejournalline, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projecttask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ProjectTask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_timeentry. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetTimeEntry(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeEntry, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_approvedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetApprovedBy(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ApprovedBy, columnSet);
        /// <summary>
        /// Related attribute: msdyn_manager. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetManager(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Manager, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_projectapproval> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_projectparameterExt
    {
        /// <summary>
        /// Related attribute: msdyn_projectmanagerrole. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetProjectManagerRole(this IEntityWrapperRelation<msdyn_projectparameter> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectmanagerrole, columnSet);
        /// <summary>
        /// Related attribute: msdyn_teammemberrole. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetTeamMemberRole(this IEntityWrapperRelation<msdyn_projectparameter> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_teammemberrole, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoicefrequency. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetInvoiceFrequency(this IEntityWrapperRelation<msdyn_projectparameter> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.msdyn_invoicefrequency, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultorganizationalunit. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetDefaultOrganizationalUnit(this IEntityWrapperRelation<msdyn_projectparameter> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_defaultorganizationalunit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultworktemplate. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetdefaultWorkTemplate(this IEntityWrapperRelation<msdyn_projectparameter> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_defaultWorkTemplate, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_projectparameter> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_projectparameterpricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_projectparameter. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetProjectParameter(this IEntityWrapperRelation<msdyn_projectparameterpricelist> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ProjectParameter, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_projectparameterpricelist> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_projectparameterpricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);

    }
    public static class msdyn_projectpricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_projectpricelist> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_projectpricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);

    }
    public static class msdyn_projecttaskExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRoleDeprecatedInV30(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcecategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnitDeprecatedInV30(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parenttask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetParentTask(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_parenttask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_assignedteammembers. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetAssignedTeamMembersDeprecatedInV30(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssignedTeamMembers, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetCategory(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_transactioncategory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_projecttask> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_projecttaskdependencyExt
    {
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_projecttaskdependency> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_predecessortask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetPredecessorTask(this IEntityWrapperRelation<msdyn_projecttaskdependency> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PredecessorTask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_successortask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetSuccessorTask(this IEntityWrapperRelation<msdyn_projecttaskdependency> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SuccessorTask, columnSet);

    }
    public static class msdyn_projecttaskstatususerExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_projecttaskstatususer> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookableResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projecttaskid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_projecttaskstatususer> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projecttaskId, columnSet);

    }
    public static class msdyn_projectteamExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresourceid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_projectteam> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresourceid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_projectteam> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcecategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_organizationalunit. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_projectteam> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_organizationalunit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> Getproject(this IEntityWrapperRelation<msdyn_projectteam> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirementid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_projectteam> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcerequirementid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_worktemplate. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetWorkTemplate(this IEntityWrapperRelation<msdyn_projectteam> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_worktemplate, columnSet);

    }
    public static class msdyn_projectteammembersignupExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_projectteammembersignup> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookableResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_teammembership. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetTeamMembership(this IEntityWrapperRelation<msdyn_projectteammembersignup> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TeamMembership, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_projectteammembersignup> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_projecttransactioncategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_projecttransactioncategory> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_projecttransactioncategory> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);

    }
    public static class msdyn_purchaseorderExt
    {
        /// <summary>
        /// Related attribute: msdyn_vendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Vendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requestedbyresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRequestedByResource(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RequestedByResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_paymentterm. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetPaymentTerm(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PaymentTerm, columnSet);
        /// <summary>
        /// Related attribute: msdyn_substatus. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetSubstatus(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SubStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_shipvia. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetShipVia(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ShipVia, columnSet);
        /// <summary>
        /// Related attribute: msdyn_receivetowarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetReceiveToWarehouse(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReceivetoWarehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_approvedrejectedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetApprovedRejectedBy(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ApprovedRejectedBy, columnSet);
        /// <summary>
        /// Related attribute: msdyn_orderedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOrderedBy(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrderedBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_purchaseorder> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_purchaseorderbillExt
    {
        /// <summary>
        /// Related attribute: msdyn_paymentterm. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetPaymentTerm(this IEntityWrapperRelation<msdyn_purchaseorderbill> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PaymentTerm, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorder. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetPurchaseOrder(this IEntityWrapperRelation<msdyn_purchaseorderbill> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetTaxCode(this IEntityWrapperRelation<msdyn_purchaseorderbill> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaxCode, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_purchaseorderbill> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_purchaseorderproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_associatetobooking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetAssociateToBooking(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssociateToBooking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorder. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetPurchaseOrder(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_associatetowarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetAssociateToWarehouse(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssociateToWarehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_associatetoworkorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetAssociateToWorkOrder(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssociateToWorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_purchaseorderproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_purchaseorderreceiptExt
    {
        /// <summary>
        /// Related attribute: msdyn_purchaseorder. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetPurchaseOrder(this IEntityWrapperRelation<msdyn_purchaseorderreceipt> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_shipvia. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetShipVia(this IEntityWrapperRelation<msdyn_purchaseorderreceipt> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ShipVia, columnSet);
        /// <summary>
        /// Related attribute: msdyn_receivedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetReceivedBy(this IEntityWrapperRelation<msdyn_purchaseorderreceipt> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReceivedBy, columnSet);

    }
    public static class msdyn_purchaseorderreceiptproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_associatetobooking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetAssociateToBooking(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssociateToBooking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorder. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetPurchaseOrder(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorderbill. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetPurchaseOrderBill(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrderBill, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorderproduct. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetPurchaseOrderProduct(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrderProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorderreceipt. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetPurchaseOrderReceipt(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrderReceipt, columnSet);
        /// <summary>
        /// Related attribute: msdyn_associatetowarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetAssociateToWarehouse(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssociateToWarehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_associatetoworkorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetAssociateToWorkOrder(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AssociateToWorkOrder, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_purchaseorderreceiptproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_quotebookingincidentExt
    {
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_quotebookingincident> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_customerasset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_quotebookingincident> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_incidenttype, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingsetup. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetQuoteBookingSetup(this IEntityWrapperRelation<msdyn_quotebookingincident> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotebookingsetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotebookingincident> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Quote, columnSet);

    }
    public static class msdyn_quotebookingproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_customerasset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingincident. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetQuoteBookingIncident(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotebookingincident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingsetup. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetQuoteBookingSetup(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotebookingsetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_pricelist, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quote, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_quotebookingproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_unit, columnSet);

    }
    public static class msdyn_quotebookingserviceExt
    {
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_customerasset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingincident. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetQuoteBookingIncident(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotebookingincident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingsetup. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetQuoteBookingSetup(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotebookingsetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_pricelist, columnSet);
        /// <summary>
        /// Related attribute: msdyn_service. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetService(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Service, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quote, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_quotebookingservice> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_unit, columnSet);

    }
    public static class msdyn_quotebookingservicetaskExt
    {
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_quotebookingservicetask> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_customerasset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingincident. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetQuoteBookingIncident(this IEntityWrapperRelation<msdyn_quotebookingservicetask> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotebookingincident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotebookingsetup. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetQuoteBookingSetup(this IEntityWrapperRelation<msdyn_quotebookingservicetask> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteBookingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_tasktype. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetTaskType(this IEntityWrapperRelation<msdyn_quotebookingservicetask> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaskType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotebookingservicetask> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quote, columnSet);

    }
    public static class msdyn_quotebookingsetupExt
    {
        /// <summary>
        /// Related attribute: msdyn_preferredresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetPreferredResource(this IEntityWrapperRelation<msdyn_quotebookingsetup> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_preferredresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_priority. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetPriority(this IEntityWrapperRelation<msdyn_quotebookingsetup> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.msdyn_priority, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workordertype. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetWorkOrderType(this IEntityWrapperRelation<msdyn_quotebookingsetup> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workordertype, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotebookingsetup> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quote, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotedetail_msdyn_quotebookingset. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetRelationshipBetweenQuoteDetailAndQuoteBookingSetup(this IEntityWrapperRelation<msdyn_quotebookingsetup> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotedetail, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quotebookingsetup> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_quoteinvoicingproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_quoteinvoicingsetup. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetQuoteInvoicingSetup(this IEntityWrapperRelation<msdyn_quoteinvoicingproduct> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteInvoicingSetup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_quoteinvoicingproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quoteinvoicingproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_quoteinvoicingproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_quoteinvoicingsetupExt
    {
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quoteinvoicingsetup> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Quote, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quoteinvoicingsetup> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_quotelineanalyticsbreakdownExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_quotelineanalyticsbreakdown> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelinescheduleofvalue. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetQuoteLineScheduleOfValue(this IEntityWrapperRelation<msdyn_quotelineanalyticsbreakdown> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineScheduleOfValue, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelinedetail. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetQuoteLineDetail(this IEntityWrapperRelation<msdyn_quotelineanalyticsbreakdown> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineDetail, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_quotelineanalyticsbreakdown> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotelineanalyticsbreakdown> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Quote, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quotelineanalyticsbreakdown> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_quotelineinvoicescheduleExt
    {
        /// <summary>
        /// Related attribute: msdyn_quotelinescheduleofvalue. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetQuoteLineScheduleOfValue(this IEntityWrapperRelation<msdyn_quotelineinvoiceschedule> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineScheduleOfValue, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_quotelineinvoiceschedule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelineid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteLine(this IEntityWrapperRelation<msdyn_quotelineinvoiceschedule> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotelineid, columnSet);

    }
    public static class msdyn_quotelineresourcecategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_quotelineresourcecategory> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelinetransactionclassification. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetQuoteLineTransactionClassification(this IEntityWrapperRelation<msdyn_quotelineresourcecategory> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineTransactionClassification, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelineid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteLine(this IEntityWrapperRelation<msdyn_quotelineresourcecategory> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineId, columnSet);

    }
    public static class msdyn_quotelinescheduleofvalueExt
    {
        /// <summary>
        /// Related attribute: msdyn_projecttask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_quotelinescheduleofvalue> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projecttask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelineid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteLine(this IEntityWrapperRelation<msdyn_quotelinescheduleofvalue> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotelineid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quotelinescheduleofvalue> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_quotelinetransactionExt
    {
        /// <summary>
        /// Related attribute: msdyn_accountcustomer. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactcustomer. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContactCustomer(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactCustomer, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contactvendor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContactVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_task. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Task, columnSet);
        /// <summary>
        /// Related attribute: msdyn_origin. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetOrigin(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Origin, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quoteid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelineid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteLine(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_quotelineid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_quotelinetransaction> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_quotelinetransactioncategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_quotelinetransactionclassification. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetQuoteLineTransactionClassification(this IEntityWrapperRelation<msdyn_quotelinetransactioncategory> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineTransactionClassification, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_quotelinetransactioncategory> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quotelineid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteLine(this IEntityWrapperRelation<msdyn_quotelinetransactioncategory> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineId, columnSet);

    }
    public static class msdyn_quotelinetransactionclassificationExt
    {
        /// <summary>
        /// Related attribute: msdyn_quotelineid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteLine(this IEntityWrapperRelation<msdyn_quotelinetransactionclassification> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_QuoteLineId, columnSet);

    }
    public static class msdyn_quotepricelistExt
    {
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_quotepricelist> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_quote. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<msdyn_quotepricelist> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Quote, columnSet);

    }
    public static class msdyn_requirementcharacteristicExt
    {
        /// <summary>
        /// Related attribute: msdyn_characteristic. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetCharacteristic(this IEntityWrapperRelation<msdyn_requirementcharacteristic> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Characteristic, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requirementsystemuse. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetRequirementSystemUse(this IEntityWrapperRelation<msdyn_requirementcharacteristic> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RequirementSystemUse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_requirementcharacteristic> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_requirementcharacteristic> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderincident. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetWorkOrderIncident(this IEntityWrapperRelation<msdyn_requirementcharacteristic> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_ratingvalue. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRatingValue(this IEntityWrapperRelation<msdyn_requirementcharacteristic> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RatingValue, columnSet);

    }
    public static class msdyn_requirementgroupExt
    {
        /// <summary>
        /// Related attribute: msdyn_requirementgrouptemplateid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRequirementGroupTemplate(this IEntityWrapperRelation<msdyn_requirementgroup> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_requirementgrouptemplateid, columnSet);

    }
    public static class msdyn_requirementorganizationunitExt
    {
        /// <summary>
        /// Related attribute: msdyn_organizationalunit. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetOrganizationalUnit(this IEntityWrapperRelation<msdyn_requirementorganizationunit> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrganizationalUnit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_requirementorganizationunit> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);

    }
    public static class msdyn_requirementrelationshipExt
    {
        /// <summary>
        /// Related attribute: msdyn_requirementgroupid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRequirementGroup(this IEntityWrapperRelation<msdyn_requirementrelationship> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_requirementgroupid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parentrequirementrelationshipid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetParentRequirementRelationship(this IEntityWrapperRelation<msdyn_requirementrelationship> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.msdyn_parentrequirementrelationshipid, columnSet);

    }
    public static class msdyn_requirementresourcecategoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetResourceCategory(this IEntityWrapperRelation<msdyn_requirementresourcecategory> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_requirementresourcecategory> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);

    }
    public static class msdyn_requirementresourcepreferenceExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<msdyn_requirementresourcepreference> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_requirementresourcepreference> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookableResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_requirementresourcepreference> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_requirementresourcepreference> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);

    }
    public static class msdyn_resourceassignmentExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresourceid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_resourceassignment> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresourceid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookingstatusid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetBookingStatusDeprecatedInV30(this IEntityWrapperRelation<msdyn_resourceassignment> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookingstatusid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_resourceassignment> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taskid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetTask(this IEntityWrapperRelation<msdyn_resourceassignment> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_taskid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectteamid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetProjectTeam(this IEntityWrapperRelation<msdyn_resourceassignment> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectteamid, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_resourceassignment> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_resourceassignmentdetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourceassignmentid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetResourceAssignment(this IEntityWrapperRelation<msdyn_resourceassignmentdetail> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourceassignmentid, columnSet);

    }
    public static class msdyn_resourcecategorymarkuppricelevelExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_resourcecategorymarkuppricelevel> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_resourcecategorymarkuppricelevel> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcecategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_organizationalunit. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_resourcecategorymarkuppricelevel> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_organizationalunit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_resourcecategorymarkuppricelevel> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_transactioncategory, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_resourcecategorymarkuppricelevel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_resourcecategorymarkuppricelevel> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_pricelist, columnSet);

    }
    public static class msdyn_resourcecategorypricelevelExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_organizationalunit. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_organizationalunit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_transactioncategory, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_primaryunit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetPrimaryUnit(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PrimaryUnit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_resourcecategorypricelevel> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_resourcerequestExt
    {
        /// <summary>
        /// Related attribute: msdyn_roleid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_resourcerequest> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_roleid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirementid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_resourcerequest> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcerequirementid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_claimedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetClaimedBy(this IEntityWrapperRelation<msdyn_resourcerequest> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_claimedby, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requestedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRequestedBy(this IEntityWrapperRelation<msdyn_resourcerequest> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_requestedby, columnSet);

    }
    public static class msdyn_resourcerequirementExt
    {
        /// <summary>
        /// Related attribute: msdyn_appointmentrequirementid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetAppointmentRequirement(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AppointmentRequirementId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_roleid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRoleDeprecated(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_roleid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_bookingsetupmetadataid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetBookingSetupMetadata(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BookingSetupMetadataId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_priority. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetPriority(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Priority, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requirementgroupid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRequirementGroup(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_requirementgroupid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requirementrelationshipid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetRequirementRelationship(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.msdyn_requirementrelationshipid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_status. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetStatus(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Status, columnSet);
        /// <summary>
        /// Related attribute: msdyn_timegroup. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetFulfillmentPreference(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeGroup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workhourtemplate. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetWorkHourTemplate(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workhourtemplate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceappointment. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetServiceActivity(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.msdyn_serviceappointment, columnSet);
        /// <summary>
        /// Related attribute: msdyn_territory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetTerritory(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Territory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_resourcerequirement> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_resourcerequirementdetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcerequirementid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_resourcerequirementdetail> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcerequirementid, columnSet);

    }
    public static class msdyn_resourceterritoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_resourceterritory> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Resource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_territory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetTerritory(this IEntityWrapperRelation<msdyn_resourceterritory> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Territory, columnSet);

    }
    public static class msdyn_rmaExt
    {
        /// <summary>
        /// Related attribute: msdyn_billingaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBillingAccount(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BillingAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_requestedbycontact. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRequestedByContact(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RequestedByContact, columnSet);
        /// <summary>
        /// Related attribute: msdyn_substatus. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetSubstatus(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SubStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_shipvia. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetShipVia(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ShipVia, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetTaxCode(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_approvedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetApprovedBy(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ApprovedBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_rma> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_rmaproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_changeownership. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetChangeOwnership(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Changeownership, columnSet);
        /// <summary>
        /// Related attribute: msdyn_returntovendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetReturnToVendor(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReturntoVendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rma. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRMA(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMA, columnSet);
        /// <summary>
        /// Related attribute: msdyn_returntowarehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetReturnToWarehouse(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReturntoWarehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_woproduct. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetWOProduct(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WOProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_rmaproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_rmareceiptExt
    {
        /// <summary>
        /// Related attribute: msdyn_rma. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRMA(this IEntityWrapperRelation<msdyn_rmareceipt> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMA, columnSet);
        /// <summary>
        /// Related attribute: msdyn_shipvia. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetShipVia(this IEntityWrapperRelation<msdyn_rmareceipt> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ShipVia, columnSet);
        /// <summary>
        /// Related attribute: msdyn_receivedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetReceivedBy(this IEntityWrapperRelation<msdyn_rmareceipt> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReceivedBy, columnSet);

    }
    public static class msdyn_rmareceiptproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_rma. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRMA(this IEntityWrapperRelation<msdyn_rmareceiptproduct> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMA, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rmaproduct. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRMAProduct(this IEntityWrapperRelation<msdyn_rmareceiptproduct> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMAProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rmareceipt. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRMAReceipt(this IEntityWrapperRelation<msdyn_rmareceiptproduct> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMAReceipt, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rtv. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRTV(this IEntityWrapperRelation<msdyn_rmareceiptproduct> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RTV, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rtvproduct. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRTVProduct(this IEntityWrapperRelation<msdyn_rmareceiptproduct> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RTVProduct, columnSet);

    }
    public static class msdyn_rolecompetencyrequirementExt
    {
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_rolecompetencyrequirement> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourcecategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_characteristic. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetCharacteristic(this IEntityWrapperRelation<msdyn_rolecompetencyrequirement> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_characteristic, columnSet);
        /// <summary>
        /// Related attribute: msdyn_ratingvalue. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRatingValue(this IEntityWrapperRelation<msdyn_rolecompetencyrequirement> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ratingvalue, columnSet);

    }
    public static class msdyn_roleutilizationExt
    {
        /// <summary>
        /// Related attribute: msdyn_role. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_roleutilization> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_role, columnSet);

    }
    public static class msdyn_rtvExt
    {
        /// <summary>
        /// Related attribute: msdyn_vendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetVendor(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Vendor, columnSet);
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_vendorcontact. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetVendorContact(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_VendorContact, columnSet);
        /// <summary>
        /// Related attribute: msdyn_originalpurchaseorder. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetOriginalPurchaseOrder(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OriginalPurchaseOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_originatingrma. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetOriginatingRMA(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OriginatingRMA, columnSet);
        /// <summary>
        /// Related attribute: msdyn_substatus. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetSubstatus(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SubStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_shipvia. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetShipVia(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ShipVia, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetTaxCode(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_approveddeclinedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetApprovedDeclinedBy(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ApprovedDeclinedBy, columnSet);
        /// <summary>
        /// Related attribute: msdyn_returnedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetReturnedBy(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReturnedBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_rtv> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_rtvproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_rma. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRMA(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMA, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rmaproduct. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRMAProduct(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RMAProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_rtv. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRTV(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RTV, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderproduct. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetWorkOrderProduct(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_rtvproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_scheduleboardsettingExt
    {
        /// <summary>
        /// Related attribute: msdyn_filterlayout. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetFilterLayout(this IEntityWrapperRelation<msdyn_scheduleboardsetting> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_FilterLayout, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecelltemplate. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetResourceCellTemplate(this IEntityWrapperRelation<msdyn_scheduleboardsetting> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceCellTemplate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_retrieveresourcesquery. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRetrieveResourcesQuery(this IEntityWrapperRelation<msdyn_scheduleboardsetting> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RetrieveResourcesQuery, columnSet);

    }
    public static class msdyn_schedulingparameterExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_schedulingparameter> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_sikeyvalueconfigExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_sikeyvalueconfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_solutionhealthruleExt
    {
        /// <summary>
        /// Related attribute: msdyn_solutionhealthrulesetid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetSolutionHealthRuleSet(this IEntityWrapperRelation<msdyn_solutionhealthrule> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_solutionhealthrulesetId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resolutionaction. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetResolutionAction(this IEntityWrapperRelation<msdyn_solutionhealthrule> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResolutionAction, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workflow. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflow(this IEntityWrapperRelation<msdyn_solutionhealthrule> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Workflow, columnSet);

    }
    public static class msdyn_solutionhealthruleargumentExt
    {
        /// <summary>
        /// Related attribute: msdyn_solutionhealthrule. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetSolutionHealthRule(this IEntityWrapperRelation<msdyn_solutionhealthruleargument> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SolutionHealthRule, columnSet);

    }
    public static class msdyn_solutionhealthrulesetExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_solutionhealthruleset> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_systemuserschedulersettingExt
    {
        /// <summary>
        /// Related attribute: msdyn_user. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetUser(this IEntityWrapperRelation<msdyn_systemuserschedulersetting> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_User, columnSet);

    }
    public static class msdyn_taxcodedetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_parenttaxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetParentTaxCode(this IEntityWrapperRelation<msdyn_taxcodedetail> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentTaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetTaxCode(this IEntityWrapperRelation<msdyn_taxcodedetail> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaxCode, columnSet);

    }
    public static class msdyn_TeamsCollaborationExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<msdyn_TeamsCollaboration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<msdyn_TeamsCollaboration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<msdyn_TeamsCollaboration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<msdyn_TeamsCollaboration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class msdyn_timeentryExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcecategory. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRole(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_resourceCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourceorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetResourcingUnit(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_projecttask. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetProjectTask(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_projectTask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_transactioncategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_manager. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetManager(this IEntityWrapperRelation<msdyn_timeentry> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_manager, columnSet);

    }
    public static class msdyn_timegroupdetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_timegroupid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetFulfillmentPreference(this IEntityWrapperRelation<msdyn_timegroupdetail> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeGroupId, columnSet);

    }
    public static class msdyn_timeoffcalendarExt
    {
        /// <summary>
        /// Related attribute: msdyn_timeentry. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetTimeEntry(this IEntityWrapperRelation<msdyn_timeoffcalendar> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.msdyn_timeEntry, columnSet);

    }
    public static class msdyn_timeoffrequestExt
    {
        /// <summary>
        /// Related attribute: msdyn_resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_timeoffrequest> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Resource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_approvedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetApprovedBy(this IEntityWrapperRelation<msdyn_timeoffrequest> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Approvedby, columnSet);

    }
    public static class msdyn_transactioncategoryExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_transactioncategory> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultunit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetDefaultUnit(this IEntityWrapperRelation<msdyn_transactioncategory> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultUnit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitgroup. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_transactioncategory> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitGroup, columnSet);

    }
    public static class msdyn_transactioncategoryclassificationExt
    {
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_transactioncategoryclassification> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_transactioncategory, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_transactioncategoryclassification> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_transactioncategoryhierarchyelementExt
    {
        /// <summary>
        /// Related attribute: msdyn_childcategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetChildCategory(this IEntityWrapperRelation<msdyn_transactioncategoryhierarchyelement> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ChildCategory, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parentcategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetParentCategory(this IEntityWrapperRelation<msdyn_transactioncategoryhierarchyelement> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentCategory, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_transactioncategoryhierarchyelement> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_transactioncategorypricelevelExt
    {
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<msdyn_transactioncategorypricelevel> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_transactioncategorypricelevel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_transactioncategorypricelevel> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_transactioncategorypricelevel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_transactioncategorypricelevel> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitschedule. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<msdyn_transactioncategorypricelevel> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitSchedule, columnSet);

    }
    public static class msdyn_transactiontypeExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_transactiontype> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_defaultunit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetDefaultUnit(this IEntityWrapperRelation<msdyn_transactiontype> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultUnit, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unitgroup. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitGroup(this IEntityWrapperRelation<msdyn_transactiontype> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UnitGroup, columnSet);

    }
    public static class msdyn_uniquenumberExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_uniquenumber> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_upgraderunExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_upgraderun> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_upgradestepExt
    {
        /// <summary>
        /// Related attribute: msdyn_upgradeversion. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetUpgradeVersion(this IEntityWrapperRelation<msdyn_upgradestep> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UpgradeVersion, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_upgradestep> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_upgradeversionExt
    {
        /// <summary>
        /// Related attribute: msdyn_upgraderun. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetUpgradeRun(this IEntityWrapperRelation<msdyn_upgradeversion> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.msdyn_UpgradeRun, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_upgradeversion> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_userworkhistoryExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetBookableResource(this IEntityWrapperRelation<msdyn_userworkhistory> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Bookableresource, columnSet);

    }
    public static class msdyn_wallsavedqueryExt
    {
        /// <summary>
        /// Related attribute: msdyn_postconfigurationid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetPostEntityId(this IEntityWrapperRelation<msdyn_wallsavedquery> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.msdyn_postconfigurationid, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_wallsavedquery> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_wallsavedqueryusersettingsExt
    {
        /// <summary>
        /// Related attribute: msdyn_wallsavedqueryid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetWallViewId(this IEntityWrapperRelation<msdyn_wallsavedqueryusersettings> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.msdyn_wallsavedqueryid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_userid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetUserId(this IEntityWrapperRelation<msdyn_wallsavedqueryusersettings> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_userid, columnSet);

    }
    public static class msdyn_workhourtemplateExt
    {
        /// <summary>
        /// Related attribute: msdyn_bookableresourceid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetTemplateResource(this IEntityWrapperRelation<msdyn_workhourtemplate> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_bookableresourceid, columnSet);

    }
    public static class msdyn_workorderExt
    {
        /// <summary>
        /// Related attribute: msdyn_billingaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetBillingAccount(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_BillingAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_preferredresource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetPreferredResourceDeprecated(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PreferredResource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_supportcontact. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetSupportContact(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SupportContact, columnSet);
        /// <summary>
        /// Related attribute: msdyn_reportedbycontact. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetReportedByContact(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ReportedByContact, columnSet);
        /// <summary>
        /// Related attribute: msdyn_servicerequest. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetCase(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceRequest, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetPrimaryIncidentCustomerAsset(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_primaryincidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetPrimaryIncidentType(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PrimaryIncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_iotalert. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetIoTAlert(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IoTAlert, columnSet);
        /// <summary>
        /// Related attribute: msdyn_priority. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetPriority(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Priority, columnSet);
        /// <summary>
        /// Related attribute: msdyn_taxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetSalesTaxCode(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_timegroup. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetFulfillmentPreference(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeGroup, columnSet);
        /// <summary>
        /// Related attribute: msdyn_timegroupdetailselected. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetTimeGroupDetailSelectedDeprecated(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeGroupDetailSelected, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workhourtemplate. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetWorkHourTemplate(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workhourtemplate, columnSet);
        /// <summary>
        /// Related attribute: msdyn_parentworkorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetParentWorkOrder(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ParentWorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_substatus. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetSubstatus(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SubStatus, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workordertype. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetWorkOrderType(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderarrivaltimekpiid. Lookup to entity: slakpiinstance.
        /// </summary>
        public static IEntityWrapper<SLAKPIInstance> GetWorkOrderArrivalTimeKPI(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<SLAKPIInstance> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workorderarrivaltimekpiid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderresolutionkpiid. Lookup to entity: slakpiinstance.
        /// </summary>
        public static IEntityWrapper<SLAKPIInstance> GetWorkOrderResolutionKPI(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<SLAKPIInstance> columnSet)
            => wrapper.GetRelated(e => e.msdyn_workorderresolutionkpiid, columnSet);
        /// <summary>
        /// Related attribute: msdyn_closedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetClosedBy(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ClosedBy, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceterritory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetServiceTerritory(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceTerritory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_workorder> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msdyn_workordercharacteristicExt
    {
        /// <summary>
        /// Related attribute: msdyn_characteristic. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetCharacteristic(this IEntityWrapperRelation<msdyn_workordercharacteristic> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Characteristic, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_workordercharacteristic> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderincident. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetWorkOrderIncident(this IEntityWrapperRelation<msdyn_workordercharacteristic> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_ratingvalue. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRatingValue(this IEntityWrapperRelation<msdyn_workordercharacteristic> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RatingValue, columnSet);

    }
    public static class msdyn_workorderdetailsgenerationqueueExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreementbookingdate. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetAgreementBookingDate(this IEntityWrapperRelation<msdyn_workorderdetailsgenerationqueue> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingDate, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdyn_workorderdetailsgenerationqueue> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdyn_workorderincidentExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreementbookingincident. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetAgreementBookingIncident(this IEntityWrapperRelation<msdyn_workorderincident> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_workorderincident> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_incidenttype. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetIncidentType(this IEntityWrapperRelation<msdyn_workorderincident> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_IncidentType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resourcerequirement. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetResourceRequirement(this IEntityWrapperRelation<msdyn_workorderincident> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ResourceRequirement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_workorderincident> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);

    }
    public static class msdyn_workorderproductExt
    {
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_entitlement. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetEntitlement(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Entitlement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingproduct. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetAgreementBookingProduct(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_purchaseorderreceiptproduct. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetPurchaseOrderReceiptProduct(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PurchaseOrderReceiptProduct, columnSet);
        /// <summary>
        /// Related attribute: msdyn_warehouse. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetWarehouse(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Warehouse, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderincident. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetWorkOrderIncident(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_product. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Product, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_workorderproduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_workorderresourcerestrictionExt
    {
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<msdyn_workorderresourcerestriction> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: msdyn_resource. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetResource(this IEntityWrapperRelation<msdyn_workorderresourcerestriction> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Resource, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_workorderresourcerestriction> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);

    }
    public static class msdyn_workorderserviceExt
    {
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_entitlement. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetEntitlement(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Entitlement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingservice. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetAgreementBookingService(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingService, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderincident. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetWorkOrderIncident(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderIncident, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: msdyn_service. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetService(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Service, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_unit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<msdyn_workorderservice> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Unit, columnSet);

    }
    public static class msdyn_workorderservicetaskExt
    {
        /// <summary>
        /// Related attribute: msdyn_booking. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetBooking(this IEntityWrapperRelation<msdyn_workorderservicetask> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Booking, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreementbookingservicetask. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetAgreementBookingServiceTask(this IEntityWrapperRelation<msdyn_workorderservicetask> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AgreementBookingServiceTask, columnSet);
        /// <summary>
        /// Related attribute: msdyn_customerasset. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetCustomerAsset(this IEntityWrapperRelation<msdyn_workorderservicetask> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CustomerAsset, columnSet);
        /// <summary>
        /// Related attribute: msdyn_tasktype. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetTaskType(this IEntityWrapperRelation<msdyn_workorderservicetask> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TaskType, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorder. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetWorkOrder(this IEntityWrapperRelation<msdyn_workorderservicetask> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrder, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workorderincident. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetWorkOrderIncident(this IEntityWrapperRelation<msdyn_workorderservicetask> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderIncident, columnSet);

    }
    public static class msdyn_workordertypeExt
    {
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<msdyn_workordertype> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);

    }
    public static class msdynsm_marketingsitemapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdynsm_marketingsitemap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdynsm_salessitemapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdynsm_salessitemap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdynsm_servicessitemapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdynsm_servicessitemap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msdynsm_settingssitemapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<msdynsm_settingssitemap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class msfp_questionExt
    {
        /// <summary>
        /// Related attribute: msfp_survey. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetSurvey(this IEntityWrapperRelation<msfp_question> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.msfp_Survey, columnSet);

    }
    public static class msfp_questionresponseExt
    {
        /// <summary>
        /// Related attribute: msfp_questionid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetQuestion(this IEntityWrapperRelation<msfp_questionresponse> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.msfp_questionid, columnSet);
        /// <summary>
        /// Related attribute: msfp_surveyresponseid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetSurveyResponse(this IEntityWrapperRelation<msfp_questionresponse> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.msfp_surveyresponseid, columnSet);

    }
    public static class msfp_surveyinviteExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: msfp_surveyid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetSurvey(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.msfp_surveyid, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msfp_surveyinvite> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class msfp_surveyresponseExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: msfp_surveyid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetSurvey(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.msfp_surveyid, columnSet);
        /// <summary>
        /// Related attribute: msfp_surveyinviteid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetSurveyInvite(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.msfp_surveyinviteid, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<msfp_surveyresponse> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class MultiEntitySearchExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<MultiEntitySearch> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<MultiEntitySearch> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<MultiEntitySearch> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<MultiEntitySearch> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class MultiEntitySearchEntitiesExt
    {
        /// <summary>
        /// Related attribute: multientitysearchid. Lookup to entity: multientitysearch.
        /// </summary>
        public static IEntityWrapper<MultiEntitySearch> GetMultiEntitySearchId(this IEntityWrapperRelation<MultiEntitySearchEntities> wrapper, IColumnSet<MultiEntitySearch> columnSet)
            => wrapper.GetRelated(e => e.MultiEntitySearchId, columnSet);

    }
    public static class MultiSelectAttributeOptionValuesExt
    {

    }
    public static class NavigationSettingExt
    {
        /// <summary>
        /// Related attribute: appconfigid. Lookup to entity: appmodule.
        /// </summary>
        public static IEntityWrapper<AppModule> GetAppConfigId(this IEntityWrapperRelation<NavigationSetting> wrapper, IColumnSet<AppModule> columnSet)
            => wrapper.GetRelated(e => e.AppConfigId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<NavigationSetting> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class NewProcessExt
    {
        /// <summary>
        /// Related attribute: knowledgearticleid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetKnowledgeArticle(this IEntityWrapperRelation<NewProcess> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.KnowledgeArticleId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<NewProcess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<NewProcess> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<NewProcess> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<NewProcess> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class OfficeDocumentExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<OfficeDocument> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<OfficeDocument> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<OfficeDocument> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegateUser(this IEntityWrapperRelation<OfficeDocument> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<OfficeDocument> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<OfficeDocument> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class OfficeGraphDocumentExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<OfficeGraphDocument> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<OfficeGraphDocument> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class OfflineCommandDefinitionExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<OfflineCommandDefinition> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class OpportunityExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> Get(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetPotentialCustomer(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetPotentialCustomer(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: parentaccountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ParentAccountId, columnSet);
        /// <summary>
        /// Related attribute: campaignid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetSourceCampaign(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.CampaignId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: parentcontactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContactContact(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ParentContactId, columnSet);
        /// <summary>
        /// Related attribute: originatingleadid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetOriginatingLead(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.OriginatingLeadId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_workordertype. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetWorkOrderType(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.msdyn_WorkOrderType, columnSet);
        /// <summary>
        /// Related attribute: pricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountmanagerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetAccountManager(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountManagerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Opportunity> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class OpportunityCloseExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: competitorid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetCompetitor(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.CompetitorId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<OpportunityClose> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class OpportunityProductExt
    {
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_serviceaccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: parentbundleidref. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetParentBundleProduct(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.ParentBundleIdRef, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_pricelist, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetExistingProduct(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<OpportunityProduct> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);

    }
    public static class OpportunitySalesProcessExt
    {
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: bpf_quoteid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> Getquote(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.bpf_quoteid, columnSet);
        /// <summary>
        /// Related attribute: quoteid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRelatedQuote(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.QuoteId, columnSet);
        /// <summary>
        /// Related attribute: bpf_salesorderid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> Getsalesorder(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.bpf_salesorderid, columnSet);
        /// <summary>
        /// Related attribute: salesorderid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRelatedSalesOrder(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.SalesOrderId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<OpportunitySalesProcess> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class OrderCloseExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: salesorderid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetOrder(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.SalesOrderId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<OrderClose> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class OrganizationExt
    {
        /// <summary>
        /// Related attribute: defaultemailserverprofileid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetEmailServerProfile(this IEntityWrapperRelation<Organization> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.DefaultEmailServerProfileId, columnSet);
        /// <summary>
        /// Related attribute: defaultmobileofflineprofileid. Lookup to entity: mobileofflineprofile.
        /// </summary>
        public static IEntityWrapper<MobileOfflineProfile> GetDefaultMobileOfflineProfile(this IEntityWrapperRelation<Organization> wrapper, IColumnSet<MobileOfflineProfile> columnSet)
            => wrapper.GetRelated(e => e.DefaultMobileOfflineProfileId, columnSet);
        /// <summary>
        /// Related attribute: acknowledgementtemplateid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetAcknowledgementTemplate(this IEntityWrapperRelation<Organization> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.AcknowledgementTemplateId, columnSet);
        /// <summary>
        /// Related attribute: basecurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Organization> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.BaseCurrencyId, columnSet);

    }
    public static class OrganizationUIExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<OrganizationUI> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class OrgInsightsMetricExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<OrgInsightsMetric> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class OrgInsightsNotificationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<OrgInsightsNotification> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class OwnerMappingExt
    {
        /// <summary>
        /// Related attribute: targetsystemuserid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetTargetSystemUser(this IEntityWrapperRelation<OwnerMapping> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.TargetSystemUserId, columnSet);
        /// <summary>
        /// Related attribute: importmapid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetDataMap(this IEntityWrapperRelation<OwnerMapping> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.ImportMapId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<OwnerMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<OwnerMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<OwnerMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<OwnerMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class PartnerApplicationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<PartnerApplication> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class PhoneCallExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<PhoneCall> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class PhoneToCaseProcessExt
    {
        /// <summary>
        /// Related attribute: incidentid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetIncident(this IEntityWrapperRelation<PhoneToCaseProcess> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.IncidentId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<PhoneToCaseProcess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<PhoneToCaseProcess> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<PhoneToCaseProcess> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<PhoneToCaseProcess> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class PickListMappingExt
    {
        /// <summary>
        /// Related attribute: columnmappingid. Lookup to entity: columnmapping.
        /// </summary>
        public static IEntityWrapper<ColumnMapping> GetColumnMappingId(this IEntityWrapperRelation<PickListMapping> wrapper, IColumnSet<ColumnMapping> columnSet)
            => wrapper.GetRelated(e => e.ColumnMappingId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<PickListMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<PickListMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<PickListMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<PickListMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class PluginAssemblyExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<PluginAssembly> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class PluginTypeExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<PluginType> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: pluginassemblyid. Lookup to entity: pluginassembly.
        /// </summary>
        public static IEntityWrapper<PluginAssembly> GetPluginAssembly(this IEntityWrapperRelation<PluginType> wrapper, IColumnSet<PluginAssembly> columnSet)
            => wrapper.GetRelated(e => e.PluginAssemblyId, columnSet);

    }
    public static class PluginTypeStatisticExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<PluginTypeStatistic> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: plugintypeid. Lookup to entity: plugintype.
        /// </summary>
        public static IEntityWrapper<PluginType> GetPluginType(this IEntityWrapperRelation<PluginTypeStatistic> wrapper, IColumnSet<PluginType> columnSet)
            => wrapper.GetRelated(e => e.PluginTypeId, columnSet);

    }
    public static class PositionExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Position> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: parentpositionid. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetParentPosition(this IEntityWrapperRelation<Position> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.ParentPositionId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Position> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class PostExt
    {
        /// <summary>
        /// Related attribute: regardingobjectowningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetRegardingObjectOwningBusinessUnit(this IEntityWrapperRelation<Post> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Post> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: postregardingid. Lookup to entity: postregarding.
        /// </summary>
        public static IEntityWrapper<PostRegarding> GetPostRegarding(this IEntityWrapperRelation<Post> wrapper, IColumnSet<PostRegarding> columnSet)
            => wrapper.GetRelated(e => e.PostRegardingId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<Post> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<Post> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);

    }
    public static class PostCommentExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<PostComment> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: postid. Lookup to entity: post.
        /// </summary>
        public static IEntityWrapper<Post> GetPost(this IEntityWrapperRelation<PostComment> wrapper, IColumnSet<Post> columnSet)
            => wrapper.GetRelated(e => e.PostId, columnSet);

    }
    public static class PostFollowExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegarding(this IEntityWrapperRelation<PostFollow> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);

    }
    public static class PostLikeExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<PostLike> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: postid. Lookup to entity: post.
        /// </summary>
        public static IEntityWrapper<Post> GetPost(this IEntityWrapperRelation<PostLike> wrapper, IColumnSet<Post> columnSet)
            => wrapper.GetRelated(e => e.PostId, columnSet);

    }
    public static class PostRegardingExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetRegardingObjectId(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: regardingobjectowningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetRegardingObjectOwningBusinessUnit(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwningBusinessUnit, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<PostRegarding> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);

    }
    public static class PostRoleExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetRegardingObjectId(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: postid. Lookup to entity: post.
        /// </summary>
        public static IEntityWrapper<Post> GetPost(this IEntityWrapperRelation<PostRole> wrapper, IColumnSet<Post> columnSet)
            => wrapper.GetRelated(e => e.PostId, columnSet);

    }
    public static class PriceLevelExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<PriceLevel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_copiedfrompricelevel. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetCopiedFrom(this IEntityWrapperRelation<PriceLevel> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_CopiedFromPriceLevel, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<PriceLevel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_timeunit. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetTimeUnit(this IEntityWrapperRelation<PriceLevel> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TimeUnit, columnSet);

    }
    public static class PrincipalObjectAttributeAccessExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: accountleads.
        /// </summary>
        public static IEntityWrapper<AccountLeads> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<AccountLeads> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebookingexchangesyncidmapping.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingExchangeSyncIdMapping> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceBookingExchangeSyncIdMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkoperationlog.
        /// </summary>
        public static IEntityWrapper<BulkOperationLog> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BulkOperationLog> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignactivityitem.
        /// </summary>
        public static IEntityWrapper<CampaignActivityItem> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CampaignActivityItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignitem.
        /// </summary>
        public static IEntityWrapper<CampaignItem> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CampaignItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: childincidentcount.
        /// </summary>
        public static IEntityWrapper<ChildIncidentCount> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ChildIncidentCount> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitoraddress.
        /// </summary>
        public static IEntityWrapper<CompetitorAddress> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CompetitorAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitorproduct.
        /// </summary>
        public static IEntityWrapper<CompetitorProduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CompetitorProduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitorsalesliterature.
        /// </summary>
        public static IEntityWrapper<CompetitorSalesLiterature> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CompetitorSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connection.
        /// </summary>
        public static IEntityWrapper<Connection> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Connection> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactinvoices.
        /// </summary>
        public static IEntityWrapper<ContactInvoices> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ContactInvoices> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactleads.
        /// </summary>
        public static IEntityWrapper<ContactLeads> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ContactLeads> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactorders.
        /// </summary>
        public static IEntityWrapper<ContactOrders> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ContactOrders> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactquotes.
        /// </summary>
        public static IEntityWrapper<ContactQuotes> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ContactQuotes> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicpropertyassociation.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyAssociation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<DynamicPropertyAssociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicpropertyinstance.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyInstance> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<DynamicPropertyInstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementcontacts.
        /// </summary>
        public static IEntityWrapper<EntitlementContacts> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementContacts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementProducts> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementProducts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplateproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateProducts> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntitlementTemplateProducts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entityanalyticsconfig.
        /// </summary>
        public static IEntityWrapper<EntityAnalyticsConfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntityAnalyticsConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: feedback.
        /// </summary>
        public static IEntityWrapper<Feedback> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Feedback> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incidentknowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<IncidentKnowledgeBaseRecord> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<IncidentKnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticleviews.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleViews> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<KnowledgeArticleViews> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadaddress.
        /// </summary>
        public static IEntityWrapper<LeadAddress> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<LeadAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadcompetitors.
        /// </summary>
        public static IEntityWrapper<LeadCompetitors> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<LeadCompetitors> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadproduct.
        /// </summary>
        public static IEntityWrapper<LeadProduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<LeadProduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: listmember.
        /// </summary>
        public static IEntityWrapper<ListMember> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ListMember> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: mailmergetemplate.
        /// </summary>
        public static IEntityWrapper<MailMergeTemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<MailMergeTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunitycompetitors.
        /// </summary>
        public static IEntityWrapper<OpportunityCompetitors> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<OpportunityCompetitors> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productsalesliterature.
        /// </summary>
        public static IEntityWrapper<ProductSalesLiterature> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ProductSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: queueitem.
        /// </summary>
        public static IEntityWrapper<QueueItem> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<QueueItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: reportcategory.
        /// </summary>
        public static IEntityWrapper<ReportCategory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ReportCategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resource.
        /// </summary>
        public static IEntityWrapper<Resource> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Resource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcegroupexpansion.
        /// </summary>
        public static IEntityWrapper<ResourceGroupExpansion> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ResourceGroupExpansion> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesprocessinstance.
        /// </summary>
        public static IEntityWrapper<SalesProcessInstance> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SalesProcessInstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: servicecontractcontacts.
        /// </summary>
        public static IEntityWrapper<ServiceContractContacts> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<ServiceContractContacts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topic.
        /// </summary>
        public static IEntityWrapper<Topic> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Topic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topichistory.
        /// </summary>
        public static IEntityWrapper<TopicHistory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<TopicHistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetEntityInstance(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: principalid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetPrincipal(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.PrincipalId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: principalid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetPrincipal(this IEntityWrapperRelation<PrincipalObjectAttributeAccess> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.PrincipalId, columnSet);

    }
    public static class PrincipalSyncAttributeMapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<PrincipalSyncAttributeMap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: parentprincipalsyncattributemappingid. Lookup to entity: principalsyncattributemap.
        /// </summary>
        public static IEntityWrapper<PrincipalSyncAttributeMap> GetParentSyncAttributeMapping(this IEntityWrapperRelation<PrincipalSyncAttributeMap> wrapper, IColumnSet<PrincipalSyncAttributeMap> columnSet)
            => wrapper.GetRelated(e => e.ParentPrincipalSyncAttributeMappingId, columnSet);

    }
    public static class PrivilegeObjectTypeCodesExt
    {
        /// <summary>
        /// Related attribute: privilegeid. Lookup to entity: privilege.
        /// </summary>
        public static IEntityWrapper<Privilege> GetPrivilegeId(this IEntityWrapperRelation<PrivilegeObjectTypeCodes> wrapper, IColumnSet<Privilege> columnSet)
            => wrapper.GetRelated(e => e.PrivilegeId, columnSet);

    }
    public static class ProcessSessionExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: annotation.
        /// </summary>
        public static IEntityWrapper<Annotation> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Annotation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunitnewsarticle.
        /// </summary>
        public static IEntityWrapper<BusinessUnitNewsArticle> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<BusinessUnitNewsArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connection.
        /// </summary>
        public static IEntityWrapper<Connection> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Connection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: convertrule.
        /// </summary>
        public static IEntityWrapper<ConvertRule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ConvertRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customerrelationship.
        /// </summary>
        public static IEntityWrapper<CustomerRelationship> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<CustomerRelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: expiredprocess.
        /// </summary>
        public static IEntityWrapper<ExpiredProcess> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ExpiredProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalpartyitem.
        /// </summary>
        public static IEntityWrapper<ExternalPartyItem> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ExternalPartyItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticlecomment.
        /// </summary>
        public static IEntityWrapper<KbArticleComment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<KbArticleComment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticletemplate.
        /// </summary>
        public static IEntityWrapper<KbArticleTemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<KbArticleTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailmergetemplate.
        /// </summary>
        public static IEntityWrapper<MailMergeTemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<MailMergeTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: newprocess.
        /// </summary>
        public static IEntityWrapper<NewProcess> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<NewProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queueitem.
        /// </summary>
        public static IEntityWrapper<QueueItem> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<QueueItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: rollupfield.
        /// </summary>
        public static IEntityWrapper<RollupField> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RollupField> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: routingrule.
        /// </summary>
        public static IEntityWrapper<RoutingRule> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RoutingRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: routingruleitem.
        /// </summary>
        public static IEntityWrapper<RoutingRuleItem> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<RoutingRuleItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: theme.
        /// </summary>
        public static IEntityWrapper<Theme> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Theme> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: translationprocess.
        /// </summary>
        public static IEntityWrapper<TranslationProcess> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<TranslationProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: usermapping.
        /// </summary>
        public static IEntityWrapper<UserMapping> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<UserMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetRegarding(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: nextlinkedsessionid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetNextLinkedSession(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.NextLinkedSessionId, columnSet);
        /// <summary>
        /// Related attribute: originatingsessionid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetOriginatingSession(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.OriginatingSessionId, columnSet);
        /// <summary>
        /// Related attribute: previouslinkedsessionid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetPreviousLinkedSession(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.PreviousLinkedSessionId, columnSet);
        /// <summary>
        /// Related attribute: canceledby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCanceledBy(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CanceledBy, columnSet);
        /// <summary>
        /// Related attribute: completedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCompletedBy(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CompletedBy, columnSet);
        /// <summary>
        /// Related attribute: executedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetExecutedBy(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ExecutedBy, columnSet);
        /// <summary>
        /// Related attribute: startedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetStartedBy(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.StartedBy, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<ProcessSession> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class ProcessStageExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ProcessStage> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ProcessStage> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<ProcessStage> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class ProcessTriggerExt
    {
        /// <summary>
        /// Related attribute: formid. Lookup to entity: systemform.
        /// </summary>
        public static IEntityWrapper<SystemForm> GetForm(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<SystemForm> columnSet)
            => wrapper.GetRelated(e => e.FormId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<ProcessTrigger> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class ProductExt
    {
        /// <summary>
        /// Related attribute: msdyn_defaultvendor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetDefaultVendor(this IEntityWrapperRelation<Product> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_DefaultVendor, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<Product> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<Product> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: msdyn_transactioncategory. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetTransactionCategory(this IEntityWrapperRelation<Product> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_TransactionCategory, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Product> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: pricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetDefaultPriceList(this IEntityWrapperRelation<Product> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: parentproductid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetParent(this IEntityWrapperRelation<Product> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ParentProductId, columnSet);
        /// <summary>
        /// Related attribute: subjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetSubject(this IEntityWrapperRelation<Product> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.SubjectId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Product> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: defaultuomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetDefaultUnit(this IEntityWrapperRelation<Product> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.DefaultUoMId, columnSet);
        /// <summary>
        /// Related attribute: defaultuomscheduleid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitGroup(this IEntityWrapperRelation<Product> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.DefaultUoMScheduleId, columnSet);

    }
    public static class ProductAssociationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ProductAssociation> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: associatedproduct. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetAssociatedProduct(this IEntityWrapperRelation<ProductAssociation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.AssociatedProduct, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<ProductAssociation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ProductAssociation> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<ProductAssociation> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);

    }
    public static class ProductPriceLevelExt
    {
        /// <summary>
        /// Related attribute: discounttypeid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetDiscountList(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.DiscountTypeId, columnSet);
        /// <summary>
        /// Related attribute: pricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);
        /// <summary>
        /// Related attribute: uomscheduleid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitScheduleID(this IEntityWrapperRelation<ProductPriceLevel> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.UoMScheduleId, columnSet);

    }
    public static class ProductSubstituteExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ProductSubstitute> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetProduct(this IEntityWrapperRelation<ProductSubstitute> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: substitutedproductid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRelatedProduct(this IEntityWrapperRelation<ProductSubstitute> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.SubstitutedProductId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ProductSubstitute> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class PublisherExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Publisher> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class PublisherAddressExt
    {
        /// <summary>
        /// Related attribute: parentid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetParent(this IEntityWrapperRelation<PublisherAddress> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.ParentId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<PublisherAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<PublisherAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<PublisherAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<PublisherAddress> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class QuarterlyFiscalCalendarExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: salespersonid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesPersonId(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesPersonId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<QuarterlyFiscalCalendar> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class QueueExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<Queue> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: defaultmailbox. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetMailbox(this IEntityWrapperRelation<Queue> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.DefaultMailbox, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Queue> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: primaryuserid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwnerDeprecated(this IEntityWrapperRelation<Queue> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.PrimaryUserId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Queue> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class QueueItemExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetObject(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: queueid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetQueue(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.QueueId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwningUser(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: workerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetWorkedBy(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.WorkerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: workerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetWorkedBy(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.WorkerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<QueueItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class QuoteExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetPotentialCustomer(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetPotentialCustomer(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetPotentialCustomerAccount(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: campaignid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetSourceCampaign(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.CampaignId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: pricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountmanagerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetAccountManager(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountManagerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Quote> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class QuoteCloseExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: quoteid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.QuoteId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<QuoteClose> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class QuoteDetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_serviceaccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetServiceAccount(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceAccount, columnSet);
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoicefrequency. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetInvoiceFrequency(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.msdyn_invoicefrequency, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: msdyn_salestaxcode. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetSalesTaxCode(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.msdyn_SalesTaxCode, columnSet);
        /// <summary>
        /// Related attribute: msdyn_pricelist. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetServicesPriceList(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.msdyn_PriceList, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetExistingProduct(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: quoteid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.QuoteId, columnSet);
        /// <summary>
        /// Related attribute: parentbundleidref. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetParentBundleProduct(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.ParentBundleIdRef, columnSet);
        /// <summary>
        /// Related attribute: salesrepid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesperson(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesRepId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_serviceterritory. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetServiceTerritory(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ServiceTerritory, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<QuoteDetail> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);

    }
    public static class RatingModelExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<RatingModel> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class RatingValueExt
    {
        /// <summary>
        /// Related attribute: ratingmodel. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetRatingModel(this IEntityWrapperRelation<RatingValue> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.RatingModel, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<RatingValue> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class RecommendedDocumentExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationID(this IEntityWrapperRelation<RecommendedDocument> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<RecommendedDocument> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class RecurrenceRuleExt
    {
        /// <summary>
        /// Related attribute: objectid. Lookup to entity: activitypointer.
        /// </summary>
        public static IEntityWrapper<ActivityPointer> GetRegarding(this IEntityWrapperRelation<RecurrenceRule> wrapper, IColumnSet<ActivityPointer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);

    }
    public static class RecurringAppointmentMasterExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: ruleid. Lookup to entity: recurrencerule.
        /// </summary>
        public static IEntityWrapper<RecurrenceRule> GetRecurrenceRule(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<RecurrenceRule> columnSet)
            => wrapper.GetRelated(e => e.RuleId, columnSet);
        /// <summary>
        /// Related attribute: groupid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetGroupId(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.GroupId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<RecurringAppointmentMaster> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class RelationshipRoleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<RelationshipRole> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class RelationshipRoleMapExt
    {
        /// <summary>
        /// Related attribute: relationshiproleid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetRelationshipRoleId(this IEntityWrapperRelation<RelationshipRoleMap> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.RelationshipRoleId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<RelationshipRoleMap> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<RelationshipRoleMap> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<RelationshipRoleMap> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<RelationshipRoleMap> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class ReplicationBacklogExt
    {
        /// <summary>
        /// Related attribute: targetobjectid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetTargetObjectId(this IEntityWrapperRelation<ReplicationBacklog> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.TargetObjectId, columnSet);

    }
    public static class ReportExt
    {
        /// <summary>
        /// Related attribute: parentreportid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetParentReport(this IEntityWrapperRelation<Report> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.ParentReportId, columnSet);

    }
    public static class ReportCategoryExt
    {
        /// <summary>
        /// Related attribute: reportid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetReport(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.ReportId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ReportCategory> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ReportEntityExt
    {
        /// <summary>
        /// Related attribute: reportid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetReport(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.ReportId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ReportEntity> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class ReportLinkExt
    {
        /// <summary>
        /// Related attribute: linkedreportid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetLinkedReport(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.LinkedReportId, columnSet);
        /// <summary>
        /// Related attribute: reportid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetMainReport(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.ReportId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ReportLink> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class ReportVisibilityExt
    {
        /// <summary>
        /// Related attribute: reportid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetReport(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.ReportId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<ReportVisibility> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }
    public static class ResourceExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<Resource> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Resource> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: siteid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetSite(this IEntityWrapperRelation<Resource> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.SiteId, columnSet);

    }
    public static class ResourceGroupExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<ResourceGroup> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ResourceGroup> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class ResourceSpecExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<ResourceSpec> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<ResourceSpec> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<ResourceSpec> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<ResourceSpec> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<ResourceSpec> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<ResourceSpec> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class RibbonCommandExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<RibbonCommand> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: ribboncustomizationid. Lookup to entity: ribboncustomization.
        /// </summary>
        public static IEntityWrapper<RibbonCustomization> GetRibbonCustomizationId(this IEntityWrapperRelation<RibbonCommand> wrapper, IColumnSet<RibbonCustomization> columnSet)
            => wrapper.GetRelated(e => e.RibbonCustomizationId, columnSet);

    }
    public static class RibbonContextGroupExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<RibbonContextGroup> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: ribboncustomizationid. Lookup to entity: ribboncustomization.
        /// </summary>
        public static IEntityWrapper<RibbonCustomization> GetRibbonCustomizationId(this IEntityWrapperRelation<RibbonContextGroup> wrapper, IColumnSet<RibbonCustomization> columnSet)
            => wrapper.GetRelated(e => e.RibbonCustomizationId, columnSet);

    }
    public static class RibbonCustomizationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<RibbonCustomization> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class RibbonDiffExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<RibbonDiff> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: ribboncustomizationid. Lookup to entity: ribboncustomization.
        /// </summary>
        public static IEntityWrapper<RibbonCustomization> GetRibbonCustomizationId(this IEntityWrapperRelation<RibbonDiff> wrapper, IColumnSet<RibbonCustomization> columnSet)
            => wrapper.GetRelated(e => e.RibbonCustomizationId, columnSet);

    }
    public static class RibbonRuleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<RibbonRule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: ribboncustomizationid. Lookup to entity: ribboncustomization.
        /// </summary>
        public static IEntityWrapper<RibbonCustomization> GetRibbonCustomizationId(this IEntityWrapperRelation<RibbonRule> wrapper, IColumnSet<RibbonCustomization> columnSet)
            => wrapper.GetRelated(e => e.RibbonCustomizationId, columnSet);

    }
    public static class RibbonTabToCommandMapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<RibbonTabToCommandMap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: ribbondiffid. Lookup to entity: ribbondiff.
        /// </summary>
        public static IEntityWrapper<RibbonDiff> GetRibbonDiffId(this IEntityWrapperRelation<RibbonTabToCommandMap> wrapper, IColumnSet<RibbonDiff> columnSet)
            => wrapper.GetRelated(e => e.RibbonDiffId, columnSet);

    }
    public static class RoleExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<Role> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: parentroleid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetParentRole(this IEntityWrapperRelation<Role> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.ParentRoleId, columnSet);
        /// <summary>
        /// Related attribute: parentrootroleid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetParentRootRole(this IEntityWrapperRelation<Role> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.ParentRootRoleId, columnSet);
        /// <summary>
        /// Related attribute: roletemplateid. Lookup to entity: roletemplate.
        /// </summary>
        public static IEntityWrapper<RoleTemplate> GetRoleTemplate(this IEntityWrapperRelation<Role> wrapper, IColumnSet<RoleTemplate> columnSet)
            => wrapper.GetRelated(e => e.RoleTemplateId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<Role> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByImpersonator(this IEntityWrapperRelation<Role> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<Role> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<Role> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class RollupFieldExt
    {
        /// <summary>
        /// Related attribute: metricid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetGoalMetric(this IEntityWrapperRelation<RollupField> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.MetricId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<RollupField> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<RollupField> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<RollupField> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<RollupField> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class RollupJobExt
    {
        /// <summary>
        /// Related attribute: rolluppropertiesid. Lookup to entity: rollupproperties.
        /// </summary>
        public static IEntityWrapper<RollupProperties> GetRollupPropertiesId(this IEntityWrapperRelation<RollupJob> wrapper, IColumnSet<RollupProperties> columnSet)
            => wrapper.GetRelated(e => e.RollupPropertiesId, columnSet);

    }
    public static class RoutingRuleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<RoutingRule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<RoutingRule> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflow(this IEntityWrapperRelation<RoutingRule> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class RoutingRuleItemExt
    {
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: routedqueueid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetAddToQueue(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RoutedQueueId, columnSet);
        /// <summary>
        /// Related attribute: routingruleid. Lookup to entity: routingrule.
        /// </summary>
        public static IEntityWrapper<RoutingRule> GetroutedRule(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<RoutingRule> columnSet)
            => wrapper.GetRelated(e => e.RoutingRuleId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: assignobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetAssignToUserTeam(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.AssignObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: assignobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetAssignToUserTeam(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.AssignObjectId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwningUser(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<RoutingRuleItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SalesLiteratureExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SalesLiterature> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: subjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetSubject(this IEntityWrapperRelation<SalesLiterature> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.SubjectId, columnSet);
        /// <summary>
        /// Related attribute: employeecontactid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetEmployeeContact(this IEntityWrapperRelation<SalesLiterature> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.EmployeeContactId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SalesLiterature> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SalesLiteratureItemExt
    {
        /// <summary>
        /// Related attribute: salesliteratureid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetSalesLiterature(this IEntityWrapperRelation<SalesLiteratureItem> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.SalesLiteratureId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SalesLiteratureItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SalesLiteratureItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SalesLiteratureItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SalesLiteratureItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class SalesOrderExt
    {
        /// <summary>
        /// Related attribute: accountid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetAccount(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.AccountId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_account. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetPotentialCustomer(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Account, columnSet);
        /// <summary>
        /// Related attribute: campaignid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetSourceCampaign(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.CampaignId, columnSet);
        /// <summary>
        /// Related attribute: contactid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetContact(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ContactId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_contractorganizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetContractingUnit(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_ContractOrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: opportunityid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetOpportunity(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.OpportunityId, columnSet);
        /// <summary>
        /// Related attribute: pricelevelid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetPriceList(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.PriceLevelId, columnSet);
        /// <summary>
        /// Related attribute: quoteid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetQuote(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.QuoteId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_accountmanagerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetAccountManager(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.msdyn_AccountManagerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SalesOrder> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SalesOrderDetailExt
    {
        /// <summary>
        /// Related attribute: msdyn_agreement. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetAgreement(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.msdyn_agreement, columnSet);
        /// <summary>
        /// Related attribute: msdyn_invoicefrequency. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetInvoiceFrequency(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.msdyn_invoicefrequency, columnSet);
        /// <summary>
        /// Related attribute: msdyn_project. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetProject(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.msdyn_Project, columnSet);
        /// <summary>
        /// Related attribute: productid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetExistingProduct(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ProductId, columnSet);
        /// <summary>
        /// Related attribute: quotedetailid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetQuoteProductId(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.QuoteDetailId, columnSet);
        /// <summary>
        /// Related attribute: salesorderid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetOrder(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.SalesOrderId, columnSet);
        /// <summary>
        /// Related attribute: parentbundleidref. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetParentBundleProduct(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.ParentBundleIdRef, columnSet);
        /// <summary>
        /// Related attribute: salesrepid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesperson(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesRepId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: uomid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetUnit(this IEntityWrapperRelation<SalesOrderDetail> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.UoMId, columnSet);

    }
    public static class SalesProcessInstanceExt
    {

    }
    public static class SavedOrgInsightsConfigurationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SavedOrgInsightsConfiguration> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SavedQueryExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SavedQuery> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SavedQueryVisualizationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SavedQueryVisualization> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: webresourceid. Lookup to entity: webresource.
        /// </summary>
        public static IEntityWrapper<WebResource> GetWebResource(this IEntityWrapperRelation<SavedQueryVisualization> wrapper, IColumnSet<WebResource> columnSet)
            => wrapper.GetRelated(e => e.WebResourceId, columnSet);

    }
    public static class SdkMessageExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessage> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SdkMessageFilterExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageFilter> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessageid. Lookup to entity: sdkmessage.
        /// </summary>
        public static IEntityWrapper<SdkMessage> GetSDKMessageID(this IEntityWrapperRelation<SdkMessageFilter> wrapper, IColumnSet<SdkMessage> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageId, columnSet);

    }
    public static class SdkMessagePairExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessagePair> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessageid. Lookup to entity: sdkmessage.
        /// </summary>
        public static IEntityWrapper<SdkMessage> GetSdkMessageId(this IEntityWrapperRelation<SdkMessagePair> wrapper, IColumnSet<SdkMessage> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageId, columnSet);

    }
    public static class SdkMessageProcessingStepExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: eventhandler. Lookup to entity: plugintype.
        /// </summary>
        public static IEntityWrapper<PluginType> GetEventHandler(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<PluginType> columnSet)
            => wrapper.GetRelated(e => e.EventHandler, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: eventhandler. Lookup to entity: serviceendpoint.
        /// </summary>
        public static IEntityWrapper<ServiceEndpoint> GetEventHandler(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<ServiceEndpoint> columnSet)
            => wrapper.GetRelated(e => e.EventHandler, columnSet);
        /// <summary>
        /// Related attribute: sdkmessageid. Lookup to entity: sdkmessage.
        /// </summary>
        public static IEntityWrapper<SdkMessage> GetSDKMessage(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<SdkMessage> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageId, columnSet);
        /// <summary>
        /// Related attribute: plugintypeid. Lookup to entity: sdkmessagefilter.
        /// </summary>
        public static IEntityWrapper<SdkMessageFilter> GetplugInType(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<SdkMessageFilter> columnSet)
            => wrapper.GetRelated(e => e.PluginTypeId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessagefilterid. Lookup to entity: sdkmessagefilter.
        /// </summary>
        public static IEntityWrapper<SdkMessageFilter> GetSdkMessageFilter(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<SdkMessageFilter> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageFilterId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessageprocessingstepsecureconfigid. Lookup to entity: sdkmessageprocessingstepsecureconfig.
        /// </summary>
        public static IEntityWrapper<SdkMessageProcessingStepSecureConfig> GetSDKMessageProcessingStepSecureConfiguration(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<SdkMessageProcessingStepSecureConfig> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageProcessingStepSecureConfigId, columnSet);
        /// <summary>
        /// Related attribute: impersonatinguserid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetImpersonatingUser(this IEntityWrapperRelation<SdkMessageProcessingStep> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ImpersonatingUserId, columnSet);

    }
    public static class SdkMessageProcessingStepImageExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageProcessingStepImage> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessageprocessingstepid. Lookup to entity: sdkmessageprocessingstep.
        /// </summary>
        public static IEntityWrapper<SdkMessageProcessingStep> GetSDKMessageProcessingStep(this IEntityWrapperRelation<SdkMessageProcessingStepImage> wrapper, IColumnSet<SdkMessageProcessingStep> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageProcessingStepId, columnSet);

    }
    public static class SdkMessageProcessingStepSecureConfigExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageProcessingStepSecureConfig> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SdkMessageRequestExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageRequest> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessagepairid. Lookup to entity: sdkmessagepair.
        /// </summary>
        public static IEntityWrapper<SdkMessagePair> GetSdkMessagePairId(this IEntityWrapperRelation<SdkMessageRequest> wrapper, IColumnSet<SdkMessagePair> columnSet)
            => wrapper.GetRelated(e => e.SdkMessagePairId, columnSet);

    }
    public static class SdkMessageRequestFieldExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageRequestField> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessagerequestid. Lookup to entity: sdkmessagerequest.
        /// </summary>
        public static IEntityWrapper<SdkMessageRequest> GetSdkMessageRequestId(this IEntityWrapperRelation<SdkMessageRequestField> wrapper, IColumnSet<SdkMessageRequest> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageRequestId, columnSet);

    }
    public static class SdkMessageResponseExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageResponse> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessagerequestid. Lookup to entity: sdkmessagerequest.
        /// </summary>
        public static IEntityWrapper<SdkMessageRequest> GetSdkMessageRequestId(this IEntityWrapperRelation<SdkMessageResponse> wrapper, IColumnSet<SdkMessageRequest> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageRequestId, columnSet);

    }
    public static class SdkMessageResponseFieldExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SdkMessageResponseField> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: sdkmessageresponseid. Lookup to entity: sdkmessageresponse.
        /// </summary>
        public static IEntityWrapper<SdkMessageResponse> GetSdkMessageResponseId(this IEntityWrapperRelation<SdkMessageResponseField> wrapper, IColumnSet<SdkMessageResponse> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageResponseId, columnSet);

    }
    public static class SemiAnnualFiscalCalendarExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnitId(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: salespersonid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesPersonId(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesPersonId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SemiAnnualFiscalCalendar> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ServiceExt
    {
        /// <summary>
        /// Related attribute: msdyn_requirementgroupid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRequirementGroup(this IEntityWrapperRelation<Service> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.msdyn_RequirementGroupId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Service> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: strategyid. Lookup to entity: plugintype.
        /// </summary>
        public static IEntityWrapper<PluginType> GetStrategy(this IEntityWrapperRelation<Service> wrapper, IColumnSet<PluginType> columnSet)
            => wrapper.GetRelated(e => e.StrategyId, columnSet);
        /// <summary>
        /// Related attribute: resourcespecid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetRequiredResources(this IEntityWrapperRelation<Service> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.ResourceSpecId, columnSet);

    }
    public static class ServiceAppointmentExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: interactionforemail.
        /// </summary>
        public static IEntityWrapper<InteractionForEmail> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<InteractionForEmail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: sendermailboxid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetSenderSMailbox(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.SenderMailboxId, columnSet);
        /// <summary>
        /// Related attribute: msdyn_organizationalunitid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetOrganizationalUnitServiceAppointmentId(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.msdyn_OrganizationalUnitId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: siteid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetSite(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.SiteId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<ServiceAppointment> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class ServiceEndpointExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<ServiceEndpoint> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SharePointDataExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SharePointData> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: location. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetLocation(this IEntityWrapperRelation<SharePointData> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.Location, columnSet);
        /// <summary>
        /// Related attribute: userid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetUserId(this IEntityWrapperRelation<SharePointData> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.UserId, columnSet);

    }
    public static class SharePointDocumentExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetRegarding(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SharePointDocument> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SharePointDocumentLocationExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetRegarding(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: parentsiteorlocation. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetParentSiteOrLocation(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.ParentSiteOrLocation, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: parentsiteorlocation. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetParentSiteOrLocation(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.ParentSiteOrLocation, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SharePointDocumentLocation> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SharePointSiteExt
    {
        /// <summary>
        /// Related attribute: parentsite. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetParentSite(this IEntityWrapperRelation<SharePointSite> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.ParentSite, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SharePointSite> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SimilarityRuleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SimilarityRule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SimilarityRule> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SiteExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Site> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SiteMapExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SiteMap> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SLAExt
    {
        /// <summary>
        /// Related attribute: businesshoursid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetBusinessHours(this IEntityWrapperRelation<SLA> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.BusinessHoursId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SLA> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflowID(this IEntityWrapperRelation<SLA> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class SLAItemExt
    {
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetWorkflowID(this IEntityWrapperRelation<SLAItem> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class SLAKPIInstanceExt
    {
        /// <summary>
        /// Related attribute: regarding. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<SLAKPIInstance> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.Regarding, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SLAKPIInstance> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SocialActivityExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: postauthor. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetPostAuthor(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.PostAuthor, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: postauthor. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetPostAuthor(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.PostAuthor, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: postauthoraccount. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetPostAuthorAccount(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.PostAuthorAccount, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: postauthoraccount. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetPostAuthorAccount(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.PostAuthorAccount, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: postfromprofileid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetPostedBy(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.PostFromProfileId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SocialActivity> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SocialInsightsConfigurationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SocialInsightsConfiguration> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: formid. Lookup to entity: post.
        /// </summary>
        public static IEntityWrapper<Post> GetAssociatedForm(this IEntityWrapperRelation<SocialInsightsConfiguration> wrapper, IColumnSet<Post> columnSet)
            => wrapper.GetRelated(e => e.FormId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SocialInsightsConfiguration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SocialInsightsConfiguration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SocialInsightsConfiguration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SocialInsightsConfiguration> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class SocialProfileExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetCustomer(this IEntityWrapperRelation<SocialProfile> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: customerid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetCustomer(this IEntityWrapperRelation<SocialProfile> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.CustomerId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SocialProfile> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SolutionExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Solution> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: publisherid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetPublisher(this IEntityWrapperRelation<Solution> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.PublisherId, columnSet);
        /// <summary>
        /// Related attribute: parentsolutionid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetParentSolution(this IEntityWrapperRelation<Solution> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.ParentSolutionId, columnSet);
        /// <summary>
        /// Related attribute: configurationpageid. Lookup to entity: webresource.
        /// </summary>
        public static IEntityWrapper<WebResource> GetConfigurationPage(this IEntityWrapperRelation<Solution> wrapper, IColumnSet<WebResource> columnSet)
            => wrapper.GetRelated(e => e.ConfigurationPageId, columnSet);

    }
    public static class SolutionComponentExt
    {
        /// <summary>
        /// Related attribute: solutionid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetSolution(this IEntityWrapperRelation<SolutionComponent> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.SolutionId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SolutionComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SolutionComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SolutionComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SolutionComponent> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class SqlEncryptionAuditExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SqlEncryptionAudit> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);

    }
    public static class SubjectExt
    {
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<Subject> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<Subject> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<Subject> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: parentsubject. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetParentSubject(this IEntityWrapperRelation<Subject> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.ParentSubject, columnSet);

    }
    public static class SubscriptionSyncInfoExt
    {
        /// <summary>
        /// Related attribute: subscriptionid. Lookup to entity: subscription.
        /// </summary>
        public static IEntityWrapper<Subscription> GetSubscriptionId(this IEntityWrapperRelation<SubscriptionSyncInfo> wrapper, IColumnSet<Subscription> columnSet)
            => wrapper.GetRelated(e => e.SubscriptionId, columnSet);

    }
    public static class SuggestionCardTemplateExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SuggestionCardTemplate> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SuggestionCardTemplate> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class SyncAttributeMappingExt
    {
        /// <summary>
        /// Related attribute: parentsyncattributemappingid. Lookup to entity: syncattributemapping.
        /// </summary>
        public static IEntityWrapper<SyncAttributeMapping> GetParentSyncAttributeMapping(this IEntityWrapperRelation<SyncAttributeMapping> wrapper, IColumnSet<SyncAttributeMapping> columnSet)
            => wrapper.GetRelated(e => e.ParentSyncAttributeMappingId, columnSet);
        /// <summary>
        /// Related attribute: syncattributemappingprofileid. Lookup to entity: syncattributemappingprofile.
        /// </summary>
        public static IEntityWrapper<SyncAttributeMappingProfile> GetProfile(this IEntityWrapperRelation<SyncAttributeMapping> wrapper, IColumnSet<SyncAttributeMappingProfile> columnSet)
            => wrapper.GetRelated(e => e.SyncAttributeMappingProfileId, columnSet);

    }
    public static class SyncAttributeMappingProfileExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<SyncAttributeMappingProfile> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class SyncErrorExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: activitymimeattachment.
        /// </summary>
        public static IEntityWrapper<ActivityMimeAttachment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ActivityMimeAttachment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: activityparty.
        /// </summary>
        public static IEntityWrapper<ActivityParty> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ActivityParty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: annotation.
        /// </summary>
        public static IEntityWrapper<Annotation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Annotation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attachment.
        /// </summary>
        public static IEntityWrapper<Attachment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Attachment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingexchangesyncidmapping.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingExchangeSyncIdMapping> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceBookingExchangeSyncIdMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperationlog.
        /// </summary>
        public static IEntityWrapper<BulkOperationLog> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BulkOperationLog> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessdatalocalizedlabel.
        /// </summary>
        public static IEntityWrapper<BusinessDataLocalizedLabel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BusinessDataLocalizedLabel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: category.
        /// </summary>
        public static IEntityWrapper<Category> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Category> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: channelaccessprofileruleitem.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRuleItem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ChannelAccessProfileRuleItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: childincidentcount.
        /// </summary>
        public static IEntityWrapper<ChildIncidentCount> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ChildIncidentCount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: competitoraddress.
        /// </summary>
        public static IEntityWrapper<CompetitorAddress> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<CompetitorAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connection.
        /// </summary>
        public static IEntityWrapper<Connection> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Connection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: duplicaterule.
        /// </summary>
        public static IEntityWrapper<DuplicateRule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DuplicateRule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: duplicaterulecondition.
        /// </summary>
        public static IEntityWrapper<DuplicateRuleCondition> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DuplicateRuleCondition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyassociation.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyAssociation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DynamicPropertyAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyinstance.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyInstance> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DynamicPropertyInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityanalyticsconfig.
        /// </summary>
        public static IEntityWrapper<EntityAnalyticsConfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EntityAnalyticsConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: expiredprocess.
        /// </summary>
        public static IEntityWrapper<ExpiredProcess> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ExpiredProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: externalpartyitem.
        /// </summary>
        public static IEntityWrapper<ExternalPartyItem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ExternalPartyItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: feedback.
        /// </summary>
        public static IEntityWrapper<Feedback> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Feedback> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fieldpermission.
        /// </summary>
        public static IEntityWrapper<FieldPermission> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<FieldPermission> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fieldsecurityprofile.
        /// </summary>
        public static IEntityWrapper<FieldSecurityProfile> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<FieldSecurityProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: fileattachment.
        /// </summary>
        public static IEntityWrapper<FileAttachment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<FileAttachment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: internaladdress.
        /// </summary>
        public static IEntityWrapper<InternalAddress> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<InternalAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: kbarticletemplate.
        /// </summary>
        public static IEntityWrapper<KbArticleTemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<KbArticleTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticleviews.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleViews> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<KnowledgeArticleViews> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadaddress.
        /// </summary>
        public static IEntityWrapper<LeadAddress> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<LeadAddress> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailmergetemplate.
        /// </summary>
        public static IEntityWrapper<MailMergeTemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<MailMergeTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: newprocess.
        /// </summary>
        public static IEntityWrapper<NewProcess> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<NewProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: offlinecommanddefinition.
        /// </summary>
        public static IEntityWrapper<OfflineCommandDefinition> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<OfflineCommandDefinition> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: postfollow.
        /// </summary>
        public static IEntityWrapper<PostFollow> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<PostFollow> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: processtrigger.
        /// </summary>
        public static IEntityWrapper<ProcessTrigger> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ProcessTrigger> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: queueitem.
        /// </summary>
        public static IEntityWrapper<QueueItem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<QueueItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: reportcategory.
        /// </summary>
        public static IEntityWrapper<ReportCategory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ReportCategory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resource.
        /// </summary>
        public static IEntityWrapper<Resource> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Resource> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcegroupexpansion.
        /// </summary>
        public static IEntityWrapper<ResourceGroupExpansion> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ResourceGroupExpansion> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: rollupfield.
        /// </summary>
        public static IEntityWrapper<RollupField> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<RollupField> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesprocessinstance.
        /// </summary>
        public static IEntityWrapper<SalesProcessInstance> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SalesProcessInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: savedquery.
        /// </summary>
        public static IEntityWrapper<SavedQuery> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SavedQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: savedqueryvisualization.
        /// </summary>
        public static IEntityWrapper<SavedQueryVisualization> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SavedQueryVisualization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: slaitem.
        /// </summary>
        public static IEntityWrapper<SLAItem> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SLAItem> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: slakpiinstance.
        /// </summary>
        public static IEntityWrapper<SLAKPIInstance> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SLAKPIInstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: socialprofile.
        /// </summary>
        public static IEntityWrapper<SocialProfile> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SocialProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: syncerror.
        /// </summary>
        public static IEntityWrapper<SyncError> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SyncError> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: teamtemplate.
        /// </summary>
        public static IEntityWrapper<TeamTemplate> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TeamTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topic.
        /// </summary>
        public static IEntityWrapper<Topic> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Topic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topichistory.
        /// </summary>
        public static IEntityWrapper<TopicHistory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TopicHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: translationprocess.
        /// </summary>
        public static IEntityWrapper<TranslationProcess> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<TranslationProcess> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: userquery.
        /// </summary>
        public static IEntityWrapper<UserQuery> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<UserQuery> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: userqueryvisualization.
        /// </summary>
        public static IEntityWrapper<UserQueryVisualization> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<UserQueryVisualization> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetRecord(this IEntityWrapperRelation<SyncError> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);

    }
    public static class SystemApplicationMetadataExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SystemApplicationMetadata> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SystemApplicationMetadata> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SystemApplicationMetadata> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SystemApplicationMetadata> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SystemApplicationMetadata> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class SystemFormExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<SystemForm> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: ancestorformid. Lookup to entity: systemform.
        /// </summary>
        public static IEntityWrapper<SystemForm> GetParentForm(this IEntityWrapperRelation<SystemForm> wrapper, IColumnSet<SystemForm> columnSet)
            => wrapper.GetRelated(e => e.AncestorFormId, columnSet);

    }
    public static class SystemUserExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Related attribute: calendarid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetCalendar(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.CalendarId, columnSet);
        /// <summary>
        /// Related attribute: defaultmailbox. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetMailbox(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.DefaultMailbox, columnSet);
        /// <summary>
        /// Related attribute: mobileofflineprofileid. Lookup to entity: mobileofflineprofile.
        /// </summary>
        public static IEntityWrapper<MobileOfflineProfile> GetMobileOfflineProfile(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<MobileOfflineProfile> columnSet)
            => wrapper.GetRelated(e => e.MobileOfflineProfileId, columnSet);
        /// <summary>
        /// Related attribute: positionid. Lookup to entity: position.
        /// </summary>
        public static IEntityWrapper<Position> GetPosition(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<Position> columnSet)
            => wrapper.GetRelated(e => e.PositionId, columnSet);
        /// <summary>
        /// Related attribute: queueid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetDefaultQueue(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.QueueId, columnSet);
        /// <summary>
        /// Related attribute: siteid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetSite(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.SiteId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: parentsystemuserid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetManager(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ParentSystemUserId, columnSet);
        /// <summary>
        /// Related attribute: territoryid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetTerritory(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.TerritoryId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<SystemUser> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class TaskExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetRegarding(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: serviceid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetService(this IEntityWrapperRelation<Task> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ServiceId, columnSet);
        /// <summary>
        /// Related attribute: slaid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetSLA(this IEntityWrapperRelation<Task> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAId, columnSet);
        /// <summary>
        /// Related attribute: slainvokedid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetLastSLAApplied(this IEntityWrapperRelation<Task> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.SLAInvokedId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Task> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class TeamExt
    {
        /// <summary>
        /// Related attribute: businessunitid. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetBusinessUnit(this IEntityWrapperRelation<Team> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.BusinessUnitId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetRegardingObjectId(this IEntityWrapperRelation<Team> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetRegardingObjectId(this IEntityWrapperRelation<Team> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: queueid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetDefaultQueue(this IEntityWrapperRelation<Team> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.QueueId, columnSet);
        /// <summary>
        /// Related attribute: administratorid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetAdministrator(this IEntityWrapperRelation<Team> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.AdministratorId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<Team> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<Team> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<Team> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<Team> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: teamtemplateid. Lookup to entity: teamtemplate.
        /// </summary>
        public static IEntityWrapper<TeamTemplate> GetTeamTemplateIdentifier(this IEntityWrapperRelation<Team> wrapper, IColumnSet<TeamTemplate> columnSet)
            => wrapper.GetRelated(e => e.TeamTemplateId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Team> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class TeamTemplateExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<TeamTemplate> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<TeamTemplate> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<TeamTemplate> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<TeamTemplate> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class TerritoryExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Territory> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: managerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetManager(this IEntityWrapperRelation<Territory> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ManagerId, columnSet);
        /// <summary>
        /// Related attribute: parentterritoryid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetParent(this IEntityWrapperRelation<Territory> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.ParentTerritoryId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Territory> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class TextAnalyticsEntityMappingExt
    {
        /// <summary>
        /// Related attribute: advancedsimilarityruleid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetAdvancedSimilarityRuleId(this IEntityWrapperRelation<TextAnalyticsEntityMapping> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.AdvancedSimilarityRuleId, columnSet);
        /// <summary>
        /// Related attribute: knowledgesearchmodelid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetKnowledgeSearchModelId(this IEntityWrapperRelation<TextAnalyticsEntityMapping> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.KnowledgeSearchModelId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TextAnalyticsEntityMapping> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: similarityruleid. Lookup to entity: similarityrule.
        /// </summary>
        public static IEntityWrapper<SimilarityRule> GetSimilarityRuleId(this IEntityWrapperRelation<TextAnalyticsEntityMapping> wrapper, IColumnSet<SimilarityRule> columnSet)
            => wrapper.GetRelated(e => e.SimilarityRuleId, columnSet);
        /// <summary>
        /// Related attribute: topicmodelconfigurationid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetTopicModelConfigurationId(this IEntityWrapperRelation<TextAnalyticsEntityMapping> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.TopicModelConfigurationId, columnSet);

    }
    public static class ThemeExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<Theme> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<Theme> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: logoid. Lookup to entity: webresource.
        /// </summary>
        public static IEntityWrapper<WebResource> GetLogo(this IEntityWrapperRelation<Theme> wrapper, IColumnSet<WebResource> columnSet)
            => wrapper.GetRelated(e => e.LogoId, columnSet);

    }
    public static class TimeZoneDefinitionExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TimeZoneDefinition> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<TimeZoneDefinition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<TimeZoneDefinition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<TimeZoneDefinition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<TimeZoneDefinition> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class TimeZoneLocalizedNameExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TimeZoneLocalizedName> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<TimeZoneLocalizedName> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<TimeZoneLocalizedName> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<TimeZoneLocalizedName> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<TimeZoneLocalizedName> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: timezonedefinitionid. Lookup to entity: timezonedefinition.
        /// </summary>
        public static IEntityWrapper<TimeZoneDefinition> GetTimeZoneDefinition(this IEntityWrapperRelation<TimeZoneLocalizedName> wrapper, IColumnSet<TimeZoneDefinition> columnSet)
            => wrapper.GetRelated(e => e.TimeZoneDefinitionId, columnSet);

    }
    public static class TimeZoneRuleExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TimeZoneRule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<TimeZoneRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<TimeZoneRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<TimeZoneRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<TimeZoneRule> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: timezonedefinitionid. Lookup to entity: timezonedefinition.
        /// </summary>
        public static IEntityWrapper<TimeZoneDefinition> GetTimeZoneDefinition(this IEntityWrapperRelation<TimeZoneRule> wrapper, IColumnSet<TimeZoneDefinition> columnSet)
            => wrapper.GetRelated(e => e.TimeZoneDefinitionId, columnSet);

    }
    public static class TopicExt
    {
        /// <summary>
        /// Related attribute: incidentid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetIncidentId(this IEntityWrapperRelation<Topic> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.IncidentId, columnSet);

    }
    public static class TopicHistoryExt
    {
        /// <summary>
        /// Related attribute: topicmodelexecutionhistoryid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetTopicModelExecutionHistoryId(this IEntityWrapperRelation<TopicHistory> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.TopicModelExecutionHistoryId, columnSet);

    }
    public static class TopicModelExt
    {
        /// <summary>
        /// Related attribute: azureserviceconnectionid. Lookup to entity: azureserviceconnection.
        /// </summary>
        public static IEntityWrapper<AzureServiceConnection> GetConnection(this IEntityWrapperRelation<TopicModel> wrapper, IColumnSet<AzureServiceConnection> columnSet)
            => wrapper.GetRelated(e => e.AzureServiceConnectionId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<TopicModel> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: configurationused. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetConfiguration(this IEntityWrapperRelation<TopicModel> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.ConfigurationUsed, columnSet);

    }
    public static class TopicModelConfigurationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<TopicModelConfiguration> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: topicmodelid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetTopicModelId(this IEntityWrapperRelation<TopicModelConfiguration> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.TopicModelId, columnSet);

    }
    public static class TopicModelExecutionHistoryExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<TopicModelExecutionHistory> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: topicmodelid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetTopicModelId(this IEntityWrapperRelation<TopicModelExecutionHistory> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.TopicModelId, columnSet);
        /// <summary>
        /// Related attribute: topicmodelconfigurationid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetTopicModelConfiguration(this IEntityWrapperRelation<TopicModelExecutionHistory> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.TopicModelConfigurationId, columnSet);

    }
    public static class TraceAssociationExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TraceAssociation> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: tracelogid. Lookup to entity: tracelog.
        /// </summary>
        public static IEntityWrapper<TraceLog> GetTrace(this IEntityWrapperRelation<TraceAssociation> wrapper, IColumnSet<TraceLog> columnSet)
            => wrapper.GetRelated(e => e.TraceLogId, columnSet);

    }
    public static class TraceLogExt
    {
        /// <summary>
        /// Related attribute: regardingobjectowningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwningBusinessUnit, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetRegarding(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRegarding(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);
        /// <summary>
        /// Related attribute: parenttracelogid. Lookup to entity: tracelog.
        /// </summary>
        public static IEntityWrapper<TraceLog> GetParentId(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<TraceLog> columnSet)
            => wrapper.GetRelated(e => e.ParentTraceLogId, columnSet);
        /// <summary>
        /// Related attribute: traceregardingid. Lookup to entity: traceregarding.
        /// </summary>
        public static IEntityWrapper<TraceRegarding> GetTraceRegarding(this IEntityWrapperRelation<TraceLog> wrapper, IColumnSet<TraceRegarding> columnSet)
            => wrapper.GetRelated(e => e.TraceRegardingId, columnSet);

    }
    public static class TraceRegardingExt
    {
        /// <summary>
        /// Related attribute: regardingobjectowningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<TraceRegarding> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwningBusinessUnit, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: emailserverprofile.
        /// </summary>
        public static IEntityWrapper<EmailServerProfile> GetRegarding(this IEntityWrapperRelation<TraceRegarding> wrapper, IColumnSet<EmailServerProfile> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetRegarding(this IEntityWrapperRelation<TraceRegarding> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<TraceRegarding> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: regardingobjectownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<TraceRegarding> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.RegardingObjectOwnerId, columnSet);

    }
    public static class TransactionCurrencyExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<TransactionCurrency> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class TransformationMappingExt
    {
        /// <summary>
        /// Related attribute: importmapid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetDataMap(this IEntityWrapperRelation<TransformationMapping> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.ImportMapId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<TransformationMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<TransformationMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<TransformationMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<TransformationMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);

    }
    public static class TransformationParameterMappingExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<TransformationParameterMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<TransformationParameterMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<TransformationParameterMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<TransformationParameterMapping> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transformationmappingid. Lookup to entity: transformationmapping.
        /// </summary>
        public static IEntityWrapper<TransformationMapping> GetTransformationMappingId(this IEntityWrapperRelation<TransformationParameterMapping> wrapper, IColumnSet<TransformationMapping> columnSet)
            => wrapper.GetRelated(e => e.TransformationMappingId, columnSet);

    }
    public static class TranslationProcessExt
    {
        /// <summary>
        /// Related attribute: knowledgearticleid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetKnowledgeArticle(this IEntityWrapperRelation<TranslationProcess> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.KnowledgeArticleId, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<TranslationProcess> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: activestageid. Lookup to entity: processstage.
        /// </summary>
        public static IEntityWrapper<ProcessStage> GetActiveStage(this IEntityWrapperRelation<TranslationProcess> wrapper, IColumnSet<ProcessStage> columnSet)
            => wrapper.GetRelated(e => e.ActiveStageId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<TranslationProcess> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);
        /// <summary>
        /// Related attribute: processid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<TranslationProcess> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ProcessId, columnSet);

    }
    public static class UntrackedEmailExt
    {
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<UntrackedEmail> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class UoMExt
    {
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: baseuom. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetBaseUnit(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.BaseUoM, columnSet);
        /// <summary>
        /// Related attribute: uomscheduleid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetUnitSchedule(this IEntityWrapperRelation<UoM> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.UoMScheduleId, columnSet);

    }
    public static class UoMScheduleExt
    {
        /// <summary>
        /// Related attribute: createdbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetCreatedByExternalParty(this IEntityWrapperRelation<UoMSchedule> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.CreatedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: modifiedbyexternalparty. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetModifiedByExternalParty(this IEntityWrapperRelation<UoMSchedule> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ModifiedByExternalParty, columnSet);
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<UoMSchedule> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class UserEntityInstanceDataExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: account.
        /// </summary>
        public static IEntityWrapper<Account> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Account> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: accountleads.
        /// </summary>
        public static IEntityWrapper<AccountLeads> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<AccountLeads> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: activitymimeattachment.
        /// </summary>
        public static IEntityWrapper<ActivityMimeAttachment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ActivityMimeAttachment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: activityparty.
        /// </summary>
        public static IEntityWrapper<ActivityParty> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ActivityParty> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: adminsettingsentity.
        /// </summary>
        public static IEntityWrapper<adminsettingsentity> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<adminsettingsentity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: annotation.
        /// </summary>
        public static IEntityWrapper<Annotation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Annotation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: apisettings.
        /// </summary>
        public static IEntityWrapper<apisettings> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<apisettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: appointment.
        /// </summary>
        public static IEntityWrapper<Appointment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Appointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: attachment.
        /// </summary>
        public static IEntityWrapper<Attachment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Attachment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: attributeimageconfig.
        /// </summary>
        public static IEntityWrapper<AttributeImageConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<AttributeImageConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: attributemap.
        /// </summary>
        public static IEntityWrapper<AttributeMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<AttributeMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: audit.
        /// </summary>
        public static IEntityWrapper<Audit> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Audit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresource.
        /// </summary>
        public static IEntityWrapper<BookableResource> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebooking.
        /// </summary>
        public static IEntityWrapper<BookableResourceBooking> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceBooking> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebookingexchangesyncidmapping.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingExchangeSyncIdMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceBookingExchangeSyncIdMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcebookingheader.
        /// </summary>
        public static IEntityWrapper<BookableResourceBookingHeader> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceBookingHeader> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecategory.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceCategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecategoryassn.
        /// </summary>
        public static IEntityWrapper<BookableResourceCategoryAssn> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceCategoryAssn> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcecharacteristic.
        /// </summary>
        public static IEntityWrapper<BookableResourceCharacteristic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceCharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookableresourcegroup.
        /// </summary>
        public static IEntityWrapper<BookableResourceGroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookableResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bookingstatus.
        /// </summary>
        public static IEntityWrapper<BookingStatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BookingStatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkdeletefailure.
        /// </summary>
        public static IEntityWrapper<BulkDeleteFailure> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BulkDeleteFailure> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkdeleteoperation.
        /// </summary>
        public static IEntityWrapper<BulkDeleteOperation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BulkDeleteOperation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkoperation.
        /// </summary>
        public static IEntityWrapper<BulkOperation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BulkOperation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: bulkoperationlog.
        /// </summary>
        public static IEntityWrapper<BulkOperationLog> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BulkOperationLog> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: businessunitmap.
        /// </summary>
        public static IEntityWrapper<BusinessUnitMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BusinessUnitMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: businessunitnewsarticle.
        /// </summary>
        public static IEntityWrapper<BusinessUnitNewsArticle> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<BusinessUnitNewsArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: calendar.
        /// </summary>
        public static IEntityWrapper<Calendar> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Calendar> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: calendarrule.
        /// </summary>
        public static IEntityWrapper<CalendarRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CalendarRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaign.
        /// </summary>
        public static IEntityWrapper<Campaign> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Campaign> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignactivity.
        /// </summary>
        public static IEntityWrapper<CampaignActivity> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CampaignActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignactivityitem.
        /// </summary>
        public static IEntityWrapper<CampaignActivityItem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CampaignActivityItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignitem.
        /// </summary>
        public static IEntityWrapper<CampaignItem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CampaignItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: campaignresponse.
        /// </summary>
        public static IEntityWrapper<CampaignResponse> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CampaignResponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: channelaccessprofile.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfile> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ChannelAccessProfile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: channelaccessprofilerule.
        /// </summary>
        public static IEntityWrapper<ChannelAccessProfileRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ChannelAccessProfileRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: characteristic.
        /// </summary>
        public static IEntityWrapper<Characteristic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Characteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: childincidentcount.
        /// </summary>
        public static IEntityWrapper<ChildIncidentCount> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ChildIncidentCount> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: clientupdate.
        /// </summary>
        public static IEntityWrapper<ClientUpdate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ClientUpdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: columnmapping.
        /// </summary>
        public static IEntityWrapper<ColumnMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ColumnMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: commitment.
        /// </summary>
        public static IEntityWrapper<Commitment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Commitment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitor.
        /// </summary>
        public static IEntityWrapper<Competitor> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Competitor> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitoraddress.
        /// </summary>
        public static IEntityWrapper<CompetitorAddress> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CompetitorAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitorproduct.
        /// </summary>
        public static IEntityWrapper<CompetitorProduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CompetitorProduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: competitorsalesliterature.
        /// </summary>
        public static IEntityWrapper<CompetitorSalesLiterature> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CompetitorSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connection.
        /// </summary>
        public static IEntityWrapper<Connection> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Connection> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connectionrole.
        /// </summary>
        public static IEntityWrapper<ConnectionRole> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ConnectionRole> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connectionroleassociation.
        /// </summary>
        public static IEntityWrapper<ConnectionRoleAssociation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ConnectionRoleAssociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connectionroleobjecttypecode.
        /// </summary>
        public static IEntityWrapper<ConnectionRoleObjectTypeCode> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ConnectionRoleObjectTypeCode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: connector.
        /// </summary>
        public static IEntityWrapper<connector> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<connector> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: constraintbasedgroup.
        /// </summary>
        public static IEntityWrapper<ConstraintBasedGroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ConstraintBasedGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contact.
        /// </summary>
        public static IEntityWrapper<Contact> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Contact> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactinvoices.
        /// </summary>
        public static IEntityWrapper<ContactInvoices> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ContactInvoices> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactleads.
        /// </summary>
        public static IEntityWrapper<ContactLeads> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ContactLeads> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactorders.
        /// </summary>
        public static IEntityWrapper<ContactOrders> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ContactOrders> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contactquotes.
        /// </summary>
        public static IEntityWrapper<ContactQuotes> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ContactQuotes> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contract.
        /// </summary>
        public static IEntityWrapper<Contract> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Contract> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contractdetail.
        /// </summary>
        public static IEntityWrapper<ContractDetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ContractDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: contracttemplate.
        /// </summary>
        public static IEntityWrapper<ContractTemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ContractTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: convertrule.
        /// </summary>
        public static IEntityWrapper<ConvertRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ConvertRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: cr953_package.
        /// </summary>
        public static IEntityWrapper<cr953_package> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<cr953_package> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: cr953_packagesummary.
        /// </summary>
        public static IEntityWrapper<cr953_packagesummary> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<cr953_packagesummary> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: cr953_subscription.
        /// </summary>
        public static IEntityWrapper<cr953_subscription> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<cr953_subscription> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: customeraddress.
        /// </summary>
        public static IEntityWrapper<CustomerAddress> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CustomerAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: customeropportunityrole.
        /// </summary>
        public static IEntityWrapper<CustomerOpportunityRole> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CustomerOpportunityRole> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: customerrelationship.
        /// </summary>
        public static IEntityWrapper<CustomerRelationship> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<CustomerRelationship> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dependency.
        /// </summary>
        public static IEntityWrapper<Dependency> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Dependency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dependencynode.
        /// </summary>
        public static IEntityWrapper<DependencyNode> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DependencyNode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: discount.
        /// </summary>
        public static IEntityWrapper<Discount> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Discount> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: discounttype.
        /// </summary>
        public static IEntityWrapper<DiscountType> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DiscountType> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: displaystring.
        /// </summary>
        public static IEntityWrapper<DisplayString> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DisplayString> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: displaystringmap.
        /// </summary>
        public static IEntityWrapper<DisplayStringMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DisplayStringMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: documentindex.
        /// </summary>
        public static IEntityWrapper<DocumentIndex> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DocumentIndex> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: duplicaterecord.
        /// </summary>
        public static IEntityWrapper<DuplicateRecord> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DuplicateRecord> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: duplicaterule.
        /// </summary>
        public static IEntityWrapper<DuplicateRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DuplicateRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: duplicaterulecondition.
        /// </summary>
        public static IEntityWrapper<DuplicateRuleCondition> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DuplicateRuleCondition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicproperty.
        /// </summary>
        public static IEntityWrapper<DynamicProperty> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DynamicProperty> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicpropertyassociation.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyAssociation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DynamicPropertyAssociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicpropertyinstance.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyInstance> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DynamicPropertyInstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: dynamicpropertyoptionsetitem.
        /// </summary>
        public static IEntityWrapper<DynamicPropertyOptionSetItem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<DynamicPropertyOptionSetItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: email.
        /// </summary>
        public static IEntityWrapper<Email> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Email> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: emailhash.
        /// </summary>
        public static IEntityWrapper<EmailHash> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EmailHash> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: emailsearch.
        /// </summary>
        public static IEntityWrapper<EmailSearch> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EmailSearch> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlement.
        /// </summary>
        public static IEntityWrapper<Entitlement> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Entitlement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementchannel.
        /// </summary>
        public static IEntityWrapper<EntitlementChannel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementChannel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementcontacts.
        /// </summary>
        public static IEntityWrapper<EntitlementContacts> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementContacts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlemententityallocationtypemapping.
        /// </summary>
        public static IEntityWrapper<EntitlementEntityAllocationTypeMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementEntityAllocationTypeMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementProducts> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementProducts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplate.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplatechannel.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateChannel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementTemplateChannel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitlementtemplateproducts.
        /// </summary>
        public static IEntityWrapper<EntitlementTemplateProducts> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntitlementTemplateProducts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entityanalyticsconfig.
        /// </summary>
        public static IEntityWrapper<EntityAnalyticsConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntityAnalyticsConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entityimageconfig.
        /// </summary>
        public static IEntityWrapper<EntityImageConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntityImageConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: entitymap.
        /// </summary>
        public static IEntityWrapper<EntityMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EntityMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: environmentvariabledefinition.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableDefinition> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EnvironmentVariableDefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: environmentvariablevalue.
        /// </summary>
        public static IEntityWrapper<EnvironmentVariableValue> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<EnvironmentVariableValue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: equipment.
        /// </summary>
        public static IEntityWrapper<Equipment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Equipment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: externalparty.
        /// </summary>
        public static IEntityWrapper<ExternalParty> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ExternalParty> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fax.
        /// </summary>
        public static IEntityWrapper<Fax> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Fax> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fieldpermission.
        /// </summary>
        public static IEntityWrapper<FieldPermission> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<FieldPermission> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fieldsecurityprofile.
        /// </summary>
        public static IEntityWrapper<FieldSecurityProfile> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<FieldSecurityProfile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: fileattachment.
        /// </summary>
        public static IEntityWrapper<FileAttachment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<FileAttachment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: filtertemplate.
        /// </summary>
        public static IEntityWrapper<FilterTemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<FilterTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: goal.
        /// </summary>
        public static IEntityWrapper<Goal> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Goal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: goalrollupquery.
        /// </summary>
        public static IEntityWrapper<GoalRollupQuery> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<GoalRollupQuery> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: holidaywrapper.
        /// </summary>
        public static IEntityWrapper<holidaywrapper> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<holidaywrapper> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: import.
        /// </summary>
        public static IEntityWrapper<Import> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Import> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: importdata.
        /// </summary>
        public static IEntityWrapper<ImportData> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ImportData> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: importentitymapping.
        /// </summary>
        public static IEntityWrapper<ImportEntityMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ImportEntityMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: importfile.
        /// </summary>
        public static IEntityWrapper<ImportFile> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ImportFile> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: importjob.
        /// </summary>
        public static IEntityWrapper<ImportJob> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ImportJob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: importlog.
        /// </summary>
        public static IEntityWrapper<ImportLog> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ImportLog> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: importmap.
        /// </summary>
        public static IEntityWrapper<ImportMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ImportMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incident.
        /// </summary>
        public static IEntityWrapper<Incident> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Incident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incidentknowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<IncidentKnowledgeBaseRecord> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<IncidentKnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: incidentresolution.
        /// </summary>
        public static IEntityWrapper<IncidentResolution> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<IncidentResolution> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: internaladdress.
        /// </summary>
        public static IEntityWrapper<InternalAddress> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<InternalAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: invaliddependency.
        /// </summary>
        public static IEntityWrapper<InvalidDependency> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<InvalidDependency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: invoice.
        /// </summary>
        public static IEntityWrapper<Invoice> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Invoice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: invoicedetail.
        /// </summary>
        public static IEntityWrapper<InvoiceDetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<InvoiceDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: isvconfig.
        /// </summary>
        public static IEntityWrapper<IsvConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<IsvConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: kbarticle.
        /// </summary>
        public static IEntityWrapper<KbArticle> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<KbArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: kbarticlecomment.
        /// </summary>
        public static IEntityWrapper<KbArticleComment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<KbArticleComment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: kbarticletemplate.
        /// </summary>
        public static IEntityWrapper<KbArticleTemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<KbArticleTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticle.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticle> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<KnowledgeArticle> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgearticleincident.
        /// </summary>
        public static IEntityWrapper<KnowledgeArticleIncident> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<KnowledgeArticleIncident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: knowledgebaserecord.
        /// </summary>
        public static IEntityWrapper<KnowledgeBaseRecord> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<KnowledgeBaseRecord> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: lead.
        /// </summary>
        public static IEntityWrapper<Lead> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Lead> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadaddress.
        /// </summary>
        public static IEntityWrapper<LeadAddress> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<LeadAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadcompetitors.
        /// </summary>
        public static IEntityWrapper<LeadCompetitors> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<LeadCompetitors> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadproduct.
        /// </summary>
        public static IEntityWrapper<LeadProduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<LeadProduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: leadtoopportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<LeadToOpportunitySalesProcess> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<LeadToOpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: letter.
        /// </summary>
        public static IEntityWrapper<Letter> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Letter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: license.
        /// </summary>
        public static IEntityWrapper<License> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<License> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: list.
        /// </summary>
        public static IEntityWrapper<List> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<List> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: listmember.
        /// </summary>
        public static IEntityWrapper<ListMember> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ListMember> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: lookupmapping.
        /// </summary>
        public static IEntityWrapper<LookUpMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<LookUpMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: mailbox.
        /// </summary>
        public static IEntityWrapper<Mailbox> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Mailbox> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: mailmergetemplate.
        /// </summary>
        public static IEntityWrapper<MailMergeTemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<MailMergeTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: metric.
        /// </summary>
        public static IEntityWrapper<Metric> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Metric> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_3dmodel.
        /// </summary>
        public static IEntityWrapper<msdyn_3dmodel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_3dmodel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_accountpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_accountpricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_accountpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actioncardregarding.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardregarding> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_actioncardregarding> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actioncardrolesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_actioncardrolesetting> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_actioncardrolesetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_actual.
        /// </summary>
        public static IEntityWrapper<msdyn_actual> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_actual> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreement.
        /// </summary>
        public static IEntityWrapper<msdyn_agreement> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingdate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementbookingdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingincident> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementbookingincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementbookingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservice> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementbookingservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingservicetask> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementbookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementbookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementbookingsetup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementbookingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicedate.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicedate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementinvoicedate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoiceproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoiceproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementinvoiceproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementinvoicesetup.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementinvoicesetup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementinvoicesetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_agreementsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_agreementsubstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_agreementsubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_AIConfiguration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIConfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aifptrainingdocument.
        /// </summary>
        public static IEntityWrapper<msdyn_AIFpTrainingDocument> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIFpTrainingDocument> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aimodel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIModel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdImage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIOdImage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodlabel.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdLabel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIOdLabel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodtrainingboundingbox.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingBoundingBox> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIOdTrainingBoundingBox> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aiodtrainingimage.
        /// </summary>
        public static IEntityWrapper<msdyn_AIOdTrainingImage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AIOdTrainingImage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_aitemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_AITemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_AITemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysiscomponent.
        /// </summary>
        public static IEntityWrapper<msdyn_analysiscomponent> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_analysiscomponent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysisjob.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisjob> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_analysisjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysisresult.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresult> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_analysisresult> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_analysisresultdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_analysisresultdetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_analysisresultdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_approval.
        /// </summary>
        public static IEntityWrapper<msdyn_approval> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_approval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_batchjob.
        /// </summary>
        public static IEntityWrapper<msdyn_batchjob> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_batchjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookableresourceassociation.
        /// </summary>
        public static IEntityWrapper<msdyn_bookableresourceassociation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookableresourceassociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalert.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalert> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingalertstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingalertstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingalertstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingchange.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingchange> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingchange> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingjournal> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingjournal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingrule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingsetupmetadata.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingsetupmetadata> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingsetupmetadata> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bookingtimestamp.
        /// </summary>
        public static IEntityWrapper<msdyn_bookingtimestamp> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bookingtimestamp> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_2c5fe86acc8b414b8322ae571000c799.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_2c5fe86acc8b414b8322ae571000c799> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_477c16f59170487b8b4dc895c5dcd09b> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_665e73aa18c247d886bfc50499c73b82.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_665e73aa18c247d886bfc50499c73b82> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_989e9b1857e24af18787d5143b67523b.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_989e9b1857e24af18787d5143b67523b> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_989e9b1857e24af18787d5143b67523b> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_baa0a411a239410cb8bded8b5fdd88e3> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_d3d97bac8c294105840e99e37a9d1c39> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d.
        /// </summary>
        public static IEntityWrapper<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_bpf_d8f9dc7f099f44db9d641dd81fbd470d> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_businessclosure.
        /// </summary>
        public static IEntityWrapper<msdyn_businessclosure> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_businessclosure> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_callablecontext.
        /// </summary>
        public static IEntityWrapper<msdyn_callablecontext> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_callablecontext> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_characteristicreqforteammember.
        /// </summary>
        public static IEntityWrapper<msdyn_characteristicreqforteammember> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_characteristicreqforteammember> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_clientextension.
        /// </summary>
        public static IEntityWrapper<msdyn_clientextension> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_clientextension> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_collabgraphresource.
        /// </summary>
        public static IEntityWrapper<msdyn_CollabGraphResource> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_CollabGraphResource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_configuration.
        /// </summary>
        public static IEntityWrapper<msdyn_Configuration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_Configuration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contactpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_contactpricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_contactpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contractlineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlineinvoiceschedule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_contractlineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_contractlinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_contractlinescheduleofvalue> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_contractlinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_customerasset.
        /// </summary>
        public static IEntityWrapper<msdyn_customerasset> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_customerasset> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_customerassetcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_customerassetcategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_customerassetcategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_databaseversion.
        /// </summary>
        public static IEntityWrapper<msdyn_databaseversion> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_databaseversion> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dataexport.
        /// </summary>
        public static IEntityWrapper<msdyn_dataexport> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_dataexport> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_delegation.
        /// </summary>
        public static IEntityWrapper<msdyn_delegation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_delegation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dimension.
        /// </summary>
        public static IEntityWrapper<msdyn_dimension> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_dimension> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_dimensionfieldname.
        /// </summary>
        public static IEntityWrapper<msdyn_dimensionfieldname> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_dimensionfieldname> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_entitlementapplication.
        /// </summary>
        public static IEntityWrapper<msdyn_entitlementapplication> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_entitlementapplication> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_entityconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_entityconfiguration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_entityconfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_entityrankingrule.
        /// </summary>
        public static IEntityWrapper<msdyn_entityrankingrule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_entityrankingrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_estimate.
        /// </summary>
        public static IEntityWrapper<msdyn_estimate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_estimate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_estimateline.
        /// </summary>
        public static IEntityWrapper<msdyn_estimateline> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_estimateline> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expense.
        /// </summary>
        public static IEntityWrapper<msdyn_expense> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_expense> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expensecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_expensecategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_expensecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_expensereceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_expensereceipt> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_expensereceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fact.
        /// </summary>
        public static IEntityWrapper<msdyn_fact> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_fact> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldcomputation.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldcomputation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_fieldcomputation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicepricelistitem.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicepricelistitem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_fieldservicepricelistitem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicesetting.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesetting> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_fieldservicesetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldserviceslaconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldserviceslaconfiguration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_fieldserviceslaconfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_fieldservicesystemjob.
        /// </summary>
        public static IEntityWrapper<msdyn_fieldservicesystemjob> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_fieldservicesystemjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_findworkevent.
        /// </summary>
        public static IEntityWrapper<msdyn_findworkevent> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_findworkevent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_flowcardtype.
        /// </summary>
        public static IEntityWrapper<msdyn_flowcardtype> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_flowcardtype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastconfiguration.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastconfiguration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_forecastconfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastdefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastdefinition> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_forecastdefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastinstance> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_forecastinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_forecastrecurrence.
        /// </summary>
        public static IEntityWrapper<msdyn_forecastrecurrence> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_forecastrecurrence> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_geofence.
        /// </summary>
        public static IEntityWrapper<msdyn_geofence> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_geofence> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_geofenceevent.
        /// </summary>
        public static IEntityWrapper<msdyn_geofenceevent> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_geofenceevent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_geofencingsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_geofencingsettings> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_geofencingsettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_helppage.
        /// </summary>
        public static IEntityWrapper<msdyn_helppage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_helppage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_icebreakersconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_icebreakersconfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_icebreakersconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttype.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttype_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttype_requirementgroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttype_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypecharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypecharacteristic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttypecharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttypeproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeservice.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservice> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttypeservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypeservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypeservicetask> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttypeservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_incidenttypessetup.
        /// </summary>
        public static IEntityWrapper<msdyn_incidenttypessetup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_incidenttypessetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_integrationjob.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjob> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_integrationjob> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_integrationjobdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_integrationjobdetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_integrationjobdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustment.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_inventoryadjustment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryadjustmentproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryadjustmentproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_inventoryadjustmentproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventoryjournal.
        /// </summary>
        public static IEntityWrapper<msdyn_inventoryjournal> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_inventoryjournal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_inventorytransfer.
        /// </summary>
        public static IEntityWrapper<msdyn_inventorytransfer> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_inventorytransfer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicefrequency.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequency> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_invoicefrequency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicefrequencydetail.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicefrequencydetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_invoicefrequencydetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_invoicelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_invoicelinetransaction> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_invoicelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotalert.
        /// </summary>
        public static IEntityWrapper<msdyn_iotalert> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotalert> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevice.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevice> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdevice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdevicecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecommand.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommand> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdevicecommand> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicecommanddefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicecommanddefinition> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdevicecommanddefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdevicedatahistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdevicedatahistory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdevicedatahistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdeviceproperty.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceproperty> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdeviceproperty> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotdeviceregistrationhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_iotdeviceregistrationhistory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotdeviceregistrationhistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotpropertydefinition.
        /// </summary>
        public static IEntityWrapper<msdyn_iotpropertydefinition> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotpropertydefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotprovider.
        /// </summary>
        public static IEntityWrapper<msdyn_iotprovider> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotprovider> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotproviderinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_iotproviderinstance> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotproviderinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_iotsettings.
        /// </summary>
        public static IEntityWrapper<msdyn_iotsettings> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_iotsettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_journal.
        /// </summary>
        public static IEntityWrapper<msdyn_journal> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_journal> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_journalline.
        /// </summary>
        public static IEntityWrapper<msdyn_journalline> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_journalline> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_knowledgearticleimage.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticleimage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_knowledgearticleimage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_knowledgearticletemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_knowledgearticletemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_knowledgearticletemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_mlresultcache.
        /// </summary>
        public static IEntityWrapper<msdyn_mlresultcache> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_mlresultcache> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_msteamssetting.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssetting> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_msteamssetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_msteamssettingsv2.
        /// </summary>
        public static IEntityWrapper<msdyn_msteamssettingsv2> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_msteamssettingsv2> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_notesanalysisconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_notesanalysisconfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_notesanalysisconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylineresourcecategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_opportunitylineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransaction> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_opportunitylinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactioncategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_opportunitylinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitylinetransactionclassificatio.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitylinetransactionclassificatio> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_opportunitylinetransactionclassificatio> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_opportunitypricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_opportunitypricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_opportunitypricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingdate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderinvoicingdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderinvoicingsetupdate.
        /// </summary>
        public static IEntityWrapper<msdyn_orderinvoicingsetupdate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderinvoicingsetupdate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlineresourcecategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderlineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransaction> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderlinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactioncategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderlinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderlinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_orderlinetransactionclassification> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderlinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_orderpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_orderpricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_orderpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_organizationalunit.
        /// </summary>
        public static IEntityWrapper<msdyn_organizationalunit> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_organizationalunit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_payment.
        /// </summary>
        public static IEntityWrapper<msdyn_payment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_payment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentdetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_paymentdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentmethod.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentmethod> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_paymentmethod> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_paymentterm.
        /// </summary>
        public static IEntityWrapper<msdyn_paymentterm> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_paymentterm> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookactivity.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivity> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_playbookactivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookactivityattribute.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookactivityattribute> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_playbookactivityattribute> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookcategory.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookcategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_playbookcategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbookinstance.
        /// </summary>
        public static IEntityWrapper<msdyn_playbookinstance> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_playbookinstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_playbooktemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_playbooktemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_playbooktemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postalbum.
        /// </summary>
        public static IEntityWrapper<msdyn_PostAlbum> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_PostAlbum> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postalcode.
        /// </summary>
        public static IEntityWrapper<msdyn_postalcode> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_postalcode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_PostConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_postruleconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_PostRuleConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_PostRuleConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_priority.
        /// </summary>
        public static IEntityWrapper<msdyn_priority> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_priority> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_processnotes.
        /// </summary>
        public static IEntityWrapper<msdyn_processnotes> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_processnotes> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_productinventory.
        /// </summary>
        public static IEntityWrapper<msdyn_productinventory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_productinventory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_project.
        /// </summary>
        public static IEntityWrapper<msdyn_project> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_project> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectapproval.
        /// </summary>
        public static IEntityWrapper<msdyn_projectapproval> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projectapproval> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameter> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projectparameter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectparameterpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectparameterpricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projectparameterpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectpricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_projectpricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projectpricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttask.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttask> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projecttask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttaskdependency.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskdependency> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projecttaskdependency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttaskstatususer.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttaskstatususer> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projecttaskstatususer> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectteam.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteam> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projectteam> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projectteammembersignup.
        /// </summary>
        public static IEntityWrapper<msdyn_projectteammembersignup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projectteammembersignup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_projecttransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_projecttransactioncategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_projecttransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorder.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorder> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_purchaseorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderbill.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderbill> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_purchaseorderbill> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_purchaseorderproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderreceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceipt> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_purchaseorderreceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseorderreceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseorderreceiptproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_purchaseorderreceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_purchaseordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_purchaseordersubstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_purchaseordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingincident.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingincident> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotebookingincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotebookingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingservice.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservice> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotebookingservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingservicetask> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotebookingservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotebookingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quotebookingsetup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotebookingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quoteinvoicingproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quoteinvoicingproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quoteinvoicingsetup.
        /// </summary>
        public static IEntityWrapper<msdyn_quoteinvoicingsetup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quoteinvoicingsetup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineanalyticsbreakdown.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineanalyticsbreakdown> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelineanalyticsbreakdown> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineinvoiceschedule.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineinvoiceschedule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelineinvoiceschedule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelineresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelineresourcecategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelineresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinescheduleofvalue.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinescheduleofvalue> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelinescheduleofvalue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransaction.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransaction> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelinetransaction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactioncategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelinetransactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotelinetransactionclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_quotelinetransactionclassification> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotelinetransactionclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_quotepricelist.
        /// </summary>
        public static IEntityWrapper<msdyn_quotepricelist> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_quotepricelist> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_relationshipinsightsunifiedconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_relationshipinsightsunifiedconfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_relationshipinsightsunifiedconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementcharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementcharacteristic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementcharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementgroup.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementgroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementgroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementorganizationunit.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementorganizationunit> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementorganizationunit> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementrelationship.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementrelationship> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementrelationship> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementresourcecategory.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcecategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementresourcecategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementresourcepreference.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementresourcepreference> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementresourcepreference> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_requirementstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_requirementstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_requirementstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceassignment.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourceassignment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceassignmentdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceassignmentdetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourceassignmentdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcecategorymarkuppricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorymarkuppricelevel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourcecategorymarkuppricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcecategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcecategorypricelevel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourcecategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcepaytype.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcepaytype> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourcepaytype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequest.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequest> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourcerequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirement> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourcerequirement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourcerequirementdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_resourcerequirementdetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourcerequirementdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_resourceterritory.
        /// </summary>
        public static IEntityWrapper<msdyn_resourceterritory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_resourceterritory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rma.
        /// </summary>
        public static IEntityWrapper<msdyn_rma> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rma> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmaproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmaproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rmaproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmareceipt.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceipt> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rmareceipt> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmareceiptproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rmareceiptproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rmareceiptproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rmasubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rmasubstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rmasubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rolecompetencyrequirement.
        /// </summary>
        public static IEntityWrapper<msdyn_rolecompetencyrequirement> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rolecompetencyrequirement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_roleutilization.
        /// </summary>
        public static IEntityWrapper<msdyn_roleutilization> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_roleutilization> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtv.
        /// </summary>
        public static IEntityWrapper<msdyn_rtv> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rtv> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtvproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rtvproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_rtvsubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_rtvsubstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_rtvsubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_salesinsightssettings.
        /// </summary>
        public static IEntityWrapper<msdyn_salesinsightssettings> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_salesinsightssettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_scheduleboardsetting.
        /// </summary>
        public static IEntityWrapper<msdyn_scheduleboardsetting> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_scheduleboardsetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_schedulingparameter.
        /// </summary>
        public static IEntityWrapper<msdyn_schedulingparameter> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_schedulingparameter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_servicetasktype.
        /// </summary>
        public static IEntityWrapper<msdyn_servicetasktype> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_servicetasktype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_shipvia.
        /// </summary>
        public static IEntityWrapper<msdyn_shipvia> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_shipvia> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_siconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_siconfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_siconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_sikeyvalueconfig.
        /// </summary>
        public static IEntityWrapper<msdyn_sikeyvalueconfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_sikeyvalueconfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhealthrule.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthrule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_solutionhealthrule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhealthruleargument.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleargument> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_solutionhealthruleargument> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_solutionhealthruleset.
        /// </summary>
        public static IEntityWrapper<msdyn_solutionhealthruleset> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_solutionhealthruleset> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_systemuserschedulersetting.
        /// </summary>
        public static IEntityWrapper<msdyn_systemuserschedulersetting> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_systemuserschedulersetting> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_taxcode.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcode> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_taxcode> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_taxcodedetail.
        /// </summary>
        public static IEntityWrapper<msdyn_taxcodedetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_taxcodedetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_teamscollaboration.
        /// </summary>
        public static IEntityWrapper<msdyn_TeamsCollaboration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_TeamsCollaboration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeentry.
        /// </summary>
        public static IEntityWrapper<msdyn_timeentry> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_timeentry> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroup.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_timegroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timegroupdetail.
        /// </summary>
        public static IEntityWrapper<msdyn_timegroupdetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_timegroupdetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeoffcalendar.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffcalendar> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_timeoffcalendar> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_timeoffrequest.
        /// </summary>
        public static IEntityWrapper<msdyn_timeoffrequest> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_timeoffrequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategory.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactioncategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategoryclassification.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryclassification> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactioncategoryclassification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategoryhierarchyelement.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategoryhierarchyelement> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactioncategoryhierarchyelement> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactioncategorypricelevel.
        /// </summary>
        public static IEntityWrapper<msdyn_transactioncategorypricelevel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactioncategorypricelevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactionconnection.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionconnection> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactionconnection> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactionorigin.
        /// </summary>
        public static IEntityWrapper<msdyn_transactionorigin> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactionorigin> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_transactiontype.
        /// </summary>
        public static IEntityWrapper<msdyn_transactiontype> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_transactiontype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_uniquenumber.
        /// </summary>
        public static IEntityWrapper<msdyn_uniquenumber> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_uniquenumber> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_untrackedappointment.
        /// </summary>
        public static IEntityWrapper<msdyn_untrackedappointment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_untrackedappointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_upgraderun.
        /// </summary>
        public static IEntityWrapper<msdyn_upgraderun> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_upgraderun> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_upgradestep.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradestep> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_upgradestep> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_upgradeversion.
        /// </summary>
        public static IEntityWrapper<msdyn_upgradeversion> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_upgradeversion> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_userworkhistory.
        /// </summary>
        public static IEntityWrapper<msdyn_userworkhistory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_userworkhistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_wallsavedquery.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedquery> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_wallsavedquery> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_wallsavedqueryusersettings.
        /// </summary>
        public static IEntityWrapper<msdyn_wallsavedqueryusersettings> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_wallsavedqueryusersettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_warehouse.
        /// </summary>
        public static IEntityWrapper<msdyn_warehouse> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_warehouse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workhourtemplate.
        /// </summary>
        public static IEntityWrapper<msdyn_workhourtemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workhourtemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorder.
        /// </summary>
        public static IEntityWrapper<msdyn_workorder> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordercharacteristic.
        /// </summary>
        public static IEntityWrapper<msdyn_workordercharacteristic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workordercharacteristic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderdetailsgenerationqueue.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderdetailsgenerationqueue> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorderdetailsgenerationqueue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderincident.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderincident> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorderincident> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderproduct.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderproduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorderproduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderresourcerestriction.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderresourcerestriction> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorderresourcerestriction> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservice.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservice> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorderservice> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workorderservicetask.
        /// </summary>
        public static IEntityWrapper<msdyn_workorderservicetask> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workorderservicetask> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordersubstatus.
        /// </summary>
        public static IEntityWrapper<msdyn_workordersubstatus> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workordersubstatus> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdyn_workordertype.
        /// </summary>
        public static IEntityWrapper<msdyn_workordertype> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdyn_workordertype> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_marketingsitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_marketingsitemap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdynsm_marketingsitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_salessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_salessitemap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdynsm_salessitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_servicessitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_servicessitemap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdynsm_servicessitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msdynsm_settingssitemap.
        /// </summary>
        public static IEntityWrapper<msdynsm_settingssitemap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msdynsm_settingssitemap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_emailtemplate.
        /// </summary>
        public static IEntityWrapper<msfp_emailtemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_emailtemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_question.
        /// </summary>
        public static IEntityWrapper<msfp_question> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_question> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_questionresponse.
        /// </summary>
        public static IEntityWrapper<msfp_questionresponse> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_questionresponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_survey.
        /// </summary>
        public static IEntityWrapper<msfp_survey> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_survey> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyinvite.
        /// </summary>
        public static IEntityWrapper<msfp_surveyinvite> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_surveyinvite> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_surveyresponse.
        /// </summary>
        public static IEntityWrapper<msfp_surveyresponse> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_surveyresponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: msfp_unsubscribedrecipient.
        /// </summary>
        public static IEntityWrapper<msfp_unsubscribedrecipient> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<msfp_unsubscribedrecipient> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: notification.
        /// </summary>
        public static IEntityWrapper<Notification> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Notification> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunity.
        /// </summary>
        public static IEntityWrapper<Opportunity> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Opportunity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunityclose.
        /// </summary>
        public static IEntityWrapper<OpportunityClose> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OpportunityClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunitycompetitors.
        /// </summary>
        public static IEntityWrapper<OpportunityCompetitors> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OpportunityCompetitors> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunityproduct.
        /// </summary>
        public static IEntityWrapper<OpportunityProduct> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OpportunityProduct> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: opportunitysalesprocess.
        /// </summary>
        public static IEntityWrapper<OpportunitySalesProcess> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OpportunitySalesProcess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: orderclose.
        /// </summary>
        public static IEntityWrapper<OrderClose> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OrderClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: organizationstatistic.
        /// </summary>
        public static IEntityWrapper<OrganizationStatistic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OrganizationStatistic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ownermapping.
        /// </summary>
        public static IEntityWrapper<OwnerMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<OwnerMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: phonecall.
        /// </summary>
        public static IEntityWrapper<PhoneCall> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PhoneCall> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: phonetocaseprocess.
        /// </summary>
        public static IEntityWrapper<PhoneToCaseProcess> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PhoneToCaseProcess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: picklistmapping.
        /// </summary>
        public static IEntityWrapper<PickListMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PickListMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: pluginassembly.
        /// </summary>
        public static IEntityWrapper<PluginAssembly> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PluginAssembly> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: plugintype.
        /// </summary>
        public static IEntityWrapper<PluginType> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PluginType> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: plugintypestatistic.
        /// </summary>
        public static IEntityWrapper<PluginTypeStatistic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PluginTypeStatistic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: pricelevel.
        /// </summary>
        public static IEntityWrapper<PriceLevel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PriceLevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: principalattributeaccessmap.
        /// </summary>
        public static IEntityWrapper<PrincipalAttributeAccessMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PrincipalAttributeAccessMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: principalentitymap.
        /// </summary>
        public static IEntityWrapper<PrincipalEntityMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PrincipalEntityMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: principalobjectaccess.
        /// </summary>
        public static IEntityWrapper<PrincipalObjectAccess> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PrincipalObjectAccess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: principalobjectattributeaccess.
        /// </summary>
        public static IEntityWrapper<PrincipalObjectAttributeAccess> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PrincipalObjectAttributeAccess> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: privilege.
        /// </summary>
        public static IEntityWrapper<Privilege> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Privilege> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: product.
        /// </summary>
        public static IEntityWrapper<Product> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Product> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productassociation.
        /// </summary>
        public static IEntityWrapper<ProductAssociation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ProductAssociation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productpricelevel.
        /// </summary>
        public static IEntityWrapper<ProductPriceLevel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ProductPriceLevel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productsalesliterature.
        /// </summary>
        public static IEntityWrapper<ProductSalesLiterature> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ProductSalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: productsubstitute.
        /// </summary>
        public static IEntityWrapper<ProductSubstitute> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ProductSubstitute> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: publisher.
        /// </summary>
        public static IEntityWrapper<Publisher> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Publisher> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: publisheraddress.
        /// </summary>
        public static IEntityWrapper<PublisherAddress> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<PublisherAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: queue.
        /// </summary>
        public static IEntityWrapper<Queue> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Queue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: queueitem.
        /// </summary>
        public static IEntityWrapper<QueueItem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<QueueItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quote.
        /// </summary>
        public static IEntityWrapper<Quote> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Quote> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quoteclose.
        /// </summary>
        public static IEntityWrapper<QuoteClose> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<QuoteClose> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: quotedetail.
        /// </summary>
        public static IEntityWrapper<QuoteDetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<QuoteDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ratingmodel.
        /// </summary>
        public static IEntityWrapper<RatingModel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RatingModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ratingvalue.
        /// </summary>
        public static IEntityWrapper<RatingValue> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RatingValue> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: recurringappointmentmaster.
        /// </summary>
        public static IEntityWrapper<RecurringAppointmentMaster> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RecurringAppointmentMaster> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: relationshiprole.
        /// </summary>
        public static IEntityWrapper<RelationshipRole> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RelationshipRole> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: relationshiprolemap.
        /// </summary>
        public static IEntityWrapper<RelationshipRoleMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RelationshipRoleMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: report.
        /// </summary>
        public static IEntityWrapper<Report> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Report> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: reportcategory.
        /// </summary>
        public static IEntityWrapper<ReportCategory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ReportCategory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: reportentity.
        /// </summary>
        public static IEntityWrapper<ReportEntity> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ReportEntity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: reportlink.
        /// </summary>
        public static IEntityWrapper<ReportLink> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ReportLink> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: reportvisibility.
        /// </summary>
        public static IEntityWrapper<ReportVisibility> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ReportVisibility> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resource.
        /// </summary>
        public static IEntityWrapper<Resource> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Resource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcegroup.
        /// </summary>
        public static IEntityWrapper<ResourceGroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ResourceGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcegroupexpansion.
        /// </summary>
        public static IEntityWrapper<ResourceGroupExpansion> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ResourceGroupExpansion> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: resourcespec.
        /// </summary>
        public static IEntityWrapper<ResourceSpec> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ResourceSpec> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ribboncommand.
        /// </summary>
        public static IEntityWrapper<RibbonCommand> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RibbonCommand> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ribboncontextgroup.
        /// </summary>
        public static IEntityWrapper<RibbonContextGroup> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RibbonContextGroup> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ribboncustomization.
        /// </summary>
        public static IEntityWrapper<RibbonCustomization> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RibbonCustomization> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ribbondiff.
        /// </summary>
        public static IEntityWrapper<RibbonDiff> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RibbonDiff> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ribbonrule.
        /// </summary>
        public static IEntityWrapper<RibbonRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RibbonRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: ribbontabtocommandmap.
        /// </summary>
        public static IEntityWrapper<RibbonTabToCommandMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RibbonTabToCommandMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: role.
        /// </summary>
        public static IEntityWrapper<Role> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Role> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: roletemplate.
        /// </summary>
        public static IEntityWrapper<RoleTemplate> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RoleTemplate> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: rollupfield.
        /// </summary>
        public static IEntityWrapper<RollupField> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RollupField> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: routingrule.
        /// </summary>
        public static IEntityWrapper<RoutingRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RoutingRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: routingruleitem.
        /// </summary>
        public static IEntityWrapper<RoutingRuleItem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<RoutingRuleItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesliterature.
        /// </summary>
        public static IEntityWrapper<SalesLiterature> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SalesLiterature> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesliteratureitem.
        /// </summary>
        public static IEntityWrapper<SalesLiteratureItem> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SalesLiteratureItem> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesorder.
        /// </summary>
        public static IEntityWrapper<SalesOrder> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SalesOrder> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesorderdetail.
        /// </summary>
        public static IEntityWrapper<SalesOrderDetail> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SalesOrderDetail> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: salesprocessinstance.
        /// </summary>
        public static IEntityWrapper<SalesProcessInstance> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SalesProcessInstance> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: savedquery.
        /// </summary>
        public static IEntityWrapper<SavedQuery> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SavedQuery> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: savedqueryvisualization.
        /// </summary>
        public static IEntityWrapper<SavedQueryVisualization> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SavedQueryVisualization> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessage.
        /// </summary>
        public static IEntityWrapper<SdkMessage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessagefilter.
        /// </summary>
        public static IEntityWrapper<SdkMessageFilter> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageFilter> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessagepair.
        /// </summary>
        public static IEntityWrapper<SdkMessagePair> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessagePair> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessageprocessingstep.
        /// </summary>
        public static IEntityWrapper<SdkMessageProcessingStep> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageProcessingStep> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessageprocessingstepimage.
        /// </summary>
        public static IEntityWrapper<SdkMessageProcessingStepImage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageProcessingStepImage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessageprocessingstepsecureconfig.
        /// </summary>
        public static IEntityWrapper<SdkMessageProcessingStepSecureConfig> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageProcessingStepSecureConfig> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessagerequest.
        /// </summary>
        public static IEntityWrapper<SdkMessageRequest> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageRequest> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessagerequestfield.
        /// </summary>
        public static IEntityWrapper<SdkMessageRequestField> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageRequestField> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessageresponse.
        /// </summary>
        public static IEntityWrapper<SdkMessageResponse> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageResponse> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sdkmessageresponsefield.
        /// </summary>
        public static IEntityWrapper<SdkMessageResponseField> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SdkMessageResponseField> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: service.
        /// </summary>
        public static IEntityWrapper<Service> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Service> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: serviceappointment.
        /// </summary>
        public static IEntityWrapper<ServiceAppointment> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ServiceAppointment> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: servicecontractcontacts.
        /// </summary>
        public static IEntityWrapper<ServiceContractContacts> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ServiceContractContacts> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: serviceendpoint.
        /// </summary>
        public static IEntityWrapper<ServiceEndpoint> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<ServiceEndpoint> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sharepointdocumentlocation.
        /// </summary>
        public static IEntityWrapper<SharePointDocumentLocation> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SharePointDocumentLocation> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sharepointsite.
        /// </summary>
        public static IEntityWrapper<SharePointSite> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SharePointSite> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: site.
        /// </summary>
        public static IEntityWrapper<Site> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Site> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sitemap.
        /// </summary>
        public static IEntityWrapper<SiteMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SiteMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: sla.
        /// </summary>
        public static IEntityWrapper<SLA> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SLA> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: socialactivity.
        /// </summary>
        public static IEntityWrapper<SocialActivity> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SocialActivity> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: solution.
        /// </summary>
        public static IEntityWrapper<Solution> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Solution> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: solutioncomponent.
        /// </summary>
        public static IEntityWrapper<SolutionComponent> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SolutionComponent> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: statusmap.
        /// </summary>
        public static IEntityWrapper<StatusMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<StatusMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: stringmap.
        /// </summary>
        public static IEntityWrapper<StringMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<StringMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: subject.
        /// </summary>
        public static IEntityWrapper<Subject> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Subject> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: subscription.
        /// </summary>
        public static IEntityWrapper<Subscription> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Subscription> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: subscriptionmanuallytrackedobject.
        /// </summary>
        public static IEntityWrapper<SubscriptionManuallyTrackedObject> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SubscriptionManuallyTrackedObject> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: subscriptionsyncinfo.
        /// </summary>
        public static IEntityWrapper<SubscriptionSyncInfo> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SubscriptionSyncInfo> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: systemuserbusinessunitentitymap.
        /// </summary>
        public static IEntityWrapper<SystemUserBusinessUnitEntityMap> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<SystemUserBusinessUnitEntityMap> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: task.
        /// </summary>
        public static IEntityWrapper<Task> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Task> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: teammembership.
        /// </summary>
        public static IEntityWrapper<TeamMembership> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TeamMembership> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: template.
        /// </summary>
        public static IEntityWrapper<Template> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Template> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: territory.
        /// </summary>
        public static IEntityWrapper<Territory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Territory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: theme.
        /// </summary>
        public static IEntityWrapper<Theme> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Theme> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: timezonedefinition.
        /// </summary>
        public static IEntityWrapper<TimeZoneDefinition> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TimeZoneDefinition> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: timezonelocalizedname.
        /// </summary>
        public static IEntityWrapper<TimeZoneLocalizedName> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TimeZoneLocalizedName> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: timezonerule.
        /// </summary>
        public static IEntityWrapper<TimeZoneRule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TimeZoneRule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topic.
        /// </summary>
        public static IEntityWrapper<Topic> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Topic> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topichistory.
        /// </summary>
        public static IEntityWrapper<TopicHistory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TopicHistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topicmodel.
        /// </summary>
        public static IEntityWrapper<TopicModel> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TopicModel> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topicmodelconfiguration.
        /// </summary>
        public static IEntityWrapper<TopicModelConfiguration> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TopicModelConfiguration> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: topicmodelexecutionhistory.
        /// </summary>
        public static IEntityWrapper<TopicModelExecutionHistory> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TopicModelExecutionHistory> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: transformationmapping.
        /// </summary>
        public static IEntityWrapper<TransformationMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TransformationMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: transformationparametermapping.
        /// </summary>
        public static IEntityWrapper<TransformationParameterMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<TransformationParameterMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: unresolvedaddress.
        /// </summary>
        public static IEntityWrapper<UnresolvedAddress> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UnresolvedAddress> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: uom.
        /// </summary>
        public static IEntityWrapper<UoM> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UoM> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: uomschedule.
        /// </summary>
        public static IEntityWrapper<UoMSchedule> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UoMSchedule> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: userentityuisettings.
        /// </summary>
        public static IEntityWrapper<UserEntityUISettings> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UserEntityUISettings> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: userfiscalcalendar.
        /// </summary>
        public static IEntityWrapper<UserFiscalCalendar> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UserFiscalCalendar> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: userform.
        /// </summary>
        public static IEntityWrapper<UserForm> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UserForm> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: usermapping.
        /// </summary>
        public static IEntityWrapper<UserMapping> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UserMapping> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: userquery.
        /// </summary>
        public static IEntityWrapper<UserQuery> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UserQuery> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: userqueryvisualization.
        /// </summary>
        public static IEntityWrapper<UserQueryVisualization> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<UserQueryVisualization> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: webresource.
        /// </summary>
        public static IEntityWrapper<WebResource> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WebResource> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: webwizard.
        /// </summary>
        public static IEntityWrapper<WebWizard> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WebWizard> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: wizardaccessprivilege.
        /// </summary>
        public static IEntityWrapper<WizardAccessPrivilege> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WizardAccessPrivilege> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: wizardpage.
        /// </summary>
        public static IEntityWrapper<WizardPage> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WizardPage> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowbinary.
        /// </summary>
        public static IEntityWrapper<workflowbinary> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<workflowbinary> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowdependency.
        /// </summary>
        public static IEntityWrapper<WorkflowDependency> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WorkflowDependency> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowlog.
        /// </summary>
        public static IEntityWrapper<WorkflowLog> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WorkflowLog> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: objectid. Lookup to entity: workflowwaitsubscription.
        /// </summary>
        public static IEntityWrapper<WorkflowWaitSubscription> GetObjectId(this IEntityWrapperRelation<UserEntityInstanceData> wrapper, IColumnSet<WorkflowWaitSubscription> columnSet)
            => wrapper.GetRelated(e => e.ObjectId, columnSet);

    }
    public static class UserFiscalCalendarExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<UserFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<UserFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<UserFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<UserFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: salespersonid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetSalesPersonId(this IEntityWrapperRelation<UserFiscalCalendar> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.SalesPersonId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<UserFiscalCalendar> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class UserMappingExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganizationId(this IEntityWrapperRelation<UserMapping> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<UserMapping> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class UserQueryExt
    {

    }
    public static class UserQueryVisualizationExt
    {
        /// <summary>
        /// Related attribute: webresourceid. Lookup to entity: webresource.
        /// </summary>
        public static IEntityWrapper<WebResource> GetWebResource(this IEntityWrapperRelation<UserQueryVisualization> wrapper, IColumnSet<WebResource> columnSet)
            => wrapper.GetRelated(e => e.WebResourceId, columnSet);

    }
    public static class UserSettingsExt
    {
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<UserSettings> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<UserSettings> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<UserSettings> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<UserSettings> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: transactioncurrencyid. Lookup to entity: transactioncurrency.
        /// </summary>
        public static IEntityWrapper<TransactionCurrency> GetCurrency(this IEntityWrapperRelation<UserSettings> wrapper, IColumnSet<TransactionCurrency> columnSet)
            => wrapper.GetRelated(e => e.TransactionCurrencyId, columnSet);

    }
    public static class WebResourceExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<WebResource> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class WebWizardExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<WebWizard> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);

    }
    public static class WizardAccessPrivilegeExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<WizardAccessPrivilege> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: webwizardid. Lookup to entity: webwizard.
        /// </summary>
        public static IEntityWrapper<WebWizard> GetWizardID(this IEntityWrapperRelation<WizardAccessPrivilege> wrapper, IColumnSet<WebWizard> columnSet)
            => wrapper.GetRelated(e => e.WebWizardId, columnSet);

    }
    public static class WizardPageExt
    {
        /// <summary>
        /// Related attribute: organizationid. Lookup to entity: organization.
        /// </summary>
        public static IEntityWrapper<Organization> GetOrganization(this IEntityWrapperRelation<WizardPage> wrapper, IColumnSet<Organization> columnSet)
            => wrapper.GetRelated(e => e.OrganizationId, columnSet);
        /// <summary>
        /// Related attribute: webwizardid. Lookup to entity: webwizard.
        /// </summary>
        public static IEntityWrapper<WebWizard> GetWizardID(this IEntityWrapperRelation<WizardPage> wrapper, IColumnSet<WebWizard> columnSet)
            => wrapper.GetRelated(e => e.WebWizardId, columnSet);

    }
    public static class WorkflowExt
    {
        /// <summary>
        /// Related attribute: sdkmessageid. Lookup to entity: sdkmessage.
        /// </summary>
        public static IEntityWrapper<SdkMessage> GetSDKMessage(this IEntityWrapperRelation<Workflow> wrapper, IColumnSet<SdkMessage> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageId, columnSet);
        /// <summary>
        /// Related attribute: plugintypeid. Lookup to entity: sdkmessagefilter.
        /// </summary>
        public static IEntityWrapper<SdkMessageFilter> GetPluginTypeId(this IEntityWrapperRelation<Workflow> wrapper, IColumnSet<SdkMessageFilter> columnSet)
            => wrapper.GetRelated(e => e.PluginTypeId, columnSet);
        /// <summary>
        /// Related attribute: activeworkflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetActiveProcessID(this IEntityWrapperRelation<Workflow> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ActiveWorkflowId, columnSet);
        /// <summary>
        /// Related attribute: parentworkflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetParentProcessID(this IEntityWrapperRelation<Workflow> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.ParentWorkflowId, columnSet);

    }
    public static class workflowbinaryExt
    {
        /// <summary>
        /// Related attribute: flowsessionid. Lookup to entity: flowsession.
        /// </summary>
        public static IEntityWrapper<flowsession> GetFlowSessionId(this IEntityWrapperRelation<workflowbinary> wrapper, IColumnSet<flowsession> columnSet)
            => wrapper.GetRelated(e => e.FlowSessionId, columnSet);
        /// <summary>
        /// Related attribute: process. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcessId(this IEntityWrapperRelation<workflowbinary> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.Process, columnSet);

    }
    public static class WorkflowDependencyExt
    {
        /// <summary>
        /// Related attribute: sdkmessageid. Lookup to entity: sdkmessage.
        /// </summary>
        public static IEntityWrapper<SdkMessage> GetSdkMessageId(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<SdkMessage> columnSet)
            => wrapper.GetRelated(e => e.SdkMessageId, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: workflowid. Lookup to entity: workflow.
        /// </summary>
        public static IEntityWrapper<Workflow> GetProcess(this IEntityWrapperRelation<WorkflowDependency> wrapper, IColumnSet<Workflow> columnSet)
            => wrapper.GetRelated(e => e.WorkflowId, columnSet);

    }
    public static class WorkflowLogExt
    {
        /// <summary>
        /// Multi lookup attribute. Related attribute: asyncoperationid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetParentRecord(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.AsyncOperationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: asyncoperationid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetParentRecord(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.AsyncOperationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: childworkflowinstanceid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetChildWorkflowSystemJob(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.ChildWorkflowInstanceId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: childworkflowinstanceid. Lookup to entity: processsession.
        /// </summary>
        public static IEntityWrapper<ProcessSession> GetChildWorkflowSystemJob(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<ProcessSession> columnSet)
            => wrapper.GetRelated(e => e.ChildWorkflowInstanceId, columnSet);
        /// <summary>
        /// Related attribute: owningbusinessunit. Lookup to entity: businessunit.
        /// </summary>
        public static IEntityWrapper<BusinessUnit> GetOwningBusinessUnit(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<BusinessUnit> columnSet)
            => wrapper.GetRelated(e => e.OwningBusinessUnit, columnSet);
        /// <summary>
        /// Related attribute: createdby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedBy(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedBy, columnSet);
        /// <summary>
        /// Related attribute: createdonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetCreatedByDelegate(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.CreatedOnBehalfBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedBy(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedBy, columnSet);
        /// <summary>
        /// Related attribute: modifiedonbehalfby. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetModifiedByDelegate(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.ModifiedOnBehalfBy, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Related attribute: owninguser. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwningUser(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwningUser, columnSet);
        /// <summary>
        /// Related attribute: owningteam. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwningTeam(this IEntityWrapperRelation<WorkflowLog> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwningTeam, columnSet);

    }
    public static class WorkflowWaitSubscriptionExt
    {
        /// <summary>
        /// Related attribute: asyncoperationid. Lookup to entity: asyncoperation.
        /// </summary>
        public static IEntityWrapper<AsyncOperation> GetAsyncOperationId(this IEntityWrapperRelation<WorkflowWaitSubscription> wrapper, IColumnSet<AsyncOperation> columnSet)
            => wrapper.GetRelated(e => e.AsyncOperationId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: systemuser.
        /// </summary>
        public static IEntityWrapper<SystemUser> GetOwner(this IEntityWrapperRelation<WorkflowWaitSubscription> wrapper, IColumnSet<SystemUser> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);
        /// <summary>
        /// Multi lookup attribute. Related attribute: ownerid. Lookup to entity: team.
        /// </summary>
        public static IEntityWrapper<Team> GetOwner(this IEntityWrapperRelation<WorkflowWaitSubscription> wrapper, IColumnSet<Team> columnSet)
            => wrapper.GetRelated(e => e.OwnerId, columnSet);

    }

}
